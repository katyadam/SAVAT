services:
  database:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cia
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cia"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: src/main/docker/Dockerfile.jvm
    environment:
      DB_KIND: postgresql
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_URL: jdbc:postgresql://database:5432/cia
      DB_GENERATION: drop-and-create
      QUARKUS_HTTP_CORS_ORIGINS: http://localhost:8081
      QUARKUS_HTTP_CORS_METHODS: GET,POST,PUT,DELETE,OPTIONS
      QUARKUS_HTTP_CORS_HEADERS: Content-Type
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy

  ir:
    build:
      context: ./IR
      dockerfile: src/main/docker/Dockerfile.jvm
    environment:
      QUARKUS_HTTP_CORS_ORIGINS: http://localhost:8081
      QUARKUS_HTTP_CORS_METHODS: GET,POST,PUT,DELETE,OPTIONS
      QUARKUS_HTTP_CORS_HEADERS: Content-Type
      IR_FILES_PATH: /mnt/irs
    volumes:
      - ./frontend/public/irs:/mnt/irs:ro
    ports:
      - "8082:8082"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - backend

volumes:
  db_data:
