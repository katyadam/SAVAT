{
  "calls": [
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.addConfig(edu.fudan.common.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addConfig(edu.fudan.common.entity.Config, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.addContacts(edu.fudan.common.entity.Contacts, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addContact(edu.fudan.common.entity.Contacts, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserService.createEvent(user.dto.AuthDto)",
      "target": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.createEvent(user.dto.AuthDto)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.addPrice(adminbasic.entity.PriceInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addPrice(adminbasic.entity.PriceInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.addStation(edu.fudan.common.entity.Station, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addStation(edu.fudan.common.entity.Station, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.addTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.deleteConfig(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deleteConfig(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.deleteContacts(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deleteContact(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.deletePrice(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deletePrice(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.deleteStation(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deleteStation(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.deleteTrain(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deleteTrain(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.getAllConfigs(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllConfigs(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.getAllContacts(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllContacts(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.getAllPrices(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllPrices(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.getAllStations(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllStations(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.getAllTrains(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllTrains(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.modifyConfig(edu.fudan.common.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyConfig(edu.fudan.common.entity.Config, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.modifyContacts(edu.fudan.common.entity.Contacts, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyContact(edu.fudan.common.entity.Contacts, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.modifyPrice(adminbasic.entity.PriceInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyPrice(adminbasic.entity.PriceInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.modifyStation(edu.fudan.common.entity.Station, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyStation(edu.fudan.common.entity.Station, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.modifyTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addConfig(edu.fudan.common.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addContact(edu.fudan.common.entity.Contacts, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addPrice(adminbasic.entity.PriceInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addStation(edu.fudan.common.entity.Station, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deleteConfig(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deleteContact(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deletePrice(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deleteStation(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deleteTrain(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllConfigs(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllContacts(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllPrices(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllStations(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllTrains(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyConfig(edu.fudan.common.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyContact(edu.fudan.common.entity.Contacts, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyPrice(adminbasic.entity.PriceInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyStation(edu.fudan.common.entity.Station, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-order-service/org.springframework.http.HttpEntity adminorder.controller.AdminOrderController.addOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.addOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-order-service/org.springframework.http.HttpEntity adminorder.controller.AdminOrderController.deleteOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.deleteOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-order-service/org.springframework.http.HttpEntity adminorder.controller.AdminOrderController.getAllOrders(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.getAllOrders(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-order-service/org.springframework.http.HttpEntity adminorder.controller.AdminOrderController.updateOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.updateOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.addOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-order-service/java.lang.String adminorder.service.AdminOrderServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.addOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-order-service/java.lang.String adminorder.service.AdminOrderServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.deleteOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-order-service/java.lang.String adminorder.service.AdminOrderServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.deleteOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-order-service/java.lang.String adminorder.service.AdminOrderServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.getAllOrders(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-order-service/java.lang.String adminorder.service.AdminOrderServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.getAllOrders(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-order-service/void adminorder.service.AdminOrderServiceImpl$1.<init>(adminorder.service.AdminOrderServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.getAllOrders(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-order-service/java.lang.String adminorder.service.AdminOrderServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.getAllOrders(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-order-service/void adminorder.service.AdminOrderServiceImpl$2.<init>(adminorder.service.AdminOrderServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.updateOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-order-service/java.lang.String adminorder.service.AdminOrderServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.updateOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-order-service/java.lang.String adminorder.service.AdminOrderServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-route-service/org.springframework.http.HttpEntity adminroute.controller.AdminRouteController.addRoute(edu.fudan.common.entity.RouteInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.createAndModifyRoute(edu.fudan.common.entity.RouteInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-route-service/org.springframework.http.HttpEntity adminroute.controller.AdminRouteController.deleteRoute(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.deleteRoute(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-route-service/org.springframework.http.HttpEntity adminroute.controller.AdminRouteController.getAllRoutes(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.getAllRoutes(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.createAndModifyRoute(edu.fudan.common.entity.RouteInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.checkStationsExists(java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.createAndModifyRoute(edu.fudan.common.entity.RouteInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-route-service/java.lang.String adminroute.service.AdminRouteServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.createAndModifyRoute(edu.fudan.common.entity.RouteInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-route-service/void adminroute.service.AdminRouteServiceImpl$1.<init>(adminroute.service.AdminRouteServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.deleteRoute(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-route-service/java.lang.String adminroute.service.AdminRouteServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.getAllRoutes(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-route-service/java.lang.String adminroute.service.AdminRouteServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.checkStationsExists(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-route-service/java.lang.String adminroute.service.AdminRouteServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/org.springframework.http.HttpEntity admintravel.controller.AdminTravelController.addTravel(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.addTravel(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/org.springframework.http.HttpEntity admintravel.controller.AdminTravelController.deleteTravel(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.deleteTravel(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/org.springframework.http.HttpEntity admintravel.controller.AdminTravelController.getAllTravels(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.getAllTravels(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/org.springframework.http.HttpEntity admintravel.controller.AdminTravelController.updateTravel(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.updateTravel(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.addTravel(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.checkTravelInfo(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.addTravel(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/java.lang.String admintravel.service.AdminTravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.addTravel(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/java.lang.String admintravel.service.AdminTravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.deleteTravel(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/java.lang.String admintravel.service.AdminTravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.deleteTravel(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/java.lang.String admintravel.service.AdminTravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.getAllTravels(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/java.lang.String admintravel.service.AdminTravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.getAllTravels(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/void admintravel.service.AdminTravelServiceImpl$1.<init>(admintravel.service.AdminTravelServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.getAllTravels(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/java.lang.String admintravel.service.AdminTravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.getAllTravels(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/void admintravel.service.AdminTravelServiceImpl$2.<init>(admintravel.service.AdminTravelServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.updateTravel(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.checkTravelInfo(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.updateTravel(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/java.lang.String admintravel.service.AdminTravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.updateTravel(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/java.lang.String admintravel.service.AdminTravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.checkTravelInfo(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.checkStationsExists(java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.checkTravelInfo(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/edu.fudan.common.entity.TrainType admintravel.service.AdminTravelServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.checkTravelInfo(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/edu.fudan.common.entity.Route admintravel.service.AdminTravelServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.checkStationsExists(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/java.lang.String admintravel.service.AdminTravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.entity.TrainType admintravel.service.AdminTravelServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/java.lang.String admintravel.service.AdminTravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.entity.Route admintravel.service.AdminTravelServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-travel-service/java.lang.String admintravel.service.AdminTravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-user-service/org.springframework.http.HttpEntity adminuser.controller.AdminUserController.addUser(adminuser.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.addUser(adminuser.dto.UserDto, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-user-service/org.springframework.http.HttpEntity adminuser.controller.AdminUserController.deleteUser(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.deleteUser(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-user-service/org.springframework.http.HttpEntity adminuser.controller.AdminUserController.getAllUsers(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.getAllUsers(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-user-service/org.springframework.http.HttpEntity adminuser.controller.AdminUserController.updateUser(adminuser.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.updateUser(adminuser.dto.UserDto, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.addUser(adminuser.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-user-service/java.lang.String adminuser.service.AdminUserServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.addUser(adminuser.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-user-service/void adminuser.service.AdminUserServiceImpl$2.<init>(adminuser.service.AdminUserServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.deleteUser(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-user-service/java.lang.String adminuser.service.AdminUserServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.getAllUsers(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-user-service/java.lang.String adminuser.service.AdminUserServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.getAllUsers(org.springframework.http.HttpHeaders)",
      "target": "ts-admin-user-service/void adminuser.service.AdminUserServiceImpl$1.<init>(adminuser.service.AdminUserServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.updateUser(adminuser.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-admin-user-service/java.lang.String adminuser.service.AdminUserServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/org.springframework.http.HttpEntity assurance.controller.AssuranceController.createNewAssurance(int, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.create(int, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/org.springframework.http.HttpEntity assurance.controller.AssuranceController.deleteAssurance(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.deleteById(java.util.UUID, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/org.springframework.http.HttpEntity assurance.controller.AssuranceController.deleteAssuranceByOrderId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.deleteByOrderId(java.util.UUID, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/org.springframework.http.HttpEntity assurance.controller.AssuranceController.findAssuranceByOrderId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.findAssuranceByOrderId(java.util.UUID, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/org.springframework.http.HttpEntity assurance.controller.AssuranceController.getAllAssuranceType(org.springframework.http.HttpHeaders)",
      "target": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.getAllAssuranceTypes(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/org.springframework.http.HttpEntity assurance.controller.AssuranceController.getAllAssurances(org.springframework.http.HttpHeaders)",
      "target": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.getAllAssurances(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/org.springframework.http.HttpEntity assurance.controller.AssuranceController.getAssuranceById(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.findAssuranceById(java.util.UUID, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.Assurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/boolean assurance.entity.Assurance.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.Assurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.Assurance.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.Assurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.Assurance.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.Assurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.Assurance.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.Assurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.Assurance.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.Assurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/assurance.entity.AssuranceType assurance.entity.Assurance.getType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.Assurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/assurance.entity.AssuranceType assurance.entity.Assurance.getType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/int assurance.entity.Assurance.hashCode(empty)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.Assurance.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/int assurance.entity.Assurance.hashCode(empty)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.Assurance.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/int assurance.entity.Assurance.hashCode(empty)",
      "target": "ts-assurance-service/assurance.entity.AssuranceType assurance.entity.Assurance.getType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/java.lang.String assurance.entity.Assurance.toString(empty)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.Assurance.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/java.lang.String assurance.entity.Assurance.toString(empty)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.Assurance.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/java.lang.String assurance.entity.Assurance.toString(empty)",
      "target": "ts-assurance-service/assurance.entity.AssuranceType assurance.entity.Assurance.getType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.AssuranceTypeBean.equals(java.lang.Object)",
      "target": "ts-assurance-service/boolean assurance.entity.AssuranceTypeBean.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.AssuranceTypeBean.equals(java.lang.Object)",
      "target": "ts-assurance-service/int assurance.entity.AssuranceTypeBean.getIndex(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.AssuranceTypeBean.equals(java.lang.Object)",
      "target": "ts-assurance-service/int assurance.entity.AssuranceTypeBean.getIndex(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.AssuranceTypeBean.equals(java.lang.Object)",
      "target": "ts-assurance-service/double assurance.entity.AssuranceTypeBean.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.AssuranceTypeBean.equals(java.lang.Object)",
      "target": "ts-assurance-service/double assurance.entity.AssuranceTypeBean.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.AssuranceTypeBean.equals(java.lang.Object)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.AssuranceTypeBean.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.AssuranceTypeBean.equals(java.lang.Object)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.AssuranceTypeBean.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/int assurance.entity.AssuranceTypeBean.hashCode(empty)",
      "target": "ts-assurance-service/int assurance.entity.AssuranceTypeBean.getIndex(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/int assurance.entity.AssuranceTypeBean.hashCode(empty)",
      "target": "ts-assurance-service/double assurance.entity.AssuranceTypeBean.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/int assurance.entity.AssuranceTypeBean.hashCode(empty)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.AssuranceTypeBean.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/java.lang.String assurance.entity.AssuranceTypeBean.toString(empty)",
      "target": "ts-assurance-service/int assurance.entity.AssuranceTypeBean.getIndex(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/java.lang.String assurance.entity.AssuranceTypeBean.toString(empty)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.AssuranceTypeBean.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/java.lang.String assurance.entity.AssuranceTypeBean.toString(empty)",
      "target": "ts-assurance-service/double assurance.entity.AssuranceTypeBean.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.PlainAssurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/boolean assurance.entity.PlainAssurance.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.PlainAssurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/int assurance.entity.PlainAssurance.getTypeIndex(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.PlainAssurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/int assurance.entity.PlainAssurance.getTypeIndex(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.PlainAssurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/double assurance.entity.PlainAssurance.getTypePrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.PlainAssurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/double assurance.entity.PlainAssurance.getTypePrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.PlainAssurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.PlainAssurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.PlainAssurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.PlainAssurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.PlainAssurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.getTypeName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/boolean assurance.entity.PlainAssurance.equals(java.lang.Object)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.getTypeName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/int assurance.entity.PlainAssurance.hashCode(empty)",
      "target": "ts-assurance-service/int assurance.entity.PlainAssurance.getTypeIndex(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/int assurance.entity.PlainAssurance.hashCode(empty)",
      "target": "ts-assurance-service/double assurance.entity.PlainAssurance.getTypePrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/int assurance.entity.PlainAssurance.hashCode(empty)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/int assurance.entity.PlainAssurance.hashCode(empty)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/int assurance.entity.PlainAssurance.hashCode(empty)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.getTypeName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.toString(empty)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.toString(empty)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.toString(empty)",
      "target": "ts-assurance-service/int assurance.entity.PlainAssurance.getTypeIndex(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.toString(empty)",
      "target": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.getTypeName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.toString(empty)",
      "target": "ts-assurance-service/double assurance.entity.PlainAssurance.getTypePrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.create(int, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-assurance-service/assurance.entity.AssuranceType assurance.entity.AssuranceType.getTypeByIndex(int)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.create(int, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-assurance-service/void assurance.entity.Assurance.<init>(java.lang.String, java.lang.String, assurance.entity.AssuranceType)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.getAllAssuranceTypes(org.springframework.http.HttpHeaders)",
      "target": "ts-assurance-service/assurance.entity.AssuranceType[] assurance.entity.AssuranceType.values(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-assurance-service/assurance.entity.AssuranceType assurance.entity.AssuranceType.getTypeByIndex(int)",
      "target": "ts-assurance-service/assurance.entity.AssuranceType[] assurance.entity.AssuranceType.values(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/org.springframework.http.HttpEntity auth.controller.AuthController.createDefaultUser(auth.dto.AuthDto)",
      "target": "ts-auth-service/auth.entity.User auth.service.impl.UserServiceImpl.createDefaultAuthUser(auth.dto.AuthDto)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/org.springframework.http.ResponseEntity auth.controller.UserController.deleteUserById(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-auth-service/edu.fudan.common.util.Response auth.service.impl.UserServiceImpl.deleteByUserId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/org.springframework.http.ResponseEntity auth.controller.UserController.getAllUser(org.springframework.http.HttpHeaders)",
      "target": "ts-auth-service/java.util.List auth.service.impl.UserServiceImpl.getAllUser(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/org.springframework.http.ResponseEntity auth.controller.UserController.getToken(auth.dto.BasicAuthDto, org.springframework.http.HttpHeaders)",
      "target": "ts-auth-service/edu.fudan.common.util.Response auth.service.impl.TokenServiceImpl.getToken(auth.dto.BasicAuthDto, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/boolean auth.dto.TokenDto.equals(java.lang.Object)",
      "target": "ts-auth-service/boolean auth.dto.TokenDto.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/boolean auth.dto.TokenDto.equals(java.lang.Object)",
      "target": "ts-auth-service/java.lang.String auth.dto.TokenDto.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/boolean auth.dto.TokenDto.equals(java.lang.Object)",
      "target": "ts-auth-service/java.lang.String auth.dto.TokenDto.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/boolean auth.dto.TokenDto.equals(java.lang.Object)",
      "target": "ts-auth-service/java.lang.String auth.dto.TokenDto.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/boolean auth.dto.TokenDto.equals(java.lang.Object)",
      "target": "ts-auth-service/java.lang.String auth.dto.TokenDto.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/boolean auth.dto.TokenDto.equals(java.lang.Object)",
      "target": "ts-auth-service/java.lang.String auth.dto.TokenDto.getToken(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/boolean auth.dto.TokenDto.equals(java.lang.Object)",
      "target": "ts-auth-service/java.lang.String auth.dto.TokenDto.getToken(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/int auth.dto.TokenDto.hashCode(empty)",
      "target": "ts-auth-service/java.lang.String auth.dto.TokenDto.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/int auth.dto.TokenDto.hashCode(empty)",
      "target": "ts-auth-service/java.lang.String auth.dto.TokenDto.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/int auth.dto.TokenDto.hashCode(empty)",
      "target": "ts-auth-service/java.lang.String auth.dto.TokenDto.getToken(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/java.lang.String auth.dto.TokenDto.toString(empty)",
      "target": "ts-auth-service/java.lang.String auth.dto.TokenDto.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/java.lang.String auth.dto.TokenDto.toString(empty)",
      "target": "ts-auth-service/java.lang.String auth.dto.TokenDto.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/java.lang.String auth.dto.TokenDto.toString(empty)",
      "target": "ts-auth-service/java.lang.String auth.dto.TokenDto.getToken(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/boolean auth.entity.User.equals(java.lang.Object)",
      "target": "ts-auth-service/boolean auth.entity.User.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/boolean auth.entity.User.equals(java.lang.Object)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/boolean auth.entity.User.equals(java.lang.Object)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/boolean auth.entity.User.equals(java.lang.Object)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/boolean auth.entity.User.equals(java.lang.Object)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/boolean auth.entity.User.equals(java.lang.Object)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getPassword(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/boolean auth.entity.User.equals(java.lang.Object)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getPassword(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/boolean auth.entity.User.equals(java.lang.Object)",
      "target": "ts-auth-service/java.util.Set auth.entity.User.getRoles(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/boolean auth.entity.User.equals(java.lang.Object)",
      "target": "ts-auth-service/java.util.Set auth.entity.User.getRoles(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/int auth.entity.User.hashCode(empty)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/int auth.entity.User.hashCode(empty)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/int auth.entity.User.hashCode(empty)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getPassword(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/int auth.entity.User.hashCode(empty)",
      "target": "ts-auth-service/java.util.Set auth.entity.User.getRoles(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/java.lang.String auth.entity.User.toString(empty)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/java.lang.String auth.entity.User.toString(empty)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/java.lang.String auth.entity.User.toString(empty)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getPassword(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/java.lang.String auth.entity.User.toString(empty)",
      "target": "ts-auth-service/java.util.Set auth.entity.User.getRoles(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/auth.entity.User auth.service.impl.UserServiceImpl.createDefaultAuthUser(auth.dto.AuthDto)",
      "target": "ts-auth-service/auth.entity.User$UserBuilder auth.entity.User.builder(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/auth.entity.User auth.service.impl.UserServiceImpl.createDefaultAuthUser(auth.dto.AuthDto)",
      "target": "ts-auth-service/auth.entity.User$UserBuilder auth.entity.User$UserBuilder.userId(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/auth.entity.User auth.service.impl.UserServiceImpl.createDefaultAuthUser(auth.dto.AuthDto)",
      "target": "ts-auth-service/auth.entity.User$UserBuilder auth.entity.User$UserBuilder.username(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/auth.entity.User auth.service.impl.UserServiceImpl.createDefaultAuthUser(auth.dto.AuthDto)",
      "target": "ts-auth-service/auth.entity.User$UserBuilder auth.entity.User$UserBuilder.password(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/auth.entity.User auth.service.impl.UserServiceImpl.createDefaultAuthUser(auth.dto.AuthDto)",
      "target": "ts-auth-service/auth.entity.User$UserBuilder auth.entity.User$UserBuilder.roles(java.util.Set)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/auth.entity.User auth.service.impl.UserServiceImpl.createDefaultAuthUser(auth.dto.AuthDto)",
      "target": "ts-auth-service/auth.entity.User auth.entity.User$UserBuilder.build(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/auth.entity.User auth.service.impl.UserServiceImpl.createDefaultAuthUser(auth.dto.AuthDto)",
      "target": "ts-auth-service/void auth.service.impl.UserServiceImpl.checkUserCreateInfo(auth.entity.User)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/edu.fudan.common.util.Response auth.service.impl.TokenServiceImpl.getToken(auth.dto.BasicAuthDto, org.springframework.http.HttpHeaders)",
      "target": "ts-auth-service/java.lang.String auth.service.impl.TokenServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/edu.fudan.common.util.Response auth.service.impl.TokenServiceImpl.getToken(auth.dto.BasicAuthDto, org.springframework.http.HttpHeaders)",
      "target": "ts-auth-service/void auth.service.impl.TokenServiceImpl$$Lambda/0x447c4079ca22eac3939c6ddfb8267890.<init>(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/edu.fudan.common.util.Response auth.service.impl.TokenServiceImpl.getToken(auth.dto.BasicAuthDto, org.springframework.http.HttpHeaders)",
      "target": "ts-auth-service/void auth.dto.TokenDto.<init>(java.lang.String, java.lang.String, java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/auth.entity.User auth.entity.User$UserBuilder.build(empty)",
      "target": "ts-auth-service/void auth.entity.User.<init>(java.lang.String, java.lang.String, java.lang.String, java.util.Set)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/void auth.service.impl.UserServiceImpl.checkUserCreateInfo(auth.entity.User)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/void auth.service.impl.UserServiceImpl.checkUserCreateInfo(auth.entity.User)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/void auth.service.impl.UserServiceImpl.checkUserCreateInfo(auth.entity.User)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/void auth.service.impl.UserServiceImpl.checkUserCreateInfo(auth.entity.User)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/void auth.service.impl.UserServiceImpl.checkUserCreateInfo(auth.entity.User)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getPassword(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/void auth.service.impl.UserServiceImpl.checkUserCreateInfo(auth.entity.User)",
      "target": "ts-auth-service/java.lang.String auth.entity.User.getPassword(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/void auth.service.impl.UserServiceImpl.checkUserCreateInfo(auth.entity.User)",
      "target": "ts-auth-service/java.util.Set auth.entity.User.getRoles(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/void auth.service.impl.UserServiceImpl.checkUserCreateInfo(auth.entity.User)",
      "target": "ts-auth-service/java.util.Set auth.entity.User.getRoles(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-auth-service/java.lang.Object auth.service.impl.TokenServiceImpl$$Lambda/0x447c4079ca22eac3939c6ddfb8267890.get(empty)",
      "target": "ts-auth-service/auth.exception.UserOperationException auth.service.impl.TokenServiceImpl.lambda$getToken$0(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/org.springframework.http.HttpEntity fdse.microservice.controller.BasicController.queryForStationId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForStationId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/org.springframework.http.HttpEntity fdse.microservice.controller.BasicController.queryForTravel(edu.fudan.common.entity.Travel, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForTravel(edu.fudan.common.entity.Travel, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/org.springframework.http.HttpEntity fdse.microservice.controller.BasicController.queryForTravels(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForTravels(java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForStationId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/java.lang.String fdse.microservice.service.BasicServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForTravel(edu.fudan.common.entity.Travel, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/boolean fdse.microservice.service.BasicServiceImpl.checkStationExists(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForTravel(edu.fudan.common.entity.Travel, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/boolean fdse.microservice.service.BasicServiceImpl.checkStationExists(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForTravel(edu.fudan.common.entity.Travel, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/edu.fudan.common.entity.TrainType fdse.microservice.service.BasicServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForTravel(edu.fudan.common.entity.Travel, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/edu.fudan.common.entity.Route fdse.microservice.service.BasicServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForTravel(edu.fudan.common.entity.Travel, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/edu.fudan.common.entity.PriceConfig fdse.microservice.service.BasicServiceImpl.queryPriceConfigByRouteIdAndTrainType(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForTravels(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/java.util.Map fdse.microservice.service.BasicServiceImpl.checkStationsExists(java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForTravels(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/java.util.List fdse.microservice.service.BasicServiceImpl.queryTrainTypeByNames(java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForTravels(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/java.util.List fdse.microservice.service.BasicServiceImpl.getRoutesByRouteIds(java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForTravels(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/java.util.Map fdse.microservice.service.BasicServiceImpl.queryPriceConfigByRouteIdsAndTrainTypes(java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/boolean fdse.microservice.service.BasicServiceImpl.checkStationExists(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/java.lang.String fdse.microservice.service.BasicServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/edu.fudan.common.entity.TrainType fdse.microservice.service.BasicServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/java.lang.String fdse.microservice.service.BasicServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/edu.fudan.common.entity.Route fdse.microservice.service.BasicServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/java.lang.String fdse.microservice.service.BasicServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/edu.fudan.common.entity.PriceConfig fdse.microservice.service.BasicServiceImpl.queryPriceConfigByRouteIdAndTrainType(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/java.lang.String fdse.microservice.service.BasicServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/java.util.Map fdse.microservice.service.BasicServiceImpl.checkStationsExists(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/java.lang.String fdse.microservice.service.BasicServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/java.util.List fdse.microservice.service.BasicServiceImpl.queryTrainTypeByNames(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/java.lang.String fdse.microservice.service.BasicServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/java.util.List fdse.microservice.service.BasicServiceImpl.getRoutesByRouteIds(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/java.lang.String fdse.microservice.service.BasicServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/java.util.Map fdse.microservice.service.BasicServiceImpl.queryPriceConfigByRouteIdsAndTrainTypes(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/java.lang.String fdse.microservice.service.BasicServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-basic-service/java.util.Map fdse.microservice.service.BasicServiceImpl.queryPriceConfigByRouteIdsAndTrainTypes(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/void fdse.microservice.service.BasicServiceImpl$1.<init>(fdse.microservice.service.BasicServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/org.springframework.http.HttpEntity cancel.controller.CancelController.calculate(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.calculateRefund(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/org.springframework.http.HttpEntity cancel.controller.CancelController.cancelTicket(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.calculateRefund(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getOrderByIdFromOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.calculateRefund(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/java.lang.String cancel.service.CancelServiceImpl.calculateRefund(edu.fudan.common.entity.Order)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.calculateRefund(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getOrderByIdFromOrderOther(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.calculateRefund(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/java.lang.String cancel.service.CancelServiceImpl.calculateRefund(edu.fudan.common.entity.Order)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getOrderByIdFromOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelFromOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/java.lang.String cancel.service.CancelServiceImpl.calculateRefund(edu.fudan.common.entity.Order)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/boolean cancel.service.CancelServiceImpl.drawbackMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getAccount(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getOrderByIdFromOrderOther(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelFromOtherOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/java.lang.String cancel.service.CancelServiceImpl.calculateRefund(edu.fudan.common.entity.Order)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/boolean cancel.service.CancelServiceImpl.drawbackMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getOrderByIdFromOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/org.springframework.http.HttpHeaders cancel.service.CancelServiceImpl.getAuthorizationHeadersFrom(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getOrderByIdFromOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/java.lang.String cancel.service.CancelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getOrderByIdFromOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/void cancel.service.CancelServiceImpl$2.<init>(cancel.service.CancelServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getOrderByIdFromOrderOther(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/org.springframework.http.HttpHeaders cancel.service.CancelServiceImpl.getAuthorizationHeadersFrom(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getOrderByIdFromOrderOther(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/java.lang.String cancel.service.CancelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getOrderByIdFromOrderOther(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/void cancel.service.CancelServiceImpl$3.<init>(cancel.service.CancelServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelFromOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/org.springframework.http.HttpHeaders cancel.service.CancelServiceImpl.getAuthorizationHeadersFrom(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelFromOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/java.lang.String cancel.service.CancelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/boolean cancel.service.CancelServiceImpl.drawbackMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/org.springframework.http.HttpHeaders cancel.service.CancelServiceImpl.getAuthorizationHeadersFrom(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/boolean cancel.service.CancelServiceImpl.drawbackMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/java.lang.String cancel.service.CancelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getAccount(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/org.springframework.http.HttpHeaders cancel.service.CancelServiceImpl.getAuthorizationHeadersFrom(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getAccount(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/java.lang.String cancel.service.CancelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getAccount(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/void cancel.service.CancelServiceImpl$1.<init>(cancel.service.CancelServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelFromOtherOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/org.springframework.http.HttpHeaders cancel.service.CancelServiceImpl.getAuthorizationHeadersFrom(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelFromOtherOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-cancel-service/java.lang.String cancel.service.CancelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.createConfig(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.createConfig(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.create(config.entity.Config, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.deleteConfig(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.delete(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.queryAll(org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.queryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.query(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.updateConfig(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.updateConfig(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.update(config.entity.Config, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/boolean config.entity.Config.equals(java.lang.Object)",
      "target": "ts-config-service/boolean config.entity.Config.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/boolean config.entity.Config.equals(java.lang.Object)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/boolean config.entity.Config.equals(java.lang.Object)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/boolean config.entity.Config.equals(java.lang.Object)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getValue(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/boolean config.entity.Config.equals(java.lang.Object)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getValue(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/boolean config.entity.Config.equals(java.lang.Object)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getDescription(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/boolean config.entity.Config.equals(java.lang.Object)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getDescription(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/int config.entity.Config.hashCode(empty)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/int config.entity.Config.hashCode(empty)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getValue(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/int config.entity.Config.hashCode(empty)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getDescription(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/java.lang.String config.entity.Config.toString(empty)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/java.lang.String config.entity.Config.toString(empty)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getValue(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/java.lang.String config.entity.Config.toString(empty)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getDescription(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.create(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.create(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.create(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.create(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.create(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getValue(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.create(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getDescription(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.create(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/void config.entity.Config.<init>(java.lang.String, java.lang.String, java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.update(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.update(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.update(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.update(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getValue(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.update(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/java.lang.String config.entity.Config.getDescription(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.update(config.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/void config.entity.Config.<init>(java.lang.String, java.lang.String, java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/org.springframework.http.HttpEntity consignprice.controller.ConsignPriceController.getPriceByWeightAndRegion(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.getPriceByWeightAndRegion(double, boolean, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/org.springframework.http.HttpEntity consignprice.controller.ConsignPriceController.getPriceConfig(org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.getPriceConfig(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/org.springframework.http.HttpEntity consignprice.controller.ConsignPriceController.getPriceInfo(org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.queryPriceInformation(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/org.springframework.http.HttpEntity consignprice.controller.ConsignPriceController.modifyPriceConfig(consignprice.entity.ConsignPrice, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.createAndModifyPrice(consignprice.entity.ConsignPrice, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/boolean consignprice.entity.ConsignPrice.equals(java.lang.Object)",
      "target": "ts-consign-price-service/boolean consignprice.entity.ConsignPrice.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/boolean consignprice.entity.ConsignPrice.equals(java.lang.Object)",
      "target": "ts-consign-price-service/int consignprice.entity.ConsignPrice.getIndex(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/boolean consignprice.entity.ConsignPrice.equals(java.lang.Object)",
      "target": "ts-consign-price-service/int consignprice.entity.ConsignPrice.getIndex(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/boolean consignprice.entity.ConsignPrice.equals(java.lang.Object)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getInitialWeight(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/boolean consignprice.entity.ConsignPrice.equals(java.lang.Object)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getInitialWeight(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/boolean consignprice.entity.ConsignPrice.equals(java.lang.Object)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getInitialPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/boolean consignprice.entity.ConsignPrice.equals(java.lang.Object)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getInitialPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/boolean consignprice.entity.ConsignPrice.equals(java.lang.Object)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getWithinPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/boolean consignprice.entity.ConsignPrice.equals(java.lang.Object)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getWithinPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/boolean consignprice.entity.ConsignPrice.equals(java.lang.Object)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getBeyondPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/boolean consignprice.entity.ConsignPrice.equals(java.lang.Object)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getBeyondPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/boolean consignprice.entity.ConsignPrice.equals(java.lang.Object)",
      "target": "ts-consign-price-service/java.lang.String consignprice.entity.ConsignPrice.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/boolean consignprice.entity.ConsignPrice.equals(java.lang.Object)",
      "target": "ts-consign-price-service/java.lang.String consignprice.entity.ConsignPrice.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/int consignprice.entity.ConsignPrice.hashCode(empty)",
      "target": "ts-consign-price-service/int consignprice.entity.ConsignPrice.getIndex(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/int consignprice.entity.ConsignPrice.hashCode(empty)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getInitialWeight(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/int consignprice.entity.ConsignPrice.hashCode(empty)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getInitialPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/int consignprice.entity.ConsignPrice.hashCode(empty)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getWithinPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/int consignprice.entity.ConsignPrice.hashCode(empty)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getBeyondPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/int consignprice.entity.ConsignPrice.hashCode(empty)",
      "target": "ts-consign-price-service/java.lang.String consignprice.entity.ConsignPrice.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/java.lang.String consignprice.entity.ConsignPrice.toString(empty)",
      "target": "ts-consign-price-service/java.lang.String consignprice.entity.ConsignPrice.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/java.lang.String consignprice.entity.ConsignPrice.toString(empty)",
      "target": "ts-consign-price-service/int consignprice.entity.ConsignPrice.getIndex(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/java.lang.String consignprice.entity.ConsignPrice.toString(empty)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getInitialWeight(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/java.lang.String consignprice.entity.ConsignPrice.toString(empty)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getInitialPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/java.lang.String consignprice.entity.ConsignPrice.toString(empty)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getWithinPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/java.lang.String consignprice.entity.ConsignPrice.toString(empty)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getBeyondPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.createAndModifyPrice(consignprice.entity.ConsignPrice, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/java.lang.String consignprice.entity.ConsignPrice.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.createAndModifyPrice(consignprice.entity.ConsignPrice, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/void consignprice.entity.ConsignPrice.setId(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.createAndModifyPrice(consignprice.entity.ConsignPrice, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/void consignprice.entity.ConsignPrice.setIndex(int)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.createAndModifyPrice(consignprice.entity.ConsignPrice, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getInitialPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.createAndModifyPrice(consignprice.entity.ConsignPrice, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/void consignprice.entity.ConsignPrice.setInitialPrice(double)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.createAndModifyPrice(consignprice.entity.ConsignPrice, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getInitialWeight(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.createAndModifyPrice(consignprice.entity.ConsignPrice, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/void consignprice.entity.ConsignPrice.setInitialWeight(double)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.createAndModifyPrice(consignprice.entity.ConsignPrice, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getWithinPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.createAndModifyPrice(consignprice.entity.ConsignPrice, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/void consignprice.entity.ConsignPrice.setWithinPrice(double)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.createAndModifyPrice(consignprice.entity.ConsignPrice, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getBeyondPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.createAndModifyPrice(consignprice.entity.ConsignPrice, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/void consignprice.entity.ConsignPrice.setBeyondPrice(double)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/org.springframework.http.HttpEntity consign.controller.ConsignController.findByAccountId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.queryByAccountId(java.util.UUID, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/org.springframework.http.HttpEntity consign.controller.ConsignController.findByConsignee(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.queryByConsignee(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/org.springframework.http.HttpEntity consign.controller.ConsignController.findByOrderId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.queryByOrderId(java.util.UUID, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/org.springframework.http.HttpEntity consign.controller.ConsignController.insertConsign(consign.entity.Consign, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.insertConsignRecord(consign.entity.Consign, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/org.springframework.http.HttpEntity consign.controller.ConsignController.updateConsign(consign.entity.Consign, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.updateConsignRecord(consign.entity.Consign, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/boolean consign.entity.ConsignRecord.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/double consign.entity.ConsignRecord.getWeight(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/double consign.entity.ConsignRecord.getWeight(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/double consign.entity.ConsignRecord.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/double consign.entity.ConsignRecord.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getAccountId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getAccountId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getHandleDate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getHandleDate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getTargetDate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getTargetDate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getFrom(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getFrom(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getTo(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getTo(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getConsignee(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getConsignee(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getPhone(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getPhone(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/int consign.entity.ConsignRecord.hashCode(empty)",
      "target": "ts-consign-service/double consign.entity.ConsignRecord.getWeight(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/int consign.entity.ConsignRecord.hashCode(empty)",
      "target": "ts-consign-service/double consign.entity.ConsignRecord.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/int consign.entity.ConsignRecord.hashCode(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/int consign.entity.ConsignRecord.hashCode(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/int consign.entity.ConsignRecord.hashCode(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getAccountId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/int consign.entity.ConsignRecord.hashCode(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getHandleDate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/int consign.entity.ConsignRecord.hashCode(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getTargetDate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/int consign.entity.ConsignRecord.hashCode(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getFrom(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/int consign.entity.ConsignRecord.hashCode(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getTo(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/int consign.entity.ConsignRecord.hashCode(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getConsignee(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/int consign.entity.ConsignRecord.hashCode(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getPhone(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.toString(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.toString(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.toString(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getAccountId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.toString(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getHandleDate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.toString(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getTargetDate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.toString(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getFrom(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.toString(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getTo(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.toString(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getConsignee(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.toString(empty)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getPhone(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.toString(empty)",
      "target": "ts-consign-service/double consign.entity.ConsignRecord.getWeight(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.toString(empty)",
      "target": "ts-consign-service/double consign.entity.ConsignRecord.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.insertConsignRecord(consign.entity.Consign, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-service/java.lang.String consign.service.ConsignServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.insertConsignRecord(consign.entity.Consign, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-service/void consign.service.ConsignServiceImpl$1.<init>(consign.service.ConsignServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.insertConsignRecord(consign.entity.Consign, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.toString(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.updateConsignRecord(consign.entity.Consign, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.insertConsignRecord(consign.entity.Consign, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.updateConsignRecord(consign.entity.Consign, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-service/java.lang.String consign.service.ConsignServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.updateConsignRecord(consign.entity.Consign, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-service/void consign.service.ConsignServiceImpl$2.<init>(consign.service.ConsignServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-contacts-service/org.springframework.http.ResponseEntity contacts.controller.ContactsController.createNewContacts(contacts.entity.Contacts, org.springframework.http.HttpHeaders)",
      "target": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsServiceImpl.create(contacts.entity.Contacts, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.createNewContactsAdmin(contacts.entity.Contacts, org.springframework.http.HttpHeaders)",
      "target": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsServiceImpl.createContacts(contacts.entity.Contacts, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.deleteContacts(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsServiceImpl.delete(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.findContactsByAccountId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsServiceImpl.findContactsByAccountId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.getAllContacts(org.springframework.http.HttpHeaders)",
      "target": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsServiceImpl.getAllContacts(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.getContactsByContactsId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsServiceImpl.findContactsById(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.modifyContacts(contacts.entity.Contacts, org.springframework.http.HttpHeaders)",
      "target": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsServiceImpl.modify(contacts.entity.Contacts, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsServiceImpl.modify(contacts.entity.Contacts, org.springframework.http.HttpHeaders)",
      "target": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsServiceImpl.findContactsById(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-execute-service/org.springframework.http.HttpEntity execute.controller.ExecuteControlller.collectTicket(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.ticketCollect(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-execute-service/org.springframework.http.HttpEntity execute.controller.ExecuteControlller.executeTicket(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.ticketExecute(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.ticketCollect(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.ticketCollect(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.executeOrder(java.lang.String, int, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.ticketCollect(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrderOther(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.ticketCollect(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.executeOrderOther(java.lang.String, int, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.ticketExecute(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.ticketExecute(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.executeOrder(java.lang.String, int, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.ticketExecute(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrderOther(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.ticketExecute(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.executeOrderOther(java.lang.String, int, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-execute-service/java.lang.String execute.serivce.ExecuteServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-execute-service/void execute.serivce.ExecuteServiceImpl$1.<init>(execute.serivce.ExecuteServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.executeOrder(java.lang.String, int, org.springframework.http.HttpHeaders)",
      "target": "ts-execute-service/java.lang.String execute.serivce.ExecuteServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrderOther(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-execute-service/java.lang.String execute.serivce.ExecuteServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrderOther(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-execute-service/void execute.serivce.ExecuteServiceImpl$2.<init>(execute.serivce.ExecuteServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.executeOrderOther(java.lang.String, int, org.springframework.http.HttpHeaders)",
      "target": "ts-execute-service/java.lang.String execute.serivce.ExecuteServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-delivery-service/org.springframework.http.HttpEntity food_delivery.controller.FoodDeliveryController.createFoodDeliveryOrder(food_delivery.entity.FoodDeliveryOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.createFoodDeliveryOrder(food_delivery.entity.FoodDeliveryOrder, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-delivery-service/org.springframework.http.HttpEntity food_delivery.controller.FoodDeliveryController.deleteFoodDeliveryOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.deleteFoodDeliveryOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-delivery-service/org.springframework.http.HttpEntity food_delivery.controller.FoodDeliveryController.getAllFoodDeliveryOrders(org.springframework.http.HttpHeaders)",
      "target": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.getAllFoodDeliveryOrders(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-delivery-service/org.springframework.http.HttpEntity food_delivery.controller.FoodDeliveryController.getFoodDeliveryOrderById(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.getFoodDeliveryOrderById(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-delivery-service/org.springframework.http.HttpEntity food_delivery.controller.FoodDeliveryController.getFoodDeliveryOrderByStoreId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.getFoodDeliveryOrderByStoreId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-delivery-service/org.springframework.http.HttpEntity food_delivery.controller.FoodDeliveryController.updateDeliveryTime(food_delivery.entity.DeliveryInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.updateDeliveryTime(food_delivery.entity.DeliveryInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-delivery-service/org.springframework.http.HttpEntity food_delivery.controller.FoodDeliveryController.updateSeatNo(food_delivery.entity.SeatInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.updateSeatNo(food_delivery.entity.SeatInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-delivery-service/org.springframework.http.HttpEntity food_delivery.controller.FoodDeliveryController.updateTripId(food_delivery.entity.TripOrderInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.updateTripId(food_delivery.entity.TripOrderInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.createFoodDeliveryOrder(food_delivery.entity.FoodDeliveryOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-delivery-service/java.lang.String food_delivery.service.FoodDeliveryServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.createFoodDeliveryOrder(food_delivery.entity.FoodDeliveryOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-delivery-service/void food_delivery.service.FoodDeliveryServiceImpl$1.<init>(food_delivery.service.FoodDeliveryServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.createFoodBatches(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.deleteFoodOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.deleteFoodOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.findAllFoodOrder(org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.findAllFoodOrder(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.findFoodOrderByOrderId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.findByOrderId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.getAllFood(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.getAllFood(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.updateFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.updateFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.AllTripFood.equals(java.lang.Object)",
      "target": "ts-food-service/boolean foodsearch.entity.AllTripFood.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.AllTripFood.equals(java.lang.Object)",
      "target": "ts-food-service/java.util.List foodsearch.entity.AllTripFood.getTrainFoodList(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.AllTripFood.equals(java.lang.Object)",
      "target": "ts-food-service/java.util.List foodsearch.entity.AllTripFood.getTrainFoodList(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.AllTripFood.equals(java.lang.Object)",
      "target": "ts-food-service/java.util.Map foodsearch.entity.AllTripFood.getFoodStoreListMap(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.AllTripFood.equals(java.lang.Object)",
      "target": "ts-food-service/java.util.Map foodsearch.entity.AllTripFood.getFoodStoreListMap(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/int foodsearch.entity.AllTripFood.hashCode(empty)",
      "target": "ts-food-service/java.util.List foodsearch.entity.AllTripFood.getTrainFoodList(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/int foodsearch.entity.AllTripFood.hashCode(empty)",
      "target": "ts-food-service/java.util.Map foodsearch.entity.AllTripFood.getFoodStoreListMap(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/java.lang.String foodsearch.entity.AllTripFood.toString(empty)",
      "target": "ts-food-service/java.util.List foodsearch.entity.AllTripFood.getTrainFoodList(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/java.lang.String foodsearch.entity.AllTripFood.toString(empty)",
      "target": "ts-food-service/java.util.Map foodsearch.entity.AllTripFood.getFoodStoreListMap(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.Delivery.equals(java.lang.Object)",
      "target": "ts-food-service/boolean foodsearch.entity.Delivery.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.Delivery.equals(java.lang.Object)",
      "target": "ts-food-service/java.util.UUID foodsearch.entity.Delivery.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.Delivery.equals(java.lang.Object)",
      "target": "ts-food-service/java.util.UUID foodsearch.entity.Delivery.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.Delivery.equals(java.lang.Object)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.Delivery.getFoodName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.Delivery.equals(java.lang.Object)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.Delivery.getFoodName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.Delivery.equals(java.lang.Object)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.Delivery.getStoreName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.Delivery.equals(java.lang.Object)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.Delivery.getStoreName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.Delivery.equals(java.lang.Object)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.Delivery.getStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.Delivery.equals(java.lang.Object)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.Delivery.getStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/int foodsearch.entity.Delivery.hashCode(empty)",
      "target": "ts-food-service/java.util.UUID foodsearch.entity.Delivery.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/int foodsearch.entity.Delivery.hashCode(empty)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.Delivery.getFoodName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/int foodsearch.entity.Delivery.hashCode(empty)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.Delivery.getStoreName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/int foodsearch.entity.Delivery.hashCode(empty)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.Delivery.getStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/java.lang.String foodsearch.entity.Delivery.toString(empty)",
      "target": "ts-food-service/java.util.UUID foodsearch.entity.Delivery.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/java.lang.String foodsearch.entity.Delivery.toString(empty)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.Delivery.getFoodName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/java.lang.String foodsearch.entity.Delivery.toString(empty)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.Delivery.getStoreName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/java.lang.String foodsearch.entity.Delivery.toString(empty)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.Delivery.getStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.FoodOrder.equals(java.lang.Object)",
      "target": "ts-food-service/boolean foodsearch.entity.FoodOrder.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.FoodOrder.equals(java.lang.Object)",
      "target": "ts-food-service/int foodsearch.entity.FoodOrder.getFoodType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.FoodOrder.equals(java.lang.Object)",
      "target": "ts-food-service/int foodsearch.entity.FoodOrder.getFoodType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.FoodOrder.equals(java.lang.Object)",
      "target": "ts-food-service/double foodsearch.entity.FoodOrder.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.FoodOrder.equals(java.lang.Object)",
      "target": "ts-food-service/double foodsearch.entity.FoodOrder.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.FoodOrder.equals(java.lang.Object)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.FoodOrder.equals(java.lang.Object)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.FoodOrder.equals(java.lang.Object)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.FoodOrder.equals(java.lang.Object)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.FoodOrder.equals(java.lang.Object)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.FoodOrder.equals(java.lang.Object)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.FoodOrder.equals(java.lang.Object)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStoreName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.FoodOrder.equals(java.lang.Object)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStoreName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.FoodOrder.equals(java.lang.Object)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getFoodName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/boolean foodsearch.entity.FoodOrder.equals(java.lang.Object)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getFoodName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/int foodsearch.entity.FoodOrder.hashCode(empty)",
      "target": "ts-food-service/int foodsearch.entity.FoodOrder.getFoodType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/int foodsearch.entity.FoodOrder.hashCode(empty)",
      "target": "ts-food-service/double foodsearch.entity.FoodOrder.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/int foodsearch.entity.FoodOrder.hashCode(empty)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/int foodsearch.entity.FoodOrder.hashCode(empty)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/int foodsearch.entity.FoodOrder.hashCode(empty)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/int foodsearch.entity.FoodOrder.hashCode(empty)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStoreName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/int foodsearch.entity.FoodOrder.hashCode(empty)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getFoodName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.toString(empty)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.toString(empty)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.toString(empty)",
      "target": "ts-food-service/int foodsearch.entity.FoodOrder.getFoodType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.toString(empty)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.toString(empty)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStoreName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.toString(empty)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getFoodName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.toString(empty)",
      "target": "ts-food-service/double foodsearch.entity.FoodOrder.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/int foodsearch.entity.FoodOrder.getFoodType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/int foodsearch.entity.FoodOrder.getFoodType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStoreName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getFoodName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/double foodsearch.entity.FoodOrder.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getFoodName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStoreName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/int foodsearch.entity.FoodOrder.getFoodType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/int foodsearch.entity.FoodOrder.getFoodType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStoreName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getFoodName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/double foodsearch.entity.FoodOrder.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getFoodName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStoreName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.getAllFood(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.service.FoodServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.getAllFood(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/void foodsearch.service.FoodServiceImpl$1.<init>(foodsearch.service.FoodServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.getAllFood(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.service.FoodServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.getAllFood(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/void foodsearch.service.FoodServiceImpl$2.<init>(foodsearch.service.FoodServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.getAllFood(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.service.FoodServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.getAllFood(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/void foodsearch.service.FoodServiceImpl$3.<init>(foodsearch.service.FoodServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.getAllFood(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/void foodsearch.service.FoodServiceImpl$$Lambda/0x1ab9a427c7721c1aececd88d5f692370.<init>(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.updateFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.updateFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.updateFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/int foodsearch.entity.FoodOrder.getFoodType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.updateFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/int foodsearch.entity.FoodOrder.getFoodType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.updateFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.updateFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStoreName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.updateFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getFoodName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.updateFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/double foodsearch.entity.FoodOrder.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.addMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.addMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.createAccount(inside_payment.entity.AccountInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.createAccount(inside_payment.entity.AccountInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.drawBack(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.drawBack(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.pay(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.pay(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.payDifference(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.payDifference(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.queryAccount(org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.queryAccount(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.queryAddMoney(org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.queryAddMoney(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.queryPayment(org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.queryPayment(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Balance.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/boolean inside_payment.entity.Balance.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Balance.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Balance.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Balance.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Balance.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Balance.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Balance.getBalance(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Balance.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Balance.getBalance(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/int inside_payment.entity.Balance.hashCode(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Balance.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/int inside_payment.entity.Balance.hashCode(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Balance.getBalance(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/java.lang.String inside_payment.entity.Balance.toString(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Balance.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/java.lang.String inside_payment.entity.Balance.toString(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Balance.getBalance(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Money.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/boolean inside_payment.entity.Money.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Money.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Money.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Money.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Money.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Money.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.getMoney(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Money.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.getMoney(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Money.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/inside_payment.entity.MoneyType inside_payment.entity.Money.getType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Money.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/inside_payment.entity.MoneyType inside_payment.entity.Money.getType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/int inside_payment.entity.Money.hashCode(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/int inside_payment.entity.Money.hashCode(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/int inside_payment.entity.Money.hashCode(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.getMoney(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/int inside_payment.entity.Money.hashCode(empty)",
      "target": "ts-inside-payment-service/inside_payment.entity.MoneyType inside_payment.entity.Money.getType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.toString(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.toString(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.toString(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.getMoney(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.toString(empty)",
      "target": "ts-inside-payment-service/inside_payment.entity.MoneyType inside_payment.entity.Money.getType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Payment.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/boolean inside_payment.entity.Payment.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Payment.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Payment.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Payment.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Payment.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Payment.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Payment.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Payment.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Payment.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Payment.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/inside_payment.entity.PaymentType inside_payment.entity.Payment.getType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/boolean inside_payment.entity.Payment.equals(java.lang.Object)",
      "target": "ts-inside-payment-service/inside_payment.entity.PaymentType inside_payment.entity.Payment.getType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/int inside_payment.entity.Payment.hashCode(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/int inside_payment.entity.Payment.hashCode(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/int inside_payment.entity.Payment.hashCode(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/int inside_payment.entity.Payment.hashCode(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/int inside_payment.entity.Payment.hashCode(empty)",
      "target": "ts-inside-payment-service/inside_payment.entity.PaymentType inside_payment.entity.Payment.getType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.toString(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.toString(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.toString(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.toString(empty)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.toString(empty)",
      "target": "ts-inside-payment-service/inside_payment.entity.PaymentType inside_payment.entity.Payment.getType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.addMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/void inside_payment.entity.Money.<init>(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.createAccount(inside_payment.entity.AccountInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/void inside_payment.entity.Money.<init>(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.drawBack(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/void inside_payment.entity.Money.<init>(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.pay(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.service.InsidePaymentServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.pay(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.service.InsidePaymentServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.pay(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/void inside_payment.service.InsidePaymentServiceImpl$1.<init>(inside_payment.service.InsidePaymentServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.pay(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/void inside_payment.entity.Payment.<init>(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.pay(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/void inside_payment.entity.Payment.<init>(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.pay(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.service.InsidePaymentServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.pay(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.setOrderStatus(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.pay(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.setOrderStatus(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.payDifference(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/void inside_payment.entity.Payment.<init>(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.payDifference(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/void inside_payment.entity.Payment.<init>(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.payDifference(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.service.InsidePaymentServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.queryAccount(org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/void inside_payment.entity.Balance.<init>(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.setOrderStatus(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.service.InsidePaymentServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.setOrderStatus(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/java.lang.String inside_payment.service.InsidePaymentServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.controller.NotificationController.order_cancel_success(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderCancelSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.controller.NotificationController.order_changed_success(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderChangedSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.controller.NotificationController.order_create_success(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderCreateSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.controller.NotificationController.preserve_success(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/boolean notification.service.NotificationServiceImpl.preserveSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.controller.NotificationController.test_send_mail(empty)",
      "target": "ts-notification-service/boolean notification.service.NotificationServiceImpl.preserveSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/boolean notification.entity.Mail.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailFrom(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailFrom(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailTo(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailTo(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailCc(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailCc(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailBcc(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailBcc(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailSubject(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailSubject(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailContent(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailContent(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getContentType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getContentType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.util.List notification.entity.Mail.getAttachments(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.util.List notification.entity.Mail.getAttachments(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.util.Map notification.entity.Mail.getModel(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)",
      "target": "ts-notification-service/java.util.Map notification.entity.Mail.getModel(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.Mail.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailFrom(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.Mail.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailTo(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.Mail.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailCc(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.Mail.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailBcc(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.Mail.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailSubject(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.Mail.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailContent(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.Mail.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getContentType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.Mail.hashCode(empty)",
      "target": "ts-notification-service/java.util.List notification.entity.Mail.getAttachments(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.Mail.hashCode(empty)",
      "target": "ts-notification-service/java.util.Map notification.entity.Mail.getModel(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.Mail.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailFrom(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.Mail.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailTo(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.Mail.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailCc(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.Mail.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailBcc(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.Mail.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailSubject(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.Mail.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getMailContent(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.Mail.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.Mail.getContentType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.Mail.toString(empty)",
      "target": "ts-notification-service/java.util.List notification.entity.Mail.getAttachments(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.Mail.toString(empty)",
      "target": "ts-notification-service/java.util.Map notification.entity.Mail.getModel(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/boolean notification.entity.NotifyInfo.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.Boolean notification.entity.NotifyInfo.getSendStatus(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.Boolean notification.entity.NotifyInfo.getSendStatus(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEmail(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEmail(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getOrderNumber(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getOrderNumber(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getStartPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getStartPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEndPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEndPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getDate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getDate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getSeatClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getSeatClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getSeatNumber(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getSeatNumber(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.NotifyInfo.hashCode(empty)",
      "target": "ts-notification-service/java.lang.Boolean notification.entity.NotifyInfo.getSendStatus(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.NotifyInfo.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.NotifyInfo.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEmail(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.NotifyInfo.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getOrderNumber(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.NotifyInfo.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.NotifyInfo.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getStartPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.NotifyInfo.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEndPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.NotifyInfo.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.NotifyInfo.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getDate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.NotifyInfo.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getSeatClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.NotifyInfo.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getSeatNumber(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/int notification.entity.NotifyInfo.hashCode(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.toString(empty)",
      "target": "ts-notification-service/java.lang.Boolean notification.entity.NotifyInfo.getSendStatus(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEmail(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getOrderNumber(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getStartPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEndPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getDate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getSeatClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getSeatNumber(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.toString(empty)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderCancelSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEmail(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderCancelSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderCancelSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderChangedSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEmail(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderChangedSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderChangedSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getStartPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderChangedSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEndPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderChangedSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderChangedSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getDate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderChangedSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getSeatClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderChangedSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getSeatNumber(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderChangedSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getOrderNumber(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderCreateSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEmail(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderCreateSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderCreateSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getStartPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderCreateSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEndPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderCreateSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderCreateSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getDate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderCreateSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getSeatClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderCreateSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getSeatNumber(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderCreateSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getOrderNumber(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.preserveSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEmail(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.preserveSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getUsername(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.preserveSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getStartPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.preserveSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEndPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.preserveSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.preserveSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getDate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.preserveSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getSeatClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.preserveSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getSeatNumber(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-notification-service/boolean notification.service.NotificationServiceImpl.preserveSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.addcreateNewOrder(other.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.addNewOrder(other.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.calculateSoldTicket(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.queryAlreadySoldOrders(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.createNewOrder(other.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.create(other.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.deleteOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.deleteOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.findAllOrder(org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.getAllOrders(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.getOrderById(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.getOrderById(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.getOrderPrice(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.getOrderPrice(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.getTicketListByDateAndTripId(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.getSoldTickets(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.modifyOrder(java.lang.String, int, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.modifyOrder(java.lang.String, int, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.payOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.payOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.queryOrders(other.entity.QueryInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.queryOrders(other.entity.QueryInfo, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.queryOrdersForRefresh(other.entity.QueryInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.queryOrdersForRefresh(other.entity.QueryInfo, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.saveOrderInfo(other.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.saveChanges(other.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.securityInfoCheck(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.checkSecurityAboutOrder(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.updateOrder(other.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.updateOrder(other.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.queryOrdersForRefresh(other.entity.QueryInfo, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.queryOrders(other.entity.QueryInfo, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.addcreateNewOrder(order.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.addNewOrder(order.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.calculateSoldTicket(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.queryAlreadySoldOrders(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.createNewOrder(order.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.create(order.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.deleteOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.deleteOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.findAllOrder(org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.getAllOrders(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.getOrderById(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.getOrderById(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.getOrderPrice(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.getOrderPrice(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.getTicketListByDateAndTripId(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.getSoldTickets(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.modifyOrder(java.lang.String, int, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.modifyOrder(java.lang.String, int, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.payOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.payOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.queryOrders(order.entity.OrderInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.queryOrders(order.entity.OrderInfo, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.queryOrdersForRefresh(order.entity.OrderInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.queryOrdersForRefresh(order.entity.OrderInfo, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.saveOrderInfo(order.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.saveChanges(order.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.securityInfoCheck(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.checkSecurityAboutOrder(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.updateOrder(order.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.updateOrder(order.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.queryOrdersForRefresh(order.entity.OrderInfo, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.queryOrders(order.entity.OrderInfo, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/org.springframework.http.HttpEntity com.trainticket.controller.PaymentController.addMoney(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/org.springframework.http.HttpEntity com.trainticket.controller.PaymentController.addMoney(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentServiceImpl.addMoney(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/org.springframework.http.HttpEntity com.trainticket.controller.PaymentController.pay(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/org.springframework.http.HttpEntity com.trainticket.controller.PaymentController.pay(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentServiceImpl.pay(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/org.springframework.http.HttpEntity com.trainticket.controller.PaymentController.query(org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentServiceImpl.query(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/boolean com.trainticket.entity.Money.equals(java.lang.Object)",
      "target": "ts-payment-service/boolean com.trainticket.entity.Money.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/boolean com.trainticket.entity.Money.equals(java.lang.Object)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Money.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/boolean com.trainticket.entity.Money.equals(java.lang.Object)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Money.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/boolean com.trainticket.entity.Money.equals(java.lang.Object)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Money.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/boolean com.trainticket.entity.Money.equals(java.lang.Object)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Money.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/boolean com.trainticket.entity.Money.equals(java.lang.Object)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Money.getMoney(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/boolean com.trainticket.entity.Money.equals(java.lang.Object)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Money.getMoney(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/int com.trainticket.entity.Money.hashCode(empty)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Money.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/int com.trainticket.entity.Money.hashCode(empty)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Money.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/int com.trainticket.entity.Money.hashCode(empty)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Money.getMoney(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/java.lang.String com.trainticket.entity.Money.toString(empty)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Money.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/java.lang.String com.trainticket.entity.Money.toString(empty)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Money.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/java.lang.String com.trainticket.entity.Money.toString(empty)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Money.getMoney(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/boolean com.trainticket.entity.Payment.equals(java.lang.Object)",
      "target": "ts-payment-service/boolean com.trainticket.entity.Payment.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/boolean com.trainticket.entity.Payment.equals(java.lang.Object)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/boolean com.trainticket.entity.Payment.equals(java.lang.Object)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/boolean com.trainticket.entity.Payment.equals(java.lang.Object)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/boolean com.trainticket.entity.Payment.equals(java.lang.Object)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/boolean com.trainticket.entity.Payment.equals(java.lang.Object)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/boolean com.trainticket.entity.Payment.equals(java.lang.Object)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/boolean com.trainticket.entity.Payment.equals(java.lang.Object)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/boolean com.trainticket.entity.Payment.equals(java.lang.Object)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/int com.trainticket.entity.Payment.hashCode(empty)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/int com.trainticket.entity.Payment.hashCode(empty)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/int com.trainticket.entity.Payment.hashCode(empty)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/int com.trainticket.entity.Payment.hashCode(empty)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.toString(empty)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.toString(empty)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.toString(empty)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.toString(empty)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentServiceImpl.addMoney(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentServiceImpl.addMoney(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentServiceImpl.pay(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentServiceImpl.pay(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/void com.trainticket.entity.Payment.<init>(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentServiceImpl.pay(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentServiceImpl.pay(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentServiceImpl.pay(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentServiceImpl.pay(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentServiceImpl.pay(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentServiceImpl.pay(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getOrderId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/org.springframework.http.HttpEntity preserveOther.controller.PreserveOtherController.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.checkSecurity(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.getContactsById(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/java.lang.String preserveOther.service.PreserveOtherServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/void preserveOther.service.PreserveOtherServiceImpl$1.<init>(preserveOther.service.PreserveOtherServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/edu.fudan.common.entity.Ticket preserveOther.service.PreserveOtherServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/edu.fudan.common.entity.Ticket preserveOther.service.PreserveOtherServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.createOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.addAssuranceForOrder(int, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.createFoodOrder(edu.fudan.common.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.createConsign(edu.fudan.common.entity.Consign, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/edu.fudan.common.entity.User preserveOther.service.PreserveOtherServiceImpl.getAccount(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.checkSecurity(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/java.lang.String preserveOther.service.PreserveOtherServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.getContactsById(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/java.lang.String preserveOther.service.PreserveOtherServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.getContactsById(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/void preserveOther.service.PreserveOtherServiceImpl$7.<init>(preserveOther.service.PreserveOtherServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/java.lang.String preserveOther.service.PreserveOtherServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/void preserveOther.service.PreserveOtherServiceImpl$6.<init>(preserveOther.service.PreserveOtherServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.entity.Ticket preserveOther.service.PreserveOtherServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/java.lang.String preserveOther.service.PreserveOtherServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.entity.Ticket preserveOther.service.PreserveOtherServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/void preserveOther.service.PreserveOtherServiceImpl$2.<init>(preserveOther.service.PreserveOtherServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.createOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/java.lang.String preserveOther.service.PreserveOtherServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.createOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/void preserveOther.service.PreserveOtherServiceImpl$8.<init>(preserveOther.service.PreserveOtherServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.addAssuranceForOrder(int, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/java.lang.String preserveOther.service.PreserveOtherServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.addAssuranceForOrder(int, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/void preserveOther.service.PreserveOtherServiceImpl$4.<init>(preserveOther.service.PreserveOtherServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.createFoodOrder(edu.fudan.common.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/java.lang.String preserveOther.service.PreserveOtherServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.createConsign(edu.fudan.common.entity.Consign, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/java.lang.String preserveOther.service.PreserveOtherServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.entity.User preserveOther.service.PreserveOtherServiceImpl.getAccount(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/java.lang.String preserveOther.service.PreserveOtherServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.entity.User preserveOther.service.PreserveOtherServiceImpl.getAccount(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-other-service/void preserveOther.service.PreserveOtherServiceImpl$3.<init>(preserveOther.service.PreserveOtherServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/org.springframework.http.HttpEntity preserve.controller.PreserveController.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.checkSecurity(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.getContactsById(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/java.lang.String preserve.service.PreserveServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/void preserve.service.PreserveServiceImpl$1.<init>(preserve.service.PreserveServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/edu.fudan.common.entity.Ticket preserve.service.PreserveServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/edu.fudan.common.entity.Ticket preserve.service.PreserveServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.createOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.addAssuranceForOrder(int, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.createFoodOrder(edu.fudan.common.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.createConsign(edu.fudan.common.entity.Consign, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/edu.fudan.common.entity.User preserve.service.PreserveServiceImpl.getAccount(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.checkSecurity(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/java.lang.String preserve.service.PreserveServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.getContactsById(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/java.lang.String preserve.service.PreserveServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.getContactsById(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/void preserve.service.PreserveServiceImpl$6.<init>(preserve.service.PreserveServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/java.lang.String preserve.service.PreserveServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/void preserve.service.PreserveServiceImpl$5.<init>(preserve.service.PreserveServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.entity.Ticket preserve.service.PreserveServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/java.lang.String preserve.service.PreserveServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.entity.Ticket preserve.service.PreserveServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/void preserve.service.PreserveServiceImpl$2.<init>(preserve.service.PreserveServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.createOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/java.lang.String preserve.service.PreserveServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.createOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/void preserve.service.PreserveServiceImpl$7.<init>(preserve.service.PreserveServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.addAssuranceForOrder(int, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/java.lang.String preserve.service.PreserveServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.createFoodOrder(edu.fudan.common.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/java.lang.String preserve.service.PreserveServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.createConsign(edu.fudan.common.entity.Consign, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/java.lang.String preserve.service.PreserveServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.entity.User preserve.service.PreserveServiceImpl.getAccount(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/java.lang.String preserve.service.PreserveServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.entity.User preserve.service.PreserveServiceImpl.getAccount(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-preserve-service/void preserve.service.PreserveServiceImpl$3.<init>(preserve.service.PreserveServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.create(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getRouteId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.create(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getTrainType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.create(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.delete(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.deletePriceConfig(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.query(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.findByRouteIdAndTrainType(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.query(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.findByRouteIdsAndTrainTypes(java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.queryAll(org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.findAllPriceConfig(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.update(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/boolean price.entity.PriceConfig.equals(java.lang.Object)",
      "target": "ts-price-service/boolean price.entity.PriceConfig.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/boolean price.entity.PriceConfig.equals(java.lang.Object)",
      "target": "ts-price-service/double price.entity.PriceConfig.getBasicPriceRate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/boolean price.entity.PriceConfig.equals(java.lang.Object)",
      "target": "ts-price-service/double price.entity.PriceConfig.getBasicPriceRate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/boolean price.entity.PriceConfig.equals(java.lang.Object)",
      "target": "ts-price-service/double price.entity.PriceConfig.getFirstClassPriceRate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/boolean price.entity.PriceConfig.equals(java.lang.Object)",
      "target": "ts-price-service/double price.entity.PriceConfig.getFirstClassPriceRate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/boolean price.entity.PriceConfig.equals(java.lang.Object)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/boolean price.entity.PriceConfig.equals(java.lang.Object)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/boolean price.entity.PriceConfig.equals(java.lang.Object)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getTrainType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/boolean price.entity.PriceConfig.equals(java.lang.Object)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getTrainType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/boolean price.entity.PriceConfig.equals(java.lang.Object)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getRouteId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/boolean price.entity.PriceConfig.equals(java.lang.Object)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getRouteId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/int price.entity.PriceConfig.hashCode(empty)",
      "target": "ts-price-service/double price.entity.PriceConfig.getBasicPriceRate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/int price.entity.PriceConfig.hashCode(empty)",
      "target": "ts-price-service/double price.entity.PriceConfig.getFirstClassPriceRate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/int price.entity.PriceConfig.hashCode(empty)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/int price.entity.PriceConfig.hashCode(empty)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getTrainType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/int price.entity.PriceConfig.hashCode(empty)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getRouteId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/java.lang.String price.entity.PriceConfig.toString(empty)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/java.lang.String price.entity.PriceConfig.toString(empty)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getTrainType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/java.lang.String price.entity.PriceConfig.toString(empty)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getRouteId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/java.lang.String price.entity.PriceConfig.toString(empty)",
      "target": "ts-price-service/double price.entity.PriceConfig.getBasicPriceRate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/java.lang.String price.entity.PriceConfig.toString(empty)",
      "target": "ts-price-service/double price.entity.PriceConfig.getFirstClassPriceRate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/void price.entity.PriceConfig.<init>(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/double price.entity.PriceConfig.getBasicPriceRate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/double price.entity.PriceConfig.getFirstClassPriceRate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getRouteId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getTrainType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/void price.entity.PriceConfig.<init>(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/double price.entity.PriceConfig.getBasicPriceRate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/void price.entity.PriceConfig.setBasicPriceRate(double)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/double price.entity.PriceConfig.getFirstClassPriceRate(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/void price.entity.PriceConfig.setFirstClassPriceRate(double)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getRouteId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/void price.entity.PriceConfig.setRouteId(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/java.lang.String price.entity.PriceConfig.getTrainType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/void price.entity.PriceConfig.setTrainType(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/org.springframework.http.HttpEntity rebook.controller.RebookController.payDifference(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.payDifference(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/org.springframework.http.HttpEntity rebook.controller.RebookController.payDifference(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.payDifference(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/org.springframework.http.HttpEntity rebook.controller.RebookController.rebook(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.rebook(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.payDifference(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.getOrderByRebookInfo(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.payDifference(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.payDifference(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.payDifferentMoney(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.payDifference(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, rebook.entity.RebookInfo, edu.fudan.common.entity.TripAllDetail, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.rebook(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.getOrderByRebookInfo(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.rebook(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.checkTime(java.lang.String, java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.rebook(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.rebook(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.drawBackMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.rebook(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, rebook.entity.RebookInfo, edu.fudan.common.entity.TripAllDetail, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.rebook(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, rebook.entity.RebookInfo, edu.fudan.common.entity.TripAllDetail, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.getOrderByRebookInfo(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/java.lang.String rebook.service.RebookServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.getOrderByRebookInfo(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/java.lang.String rebook.service.RebookServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.getOrderByRebookInfo(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/org.springframework.http.HttpHeaders rebook.service.RebookServiceImpl.getAuthorizationHeadersFrom(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.getOrderByRebookInfo(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/void rebook.service.RebookServiceImpl$3.<init>(rebook.service.RebookServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/java.lang.String rebook.service.RebookServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/java.lang.String rebook.service.RebookServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/org.springframework.http.HttpHeaders rebook.service.RebookServiceImpl.getAuthorizationHeadersFrom(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/void rebook.service.RebookServiceImpl$2.<init>(rebook.service.RebookServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.payDifferentMoney(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/org.springframework.http.HttpHeaders rebook.service.RebookServiceImpl.getAuthorizationHeadersFrom(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.payDifferentMoney(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/java.lang.String rebook.service.RebookServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, rebook.entity.RebookInfo, edu.fudan.common.entity.TripAllDetail, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/edu.fudan.common.entity.Route rebook.service.RebookServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, rebook.entity.RebookInfo, edu.fudan.common.entity.TripAllDetail, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/edu.fudan.common.entity.TrainType rebook.service.RebookServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, rebook.entity.RebookInfo, edu.fudan.common.entity.TripAllDetail, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/edu.fudan.common.entity.Ticket rebook.service.RebookServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, rebook.entity.RebookInfo, edu.fudan.common.entity.TripAllDetail, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/edu.fudan.common.entity.Ticket rebook.service.RebookServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, rebook.entity.RebookInfo, edu.fudan.common.entity.TripAllDetail, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.tripGD(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, rebook.entity.RebookInfo, edu.fudan.common.entity.TripAllDetail, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.tripGD(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, rebook.entity.RebookInfo, edu.fudan.common.entity.TripAllDetail, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.tripGD(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, rebook.entity.RebookInfo, edu.fudan.common.entity.TripAllDetail, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.tripGD(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, rebook.entity.RebookInfo, edu.fudan.common.entity.TripAllDetail, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, rebook.entity.RebookInfo, edu.fudan.common.entity.TripAllDetail, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.deleteOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.queryByIdBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserService.createEvent(user.dto.AuthDto)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.drawBackMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/org.springframework.http.HttpHeaders rebook.service.RebookServiceImpl.getAuthorizationHeadersFrom(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.drawBackMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/java.lang.String rebook.service.RebookServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.entity.Route rebook.service.RebookServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/java.lang.String rebook.service.RebookServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.entity.TrainType rebook.service.RebookServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/java.lang.String rebook.service.RebookServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.entity.Ticket rebook.service.RebookServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/org.springframework.http.HttpHeaders rebook.service.RebookServiceImpl.getAuthorizationHeadersFrom(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.entity.Ticket rebook.service.RebookServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/java.lang.String rebook.service.RebookServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.entity.Ticket rebook.service.RebookServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/void rebook.service.RebookServiceImpl$1.<init>(rebook.service.RebookServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/java.lang.String rebook.service.RebookServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/java.lang.String rebook.service.RebookServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.tripGD(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/org.springframework.http.HttpHeaders rebook.service.RebookServiceImpl.getAuthorizationHeadersFrom(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.deleteOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/java.lang.String rebook.service.RebookServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.deleteOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/java.lang.String rebook.service.RebookServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.deleteOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.tripGD(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.deleteOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/org.springframework.http.HttpHeaders rebook.service.RebookServiceImpl.getAuthorizationHeadersFrom(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.createOrder(edu.fudan.common.entity.Order, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/java.lang.String rebook.service.RebookServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.createOrder(edu.fudan.common.entity.Order, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/java.lang.String rebook.service.RebookServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.createOrder(edu.fudan.common.entity.Order, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-rebook-service/org.springframework.http.HttpHeaders rebook.service.RebookServiceImpl.getAuthorizationHeadersFrom(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/org.springframework.http.HttpEntity plan.controller.RoutePlanController.getCheapestRoutes(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchCheapestResult(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/org.springframework.http.HttpEntity plan.controller.RoutePlanController.getMinStopStations(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchMinStopStations(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/org.springframework.http.HttpEntity plan.controller.RoutePlanController.getQuickestRoutes(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchQuickestResult(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchCheapestResult(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/java.util.ArrayList plan.service.RoutePlanServiceImpl.getTripFromHighSpeedTravelServive(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchCheapestResult(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/java.util.ArrayList plan.service.RoutePlanServiceImpl.getTripFromNormalTrainTravelService(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchCheapestResult(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/java.util.List plan.service.RoutePlanServiceImpl.getStationList(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchMinStopStations(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/java.lang.String plan.service.RoutePlanServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchMinStopStations(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl$1.<init>(plan.service.RoutePlanServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchMinStopStations(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/java.lang.String plan.service.RoutePlanServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchMinStopStations(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl$2.<init>(plan.service.RoutePlanServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchMinStopStations(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/java.lang.String plan.service.RoutePlanServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchMinStopStations(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl$3.<init>(plan.service.RoutePlanServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchMinStopStations(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl$4.<init>(plan.service.RoutePlanServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchMinStopStations(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/edu.fudan.common.entity.Route plan.service.RoutePlanServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchQuickestResult(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/java.util.ArrayList plan.service.RoutePlanServiceImpl.getTripFromHighSpeedTravelServive(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchQuickestResult(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/java.util.ArrayList plan.service.RoutePlanServiceImpl.getTripFromNormalTrainTravelService(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchQuickestResult(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/java.util.List plan.service.RoutePlanServiceImpl.getStationList(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/java.util.ArrayList plan.service.RoutePlanServiceImpl.getTripFromHighSpeedTravelServive(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/java.lang.String plan.service.RoutePlanServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/java.util.ArrayList plan.service.RoutePlanServiceImpl.getTripFromHighSpeedTravelServive(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl$6.<init>(plan.service.RoutePlanServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/java.util.ArrayList plan.service.RoutePlanServiceImpl.getTripFromNormalTrainTravelService(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/java.lang.String plan.service.RoutePlanServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/java.util.ArrayList plan.service.RoutePlanServiceImpl.getTripFromNormalTrainTravelService(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl$7.<init>(plan.service.RoutePlanServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/java.util.List plan.service.RoutePlanServiceImpl.getStationList(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/java.lang.String plan.service.RoutePlanServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/java.util.List plan.service.RoutePlanServiceImpl.getStationList(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/java.lang.String plan.service.RoutePlanServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/java.util.List plan.service.RoutePlanServiceImpl.getStationList(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl$8.<init>(plan.service.RoutePlanServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.entity.Route plan.service.RoutePlanServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/java.lang.String plan.service.RoutePlanServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.entity.Route plan.service.RoutePlanServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl$5.<init>(plan.service.RoutePlanServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/org.springframework.http.ResponseEntity route.controller.RouteController.createAndModifyRoute(route.entity.RouteInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.createAndModify(route.entity.RouteInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.deleteRoute(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.deleteRoute(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryAll(org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.getAllRoutes(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryById(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.getRouteById(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryByIds(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.getRouteByIds(java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryByStartAndTerminal(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.getRouteByStartAndEnd(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/boolean route.entity.Route.equals(java.lang.Object)",
      "target": "ts-route-service/boolean route.entity.Route.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/boolean route.entity.Route.equals(java.lang.Object)",
      "target": "ts-route-service/java.lang.String route.entity.Route.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/boolean route.entity.Route.equals(java.lang.Object)",
      "target": "ts-route-service/java.lang.String route.entity.Route.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/boolean route.entity.Route.equals(java.lang.Object)",
      "target": "ts-route-service/java.util.List route.entity.Route.getStations(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/boolean route.entity.Route.equals(java.lang.Object)",
      "target": "ts-route-service/java.util.List route.entity.Route.getStations(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/boolean route.entity.Route.equals(java.lang.Object)",
      "target": "ts-route-service/java.util.List route.entity.Route.getDistances(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/boolean route.entity.Route.equals(java.lang.Object)",
      "target": "ts-route-service/java.util.List route.entity.Route.getDistances(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/boolean route.entity.Route.equals(java.lang.Object)",
      "target": "ts-route-service/java.lang.String route.entity.Route.getStartStation(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/boolean route.entity.Route.equals(java.lang.Object)",
      "target": "ts-route-service/java.lang.String route.entity.Route.getStartStation(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/boolean route.entity.Route.equals(java.lang.Object)",
      "target": "ts-route-service/java.lang.String route.entity.Route.getEndStation(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/boolean route.entity.Route.equals(java.lang.Object)",
      "target": "ts-route-service/java.lang.String route.entity.Route.getEndStation(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/int route.entity.Route.hashCode(empty)",
      "target": "ts-route-service/java.lang.String route.entity.Route.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/int route.entity.Route.hashCode(empty)",
      "target": "ts-route-service/java.util.List route.entity.Route.getStations(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/int route.entity.Route.hashCode(empty)",
      "target": "ts-route-service/java.util.List route.entity.Route.getDistances(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/int route.entity.Route.hashCode(empty)",
      "target": "ts-route-service/java.lang.String route.entity.Route.getStartStation(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/int route.entity.Route.hashCode(empty)",
      "target": "ts-route-service/java.lang.String route.entity.Route.getEndStation(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/java.lang.String route.entity.Route.toString(empty)",
      "target": "ts-route-service/java.lang.String route.entity.Route.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/java.lang.String route.entity.Route.toString(empty)",
      "target": "ts-route-service/java.util.List route.entity.Route.getStations(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/java.lang.String route.entity.Route.toString(empty)",
      "target": "ts-route-service/java.util.List route.entity.Route.getDistances(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/java.lang.String route.entity.Route.toString(empty)",
      "target": "ts-route-service/java.lang.String route.entity.Route.getStartStation(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/java.lang.String route.entity.Route.toString(empty)",
      "target": "ts-route-service/java.lang.String route.entity.Route.getEndStation(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.createAndModify(route.entity.RouteInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/void route.entity.Route.<init>(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.createAndModify(route.entity.RouteInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/void route.entity.Route.setStartStation(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.createAndModify(route.entity.RouteInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/void route.entity.Route.setEndStation(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.createAndModify(route.entity.RouteInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/void route.entity.Route.setStations(java.util.List)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.createAndModify(route.entity.RouteInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/void route.entity.Route.setDistances(java.util.List)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-seat-service/org.springframework.http.HttpEntity seat.controller.SeatController.create(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.distributeSeat(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-seat-service/org.springframework.http.HttpEntity seat.controller.SeatController.getLeftTicketOfInterval(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.getLeftTicketOfInterval(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.distributeSeat(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/java.lang.String seat.service.SeatServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.distributeSeat(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/void seat.service.SeatServiceImpl$1.<init>(seat.service.SeatServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.distributeSeat(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/java.lang.String seat.service.SeatServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.distributeSeat(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/void seat.service.SeatServiceImpl$2.<init>(seat.service.SeatServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.distributeSeat(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/boolean seat.service.SeatServiceImpl.isContained(java.util.Set, int)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.getLeftTicketOfInterval(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/java.lang.String seat.service.SeatServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.getLeftTicketOfInterval(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/void seat.service.SeatServiceImpl$3.<init>(seat.service.SeatServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.getLeftTicketOfInterval(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/java.lang.String seat.service.SeatServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.getLeftTicketOfInterval(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/void seat.service.SeatServiceImpl$4.<init>(seat.service.SeatServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.getLeftTicketOfInterval(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/double seat.service.SeatServiceImpl.getDirectProportion(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-seat-service/double seat.service.SeatServiceImpl.getDirectProportion(org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/java.lang.String seat.service.SeatServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-seat-service/double seat.service.SeatServiceImpl.getDirectProportion(org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/void seat.service.SeatServiceImpl$5.<init>(seat.service.SeatServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/org.springframework.http.HttpEntity security.controller.SecurityController.check(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.check(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/org.springframework.http.HttpEntity security.controller.SecurityController.create(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/org.springframework.http.HttpEntity security.controller.SecurityController.create(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.addNewSecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/org.springframework.http.HttpEntity security.controller.SecurityController.delete(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.deleteSecurityConfig(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/org.springframework.http.HttpEntity security.controller.SecurityController.findAllSecurityConfig(org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.findAllSecurityConfig(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/org.springframework.http.HttpEntity security.controller.SecurityController.update(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/org.springframework.http.HttpEntity security.controller.SecurityController.update(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.modifySecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/boolean security.entity.SecurityConfig.equals(java.lang.Object)",
      "target": "ts-security-service/boolean security.entity.SecurityConfig.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/boolean security.entity.SecurityConfig.equals(java.lang.Object)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/boolean security.entity.SecurityConfig.equals(java.lang.Object)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/boolean security.entity.SecurityConfig.equals(java.lang.Object)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/boolean security.entity.SecurityConfig.equals(java.lang.Object)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/boolean security.entity.SecurityConfig.equals(java.lang.Object)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getValue(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/boolean security.entity.SecurityConfig.equals(java.lang.Object)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getValue(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/boolean security.entity.SecurityConfig.equals(java.lang.Object)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getDescription(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/boolean security.entity.SecurityConfig.equals(java.lang.Object)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getDescription(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/int security.entity.SecurityConfig.hashCode(empty)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/int security.entity.SecurityConfig.hashCode(empty)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/int security.entity.SecurityConfig.hashCode(empty)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getValue(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/int security.entity.SecurityConfig.hashCode(empty)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getDescription(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/java.lang.String security.entity.SecurityConfig.toString(empty)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/java.lang.String security.entity.SecurityConfig.toString(empty)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/java.lang.String security.entity.SecurityConfig.toString(empty)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getValue(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/java.lang.String security.entity.SecurityConfig.toString(empty)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getDescription(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.check(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/edu.fudan.common.entity.OrderSecurity security.service.SecurityServiceImpl.getSecurityOrderInfoFromOrder(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.check(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/edu.fudan.common.entity.OrderSecurity security.service.SecurityServiceImpl.getSecurityOrderOtherInfoFromOrder(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.addNewSecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.addNewSecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.addNewSecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.addNewSecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getValue(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.addNewSecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getDescription(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.modifySecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.modifySecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.modifySecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.modifySecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.modifySecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getValue(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.modifySecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/java.lang.String security.entity.SecurityConfig.getDescription(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.entity.OrderSecurity security.service.SecurityServiceImpl.getSecurityOrderInfoFromOrder(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/java.lang.String security.service.SecurityServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.entity.OrderSecurity security.service.SecurityServiceImpl.getSecurityOrderInfoFromOrder(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/void security.service.SecurityServiceImpl$1.<init>(security.service.SecurityServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.entity.OrderSecurity security.service.SecurityServiceImpl.getSecurityOrderOtherInfoFromOrder(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/java.lang.String security.service.SecurityServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-security-service/edu.fudan.common.entity.OrderSecurity security.service.SecurityServiceImpl.getSecurityOrderOtherInfoFromOrder(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/void security.service.SecurityServiceImpl$2.<init>(security.service.SecurityServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-station-food-service/org.springframework.http.HttpEntity food.controller.StationFoodController.getAllFoodStores(org.springframework.http.HttpHeaders)",
      "target": "ts-station-food-service/edu.fudan.common.util.Response food.service.StationFoodServiceImpl.listFoodStores(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-station-food-service/org.springframework.http.HttpEntity food.controller.StationFoodController.getFoodListByStationFoodStoreId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-station-food-service/edu.fudan.common.util.Response food.service.StationFoodServiceImpl.getStaionFoodStoreById(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-station-food-service/org.springframework.http.HttpEntity food.controller.StationFoodController.getFoodStoresByStationNames(java.util.List)",
      "target": "ts-station-food-service/edu.fudan.common.util.Response food.service.StationFoodServiceImpl.getFoodStoresByStationNames(java.util.List)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-station-food-service/org.springframework.http.HttpEntity food.controller.StationFoodController.getFoodStoresOfStation(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-station-food-service/edu.fudan.common.util.Response food.service.StationFoodServiceImpl.listFoodStoresByStationName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-station-service/org.springframework.http.ResponseEntity fdse.microservice.controller.StationController.create(fdse.microservice.entity.Station, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.create(fdse.microservice.entity.Station, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-station-service/org.springframework.http.ResponseEntity fdse.microservice.controller.StationController.delete(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.delete(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.query(org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.query(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.queryById(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.queryById(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.queryForIdBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.queryForIdBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.queryForNameBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.queryByIdBatch(java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.queryForStationId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.queryForId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.update(fdse.microservice.entity.Station, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.update(fdse.microservice.entity.Station, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-food-service/org.springframework.http.HttpEntity trainFood.controller.TrainFoodController.getAllTrainFood(org.springframework.http.HttpHeaders)",
      "target": "ts-train-food-service/edu.fudan.common.util.Response trainFood.service.TrainFoodServiceImpl.listTrainFood(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-food-service/org.springframework.http.HttpEntity trainFood.controller.TrainFoodController.getTrainFoodOfTrip(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-train-food-service/edu.fudan.common.util.Response trainFood.service.TrainFoodServiceImpl.listTrainFoodByTripId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.create(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.create(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/boolean train.service.TrainServiceImpl.create(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.delete(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/boolean train.service.TrainServiceImpl.delete(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.query(org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/java.util.List train.service.TrainServiceImpl.query(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/train.entity.TrainType train.service.TrainServiceImpl.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieveByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/train.entity.TrainType train.service.TrainServiceImpl.retrieveByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieveByName(java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/java.util.List train.service.TrainServiceImpl.retrieveByNames(java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.update(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.update(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/boolean train.service.TrainServiceImpl.update(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.entity.TrainType.equals(java.lang.Object)",
      "target": "ts-train-service/boolean train.entity.TrainType.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.entity.TrainType.equals(java.lang.Object)",
      "target": "ts-train-service/int train.entity.TrainType.getEconomyClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.entity.TrainType.equals(java.lang.Object)",
      "target": "ts-train-service/int train.entity.TrainType.getEconomyClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.entity.TrainType.equals(java.lang.Object)",
      "target": "ts-train-service/int train.entity.TrainType.getConfortClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.entity.TrainType.equals(java.lang.Object)",
      "target": "ts-train-service/int train.entity.TrainType.getConfortClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.entity.TrainType.equals(java.lang.Object)",
      "target": "ts-train-service/int train.entity.TrainType.getAverageSpeed(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.entity.TrainType.equals(java.lang.Object)",
      "target": "ts-train-service/int train.entity.TrainType.getAverageSpeed(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.entity.TrainType.equals(java.lang.Object)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.entity.TrainType.equals(java.lang.Object)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.entity.TrainType.equals(java.lang.Object)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.entity.TrainType.equals(java.lang.Object)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/int train.entity.TrainType.hashCode(empty)",
      "target": "ts-train-service/int train.entity.TrainType.getEconomyClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/int train.entity.TrainType.hashCode(empty)",
      "target": "ts-train-service/int train.entity.TrainType.getConfortClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/int train.entity.TrainType.hashCode(empty)",
      "target": "ts-train-service/int train.entity.TrainType.getAverageSpeed(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/int train.entity.TrainType.hashCode(empty)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/int train.entity.TrainType.hashCode(empty)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/java.lang.String train.entity.TrainType.toString(empty)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/java.lang.String train.entity.TrainType.toString(empty)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/java.lang.String train.entity.TrainType.toString(empty)",
      "target": "ts-train-service/int train.entity.TrainType.getEconomyClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/java.lang.String train.entity.TrainType.toString(empty)",
      "target": "ts-train-service/int train.entity.TrainType.getConfortClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/java.lang.String train.entity.TrainType.toString(empty)",
      "target": "ts-train-service/int train.entity.TrainType.getAverageSpeed(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.service.TrainServiceImpl.create(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.service.TrainServiceImpl.create(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.service.TrainServiceImpl.create(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.service.TrainServiceImpl.create(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/int train.entity.TrainType.getEconomyClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.service.TrainServiceImpl.create(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/int train.entity.TrainType.getConfortClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.service.TrainServiceImpl.create(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/void train.entity.TrainType.<init>(java.lang.String, int, int)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.service.TrainServiceImpl.create(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/int train.entity.TrainType.getAverageSpeed(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.service.TrainServiceImpl.create(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.service.TrainServiceImpl.update(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.service.TrainServiceImpl.update(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.service.TrainServiceImpl.update(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/int train.entity.TrainType.getEconomyClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.service.TrainServiceImpl.update(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/int train.entity.TrainType.getConfortClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.service.TrainServiceImpl.update(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/int train.entity.TrainType.getAverageSpeed(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.service.TrainServiceImpl.update(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/void train.entity.TrainType.<init>(java.lang.String, int, int, int)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.service.TrainServiceImpl.update(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-train-service/boolean train.service.TrainServiceImpl.update(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/java.lang.String train.entity.TrainType.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/org.springframework.http.HttpEntity travelplan.controller.TravelPlanController.getByCheapest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getCheapest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/org.springframework.http.HttpEntity travelplan.controller.TravelPlanController.getByMinStation(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getMinStation(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/org.springframework.http.HttpEntity travelplan.controller.TravelPlanController.getByQuickest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getQuickest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/org.springframework.http.HttpEntity travelplan.controller.TravelPlanController.getTransferResult(travelplan.entity.TransferTravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getTransferSearch(travelplan.entity.TransferTravelInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TransferTravelResult.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/boolean travelplan.entity.TransferTravelResult.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TransferTravelResult.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.util.List travelplan.entity.TransferTravelResult.getFirstSectionResult(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TransferTravelResult.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.util.List travelplan.entity.TransferTravelResult.getFirstSectionResult(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TransferTravelResult.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.util.List travelplan.entity.TransferTravelResult.getSecondSectionResult(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TransferTravelResult.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.util.List travelplan.entity.TransferTravelResult.getSecondSectionResult(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/int travelplan.entity.TransferTravelResult.hashCode(empty)",
      "target": "ts-travel-plan-service/java.util.List travelplan.entity.TransferTravelResult.getFirstSectionResult(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/int travelplan.entity.TransferTravelResult.hashCode(empty)",
      "target": "ts-travel-plan-service/java.util.List travelplan.entity.TransferTravelResult.getSecondSectionResult(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.lang.String travelplan.entity.TransferTravelResult.toString(empty)",
      "target": "ts-travel-plan-service/java.util.List travelplan.entity.TransferTravelResult.getFirstSectionResult(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.lang.String travelplan.entity.TransferTravelResult.toString(empty)",
      "target": "ts-travel-plan-service/java.util.List travelplan.entity.TransferTravelResult.getSecondSectionResult(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.getNumberOfRestTicketSecondClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.getNumberOfRestTicketSecondClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.getNumberOfRestTicketFirstClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.getNumberOfRestTicketFirstClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getTrainTypeId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getTrainTypeId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getStartStation(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getStartStation(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getEndStation(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getEndStation(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.util.List travelplan.entity.TravelAdvanceResultUnit.getStopStations(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.util.List travelplan.entity.TravelAdvanceResultUnit.getStopStations(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getPriceForSecondClassSeat(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getPriceForSecondClassSeat(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getPriceForFirstClassSeat(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getPriceForFirstClassSeat(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getEndTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getEndTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.hashCode(empty)",
      "target": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.getNumberOfRestTicketSecondClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.hashCode(empty)",
      "target": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.getNumberOfRestTicketFirstClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.hashCode(empty)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.hashCode(empty)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getTrainTypeId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.hashCode(empty)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getStartStation(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.hashCode(empty)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getEndStation(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.hashCode(empty)",
      "target": "ts-travel-plan-service/java.util.List travelplan.entity.TravelAdvanceResultUnit.getStopStations(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.hashCode(empty)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getPriceForSecondClassSeat(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.hashCode(empty)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getPriceForFirstClassSeat(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.hashCode(empty)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.hashCode(empty)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getEndTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.toString(empty)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.toString(empty)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getTrainTypeId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.toString(empty)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getStartStation(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.toString(empty)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getEndStation(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.toString(empty)",
      "target": "ts-travel-plan-service/java.util.List travelplan.entity.TravelAdvanceResultUnit.getStopStations(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.toString(empty)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getPriceForSecondClassSeat(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.toString(empty)",
      "target": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.getNumberOfRestTicketSecondClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.toString(empty)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getPriceForFirstClassSeat(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.toString(empty)",
      "target": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.getNumberOfRestTicketFirstClass(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.toString(empty)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.toString(empty)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getEndTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getCheapest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.getRoutePlanResultCheapest(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getCheapest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/edu.fudan.common.entity.TrainType travelplan.service.TravelPlanServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getCheapest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/int travelplan.service.TravelPlanServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getCheapest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/int travelplan.service.TravelPlanServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getMinStation(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.getRoutePlanResultMinStation(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getMinStation(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/edu.fudan.common.entity.TrainType travelplan.service.TravelPlanServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getMinStation(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/int travelplan.service.TravelPlanServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getMinStation(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/int travelplan.service.TravelPlanServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getQuickest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.getRoutePlanResultQuickest(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getQuickest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/edu.fudan.common.entity.TrainType travelplan.service.TravelPlanServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getQuickest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/int travelplan.service.TravelPlanServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getQuickest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/int travelplan.service.TravelPlanServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getTransferSearch(travelplan.entity.TransferTravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/java.util.List travelplan.service.TravelPlanServiceImpl.tripsFromHighSpeed(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getTransferSearch(travelplan.entity.TransferTravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.tripsFromNormal(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getTransferSearch(travelplan.entity.TransferTravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/java.util.List travelplan.service.TravelPlanServiceImpl.tripsFromHighSpeed(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getTransferSearch(travelplan.entity.TransferTravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.tripsFromNormal(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.getRoutePlanResultCheapest(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.service.TravelPlanServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.getRoutePlanResultCheapest(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/void travelplan.service.TravelPlanServiceImpl$2.<init>(travelplan.service.TravelPlanServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.entity.TrainType travelplan.service.TravelPlanServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.service.TravelPlanServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/int travelplan.service.TravelPlanServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.service.TravelPlanServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/int travelplan.service.TravelPlanServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/void travelplan.service.TravelPlanServiceImpl$1.<init>(travelplan.service.TravelPlanServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.getRoutePlanResultMinStation(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.service.TravelPlanServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.getRoutePlanResultMinStation(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/void travelplan.service.TravelPlanServiceImpl$4.<init>(travelplan.service.TravelPlanServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.getRoutePlanResultQuickest(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.service.TravelPlanServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.getRoutePlanResultQuickest(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/void travelplan.service.TravelPlanServiceImpl$3.<init>(travelplan.service.TravelPlanServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.util.List travelplan.service.TravelPlanServiceImpl.tripsFromHighSpeed(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.service.TravelPlanServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.util.List travelplan.service.TravelPlanServiceImpl.tripsFromHighSpeed(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/void travelplan.service.TravelPlanServiceImpl$5.<init>(travelplan.service.TravelPlanServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.tripsFromNormal(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/java.lang.String travelplan.service.TravelPlanServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.tripsFromNormal(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-plan-service/void travelplan.service.TravelPlanServiceImpl$6.<init>(travelplan.service.TravelPlanServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.adminQueryAll(org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.adminQueryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.createTrip(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.create(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.deleteTrip(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.delete(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.getRouteByTripId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.getRouteByTripId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.getTrainTypeByTripId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.getTrainTypeByTripId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.getTripAllDetailInfo(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.getTripAllDetailInfo(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.getTripsByRouteId(java.util.ArrayList, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.getTripByRoute(java.util.ArrayList, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.queryAll(org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.queryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.queryInfo(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.queryByBatch(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.queryInfoInparallel(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.queryInParallel(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.updateTrip(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.update(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.AdminTrip.equals(java.lang.Object)",
      "target": "ts-travel-service/boolean travel.entity.AdminTrip.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.AdminTrip.equals(java.lang.Object)",
      "target": "ts-travel-service/travel.entity.Trip travel.entity.AdminTrip.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.AdminTrip.equals(java.lang.Object)",
      "target": "ts-travel-service/travel.entity.Trip travel.entity.AdminTrip.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.AdminTrip.equals(java.lang.Object)",
      "target": "ts-travel-service/edu.fudan.common.entity.TrainType travel.entity.AdminTrip.getTrainType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.AdminTrip.equals(java.lang.Object)",
      "target": "ts-travel-service/edu.fudan.common.entity.TrainType travel.entity.AdminTrip.getTrainType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.AdminTrip.equals(java.lang.Object)",
      "target": "ts-travel-service/edu.fudan.common.entity.Route travel.entity.AdminTrip.getRoute(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.AdminTrip.equals(java.lang.Object)",
      "target": "ts-travel-service/edu.fudan.common.entity.Route travel.entity.AdminTrip.getRoute(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.AdminTrip.hashCode(empty)",
      "target": "ts-travel-service/travel.entity.Trip travel.entity.AdminTrip.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.AdminTrip.hashCode(empty)",
      "target": "ts-travel-service/edu.fudan.common.entity.TrainType travel.entity.AdminTrip.getTrainType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.AdminTrip.hashCode(empty)",
      "target": "ts-travel-service/edu.fudan.common.entity.Route travel.entity.AdminTrip.getRoute(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.AdminTrip.toString(empty)",
      "target": "ts-travel-service/travel.entity.Trip travel.entity.AdminTrip.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.AdminTrip.toString(empty)",
      "target": "ts-travel-service/edu.fudan.common.entity.TrainType travel.entity.AdminTrip.getTrainType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.AdminTrip.toString(empty)",
      "target": "ts-travel-service/edu.fudan.common.entity.Route travel.entity.AdminTrip.getRoute(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel-service/boolean travel.entity.Travel.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel-service/travel.entity.Trip travel.entity.Travel.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel-service/travel.entity.Trip travel.entity.Travel.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Travel.getStartPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Travel.getStartPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Travel.getEndPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Travel.getEndPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Travel.getDepartureTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Travel.getDepartureTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.Travel.hashCode(empty)",
      "target": "ts-travel-service/travel.entity.Trip travel.entity.Travel.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.Travel.hashCode(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Travel.getStartPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.Travel.hashCode(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Travel.getEndPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.Travel.hashCode(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Travel.getDepartureTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.Travel.toString(empty)",
      "target": "ts-travel-service/travel.entity.Trip travel.entity.Travel.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.Travel.toString(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Travel.getStartPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.Travel.toString(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Travel.getEndPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.Travel.toString(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Travel.getDepartureTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/boolean travel.entity.Trip.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripId travel.entity.Trip.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripId travel.entity.Trip.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getTrainTypeName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getTrainTypeName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getRouteId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getRouteId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getStartStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getStartStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getStationsName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getStationsName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getTerminalStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getTerminalStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getEndTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getEndTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.Trip.hashCode(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.Trip.hashCode(empty)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripId travel.entity.Trip.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.Trip.hashCode(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getTrainTypeName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.Trip.hashCode(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getRouteId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.Trip.hashCode(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getStartStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.Trip.hashCode(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getStationsName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.Trip.hashCode(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getTerminalStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.Trip.hashCode(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.Trip.hashCode(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getEndTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.Trip.toString(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.Trip.toString(empty)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripId travel.entity.Trip.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.Trip.toString(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getTrainTypeName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.Trip.toString(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getRouteId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.Trip.toString(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getStartStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.Trip.toString(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getStationsName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.Trip.toString(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getTerminalStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.Trip.toString(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.Trip.toString(empty)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getEndTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.TripAllDetail.equals(java.lang.Object)",
      "target": "ts-travel-service/boolean travel.entity.TripAllDetail.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.TripAllDetail.equals(java.lang.Object)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.entity.TripAllDetail.getTripResponse(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.TripAllDetail.equals(java.lang.Object)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.entity.TripAllDetail.getTripResponse(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.TripAllDetail.equals(java.lang.Object)",
      "target": "ts-travel-service/travel.entity.Trip travel.entity.TripAllDetail.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/boolean travel.entity.TripAllDetail.equals(java.lang.Object)",
      "target": "ts-travel-service/travel.entity.Trip travel.entity.TripAllDetail.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.TripAllDetail.hashCode(empty)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.entity.TripAllDetail.getTripResponse(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.entity.TripAllDetail.hashCode(empty)",
      "target": "ts-travel-service/travel.entity.Trip travel.entity.TripAllDetail.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.TripAllDetail.toString(empty)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.entity.TripAllDetail.getTripResponse(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.String travel.entity.TripAllDetail.toString(empty)",
      "target": "ts-travel-service/travel.entity.Trip travel.entity.TripAllDetail.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.adminQueryAll(org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.entity.Route travel.service.TravelServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.adminQueryAll(org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.entity.TrainType travel.service.TravelServiceImpl.getTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.create(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/void travel.entity.Trip.<init>(edu.fudan.common.entity.TripId, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.getRouteByTripId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.entity.Route travel.service.TravelServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.getTrainTypeByTripId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.entity.TrainType travel.service.TravelServiceImpl.getTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.getTripAllDetailInfo(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.getTickets(travel.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.queryByBatch(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/java.util.List travel.service.TravelServiceImpl.getTicketsByBatch(java.util.List, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.queryInParallel(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/void travel.service.TravelServiceImpl$MyCallable.<init>(travel.service.TravelServiceImpl, edu.fudan.common.entity.TripInfo, java.lang.String, java.lang.String, travel.entity.Trip, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.Route travel.service.TravelServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/java.lang.String travel.service.TravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TrainType travel.service.TravelServiceImpl.getTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/java.lang.String travel.service.TravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TrainType travel.service.TravelServiceImpl.getTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/void travel.service.TravelServiceImpl$2.<init>(travel.service.TravelServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.getTickets(travel.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/boolean travel.service.TravelServiceImpl.afterToday(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.getTickets(travel.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/java.lang.String travel.service.TravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.getTickets(travel.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.setResponse(travel.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.util.List travel.service.TravelServiceImpl.getTicketsByBatch(java.util.List, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/boolean travel.service.TravelServiceImpl.afterToday(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.util.List travel.service.TravelServiceImpl.getTicketsByBatch(java.util.List, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/java.lang.String travel.service.TravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.util.List travel.service.TravelServiceImpl.getTicketsByBatch(java.util.List, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/void travel.service.TravelServiceImpl$1.<init>(travel.service.TravelServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.util.List travel.service.TravelServiceImpl.getTicketsByBatch(java.util.List, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.setResponse(travel.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/java.lang.Object travel.service.TravelServiceImpl$MyCallable.call(empty)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl$MyCallable.call(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.setResponse(travel.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripId travel.entity.Trip.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.setResponse(travel.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/int travel.service.TravelServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.setResponse(travel.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripId travel.entity.Trip.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.setResponse(travel.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/int travel.service.TravelServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.setResponse(travel.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.setResponse(travel.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.setResponse(travel.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripId travel.entity.Trip.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.setResponse(travel.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/java.lang.String travel.entity.Trip.getTrainTypeName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl$MyCallable.call(empty)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.access$100(travel.service.TravelServiceImpl, travel.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.service.TravelServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/java.lang.String travel.service.TravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/int travel.service.TravelServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/void travel.service.TravelServiceImpl$3.<init>(travel.service.TravelServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.access$100(travel.service.TravelServiceImpl, travel.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.getTickets(travel.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.adminQueryAll(org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.adminQueryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.createTrip(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.create(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.deleteTrip(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.delete(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.getRouteByTripId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.getRouteByTripId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.getTrainTypeByTripId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.getTrainTypeByTripId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.getTripAllDetailInfo(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.getTripAllDetailInfo(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.getTripsByRouteId(java.util.ArrayList, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.getTripByRoute(java.util.ArrayList, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.queryAll(org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.queryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.queryInfo(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.queryByBatch(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.updateTrip(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.update(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.AdminTrip.equals(java.lang.Object)",
      "target": "ts-travel2-service/boolean travel2.entity.AdminTrip.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.AdminTrip.equals(java.lang.Object)",
      "target": "ts-travel2-service/travel2.entity.Trip travel2.entity.AdminTrip.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.AdminTrip.equals(java.lang.Object)",
      "target": "ts-travel2-service/travel2.entity.Trip travel2.entity.AdminTrip.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.AdminTrip.equals(java.lang.Object)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TrainType travel2.entity.AdminTrip.getTrainType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.AdminTrip.equals(java.lang.Object)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TrainType travel2.entity.AdminTrip.getTrainType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.AdminTrip.equals(java.lang.Object)",
      "target": "ts-travel2-service/edu.fudan.common.entity.Route travel2.entity.AdminTrip.getRoute(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.AdminTrip.equals(java.lang.Object)",
      "target": "ts-travel2-service/edu.fudan.common.entity.Route travel2.entity.AdminTrip.getRoute(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.AdminTrip.hashCode(empty)",
      "target": "ts-travel2-service/travel2.entity.Trip travel2.entity.AdminTrip.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.AdminTrip.hashCode(empty)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TrainType travel2.entity.AdminTrip.getTrainType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.AdminTrip.hashCode(empty)",
      "target": "ts-travel2-service/edu.fudan.common.entity.Route travel2.entity.AdminTrip.getRoute(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.AdminTrip.toString(empty)",
      "target": "ts-travel2-service/travel2.entity.Trip travel2.entity.AdminTrip.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.AdminTrip.toString(empty)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TrainType travel2.entity.AdminTrip.getTrainType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.AdminTrip.toString(empty)",
      "target": "ts-travel2-service/edu.fudan.common.entity.Route travel2.entity.AdminTrip.getRoute(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel2-service/boolean travel2.entity.Travel.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel2-service/travel2.entity.Trip travel2.entity.Travel.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel2-service/travel2.entity.Trip travel2.entity.Travel.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Travel.getStartPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Travel.getStartPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Travel.getEndPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Travel.getEndPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Travel.getDepartureTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Travel.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Travel.getDepartureTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.Travel.hashCode(empty)",
      "target": "ts-travel2-service/travel2.entity.Trip travel2.entity.Travel.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.Travel.hashCode(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Travel.getStartPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.Travel.hashCode(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Travel.getEndPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.Travel.hashCode(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Travel.getDepartureTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.Travel.toString(empty)",
      "target": "ts-travel2-service/travel2.entity.Trip travel2.entity.Travel.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.Travel.toString(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Travel.getStartPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.Travel.toString(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Travel.getEndPlace(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.Travel.toString(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Travel.getDepartureTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/boolean travel2.entity.Trip.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TripId travel2.entity.Trip.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TripId travel2.entity.Trip.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getTrainTypeName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getTrainTypeName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getRouteId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getRouteId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStartStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStartStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStationsName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStationsName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getTerminalStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getTerminalStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getEndTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getEndTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.Trip.hashCode(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.Trip.hashCode(empty)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TripId travel2.entity.Trip.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.Trip.hashCode(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getTrainTypeName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.Trip.hashCode(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getRouteId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.Trip.hashCode(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStartStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.Trip.hashCode(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStationsName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.Trip.hashCode(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getTerminalStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.Trip.hashCode(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.Trip.hashCode(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getEndTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.Trip.toString(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.Trip.toString(empty)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TripId travel2.entity.Trip.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.Trip.toString(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getTrainTypeName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.Trip.toString(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getRouteId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.Trip.toString(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStartStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.Trip.toString(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStationsName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.Trip.toString(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getTerminalStationName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.Trip.toString(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.Trip.toString(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getEndTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.TripAllDetail.equals(java.lang.Object)",
      "target": "ts-travel2-service/boolean travel2.entity.TripAllDetail.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.TripAllDetail.equals(java.lang.Object)",
      "target": "ts-travel2-service/boolean travel2.entity.TripAllDetail.isStatus(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.TripAllDetail.equals(java.lang.Object)",
      "target": "ts-travel2-service/boolean travel2.entity.TripAllDetail.isStatus(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.TripAllDetail.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.TripAllDetail.getMessage(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.TripAllDetail.equals(java.lang.Object)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.TripAllDetail.getMessage(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.TripAllDetail.equals(java.lang.Object)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.entity.TripAllDetail.getTripResponse(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.TripAllDetail.equals(java.lang.Object)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.entity.TripAllDetail.getTripResponse(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.TripAllDetail.equals(java.lang.Object)",
      "target": "ts-travel2-service/travel2.entity.Trip travel2.entity.TripAllDetail.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/boolean travel2.entity.TripAllDetail.equals(java.lang.Object)",
      "target": "ts-travel2-service/travel2.entity.Trip travel2.entity.TripAllDetail.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.TripAllDetail.hashCode(empty)",
      "target": "ts-travel2-service/boolean travel2.entity.TripAllDetail.isStatus(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.TripAllDetail.hashCode(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.TripAllDetail.getMessage(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.TripAllDetail.hashCode(empty)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.entity.TripAllDetail.getTripResponse(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.entity.TripAllDetail.hashCode(empty)",
      "target": "ts-travel2-service/travel2.entity.Trip travel2.entity.TripAllDetail.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.TripAllDetail.toString(empty)",
      "target": "ts-travel2-service/boolean travel2.entity.TripAllDetail.isStatus(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.TripAllDetail.toString(empty)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.TripAllDetail.getMessage(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.TripAllDetail.toString(empty)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.entity.TripAllDetail.getTripResponse(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.lang.String travel2.entity.TripAllDetail.toString(empty)",
      "target": "ts-travel2-service/travel2.entity.Trip travel2.entity.TripAllDetail.getTrip(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.adminQueryAll(org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.entity.Route travel2.service.TravelServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.adminQueryAll(org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TrainType travel2.service.TravelServiceImpl.getTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.create(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/void travel2.entity.Trip.<init>(edu.fudan.common.entity.TripId, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.getRouteByTripId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.entity.Route travel2.service.TravelServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.getTrainTypeByTripId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TrainType travel2.service.TravelServiceImpl.getTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.getTripAllDetailInfo(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.getTickets(travel2.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.queryByBatch(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/java.util.List travel2.service.TravelServiceImpl.getTicketsByBatch(java.util.List, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.Route travel2.service.TravelServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/java.lang.String travel2.service.TravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.TrainType travel2.service.TravelServiceImpl.getTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/java.lang.String travel2.service.TravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.TrainType travel2.service.TravelServiceImpl.getTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/void travel2.service.TravelServiceImpl$3.<init>(travel2.service.TravelServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.getTickets(travel2.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/boolean travel2.service.TravelServiceImpl.afterToday(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.getTickets(travel2.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/java.lang.String travel2.service.TravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.getTickets(travel2.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/void travel2.service.TravelServiceImpl$2.<init>(travel2.service.TravelServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.getTickets(travel2.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.setResponse(travel2.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.util.List travel2.service.TravelServiceImpl.getTicketsByBatch(java.util.List, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/boolean travel2.service.TravelServiceImpl.afterToday(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.util.List travel2.service.TravelServiceImpl.getTicketsByBatch(java.util.List, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/java.lang.String travel2.service.TravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.util.List travel2.service.TravelServiceImpl.getTicketsByBatch(java.util.List, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/void travel2.service.TravelServiceImpl$1.<init>(travel2.service.TravelServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/java.util.List travel2.service.TravelServiceImpl.getTicketsByBatch(java.util.List, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.setResponse(travel2.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.setResponse(travel2.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TripId travel2.entity.Trip.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.setResponse(travel2.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/int travel2.service.TravelServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.setResponse(travel2.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TripId travel2.entity.Trip.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.setResponse(travel2.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/int travel2.service.TravelServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.setResponse(travel2.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.setResponse(travel2.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStartTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.setResponse(travel2.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/edu.fudan.common.entity.TripId travel2.entity.Trip.getTripId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.setResponse(travel2.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/java.lang.String travel2.entity.Trip.getTrainTypeName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.service.TravelServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/java.lang.String travel2.service.TravelServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-travel2-service/int travel2.service.TravelServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/void travel2.service.TravelServiceImpl$4.<init>(travel2.service.TravelServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.deleteUserById(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.deleteUser(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.getAllUser(org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.getAllUsers(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.getUserByUserId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.findByUserId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.getUserByUserName(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.findByUserName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.registerUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.updateUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.updateUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.dto.AuthDto.equals(java.lang.Object)",
      "target": "ts-user-service/boolean user.dto.AuthDto.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.dto.AuthDto.equals(java.lang.Object)",
      "target": "ts-user-service/java.lang.String user.dto.AuthDto.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.dto.AuthDto.equals(java.lang.Object)",
      "target": "ts-user-service/java.lang.String user.dto.AuthDto.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.dto.AuthDto.equals(java.lang.Object)",
      "target": "ts-user-service/java.lang.String user.dto.AuthDto.getUserName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.dto.AuthDto.equals(java.lang.Object)",
      "target": "ts-user-service/java.lang.String user.dto.AuthDto.getUserName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.dto.AuthDto.equals(java.lang.Object)",
      "target": "ts-user-service/java.lang.String user.dto.AuthDto.getPassword(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.dto.AuthDto.equals(java.lang.Object)",
      "target": "ts-user-service/java.lang.String user.dto.AuthDto.getPassword(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/int user.dto.AuthDto.hashCode(empty)",
      "target": "ts-user-service/java.lang.String user.dto.AuthDto.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/int user.dto.AuthDto.hashCode(empty)",
      "target": "ts-user-service/java.lang.String user.dto.AuthDto.getUserName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/int user.dto.AuthDto.hashCode(empty)",
      "target": "ts-user-service/java.lang.String user.dto.AuthDto.getPassword(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/java.lang.String user.dto.AuthDto.toString(empty)",
      "target": "ts-user-service/java.lang.String user.dto.AuthDto.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/java.lang.String user.dto.AuthDto.toString(empty)",
      "target": "ts-user-service/java.lang.String user.dto.AuthDto.getUserName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/java.lang.String user.dto.AuthDto.toString(empty)",
      "target": "ts-user-service/java.lang.String user.dto.AuthDto.getPassword(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.entity.User.equals(java.lang.Object)",
      "target": "ts-user-service/boolean user.entity.User.canEqual(java.lang.Object)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.entity.User.equals(java.lang.Object)",
      "target": "ts-user-service/int user.entity.User.getGender(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.entity.User.equals(java.lang.Object)",
      "target": "ts-user-service/int user.entity.User.getGender(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.entity.User.equals(java.lang.Object)",
      "target": "ts-user-service/int user.entity.User.getDocumentType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.entity.User.equals(java.lang.Object)",
      "target": "ts-user-service/int user.entity.User.getDocumentType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.entity.User.equals(java.lang.Object)",
      "target": "ts-user-service/java.lang.String user.entity.User.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.entity.User.equals(java.lang.Object)",
      "target": "ts-user-service/java.lang.String user.entity.User.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.entity.User.equals(java.lang.Object)",
      "target": "ts-user-service/java.lang.String user.entity.User.getUserName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.entity.User.equals(java.lang.Object)",
      "target": "ts-user-service/java.lang.String user.entity.User.getUserName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.entity.User.equals(java.lang.Object)",
      "target": "ts-user-service/java.lang.String user.entity.User.getPassword(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.entity.User.equals(java.lang.Object)",
      "target": "ts-user-service/java.lang.String user.entity.User.getPassword(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.entity.User.equals(java.lang.Object)",
      "target": "ts-user-service/java.lang.String user.entity.User.getDocumentNum(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.entity.User.equals(java.lang.Object)",
      "target": "ts-user-service/java.lang.String user.entity.User.getDocumentNum(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.entity.User.equals(java.lang.Object)",
      "target": "ts-user-service/java.lang.String user.entity.User.getEmail(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/boolean user.entity.User.equals(java.lang.Object)",
      "target": "ts-user-service/java.lang.String user.entity.User.getEmail(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/int user.entity.User.hashCode(empty)",
      "target": "ts-user-service/int user.entity.User.getGender(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/int user.entity.User.hashCode(empty)",
      "target": "ts-user-service/int user.entity.User.getDocumentType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/int user.entity.User.hashCode(empty)",
      "target": "ts-user-service/java.lang.String user.entity.User.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/int user.entity.User.hashCode(empty)",
      "target": "ts-user-service/java.lang.String user.entity.User.getUserName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/int user.entity.User.hashCode(empty)",
      "target": "ts-user-service/java.lang.String user.entity.User.getPassword(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/int user.entity.User.hashCode(empty)",
      "target": "ts-user-service/java.lang.String user.entity.User.getDocumentNum(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/int user.entity.User.hashCode(empty)",
      "target": "ts-user-service/java.lang.String user.entity.User.getEmail(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/java.lang.String user.entity.User.toString(empty)",
      "target": "ts-user-service/java.lang.String user.entity.User.getUserId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/java.lang.String user.entity.User.toString(empty)",
      "target": "ts-user-service/java.lang.String user.entity.User.getUserName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/java.lang.String user.entity.User.toString(empty)",
      "target": "ts-user-service/java.lang.String user.entity.User.getPassword(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/java.lang.String user.entity.User.toString(empty)",
      "target": "ts-user-service/int user.entity.User.getGender(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/java.lang.String user.entity.User.toString(empty)",
      "target": "ts-user-service/int user.entity.User.getDocumentType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/java.lang.String user.entity.User.toString(empty)",
      "target": "ts-user-service/java.lang.String user.entity.User.getDocumentNum(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/java.lang.String user.entity.User.toString(empty)",
      "target": "ts-user-service/java.lang.String user.entity.User.getEmail(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.deleteUser(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/void user.service.impl.UserServiceImpl.deleteUserAuth(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User$UserBuilder user.entity.User.builder(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.userId(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.userName(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.password(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.gender(int)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.documentType(int)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.documentNum(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.email(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User user.entity.User$UserBuilder.build(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.dto.AuthDto$AuthDtoBuilder user.dto.AuthDto.builder(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.dto.AuthDto$AuthDtoBuilder user.dto.AuthDto$AuthDtoBuilder.userId(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/java.lang.String user.entity.User.getUserName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.dto.AuthDto$AuthDtoBuilder user.dto.AuthDto$AuthDtoBuilder.userName(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/java.lang.String user.entity.User.getPassword(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.dto.AuthDto$AuthDtoBuilder user.dto.AuthDto$AuthDtoBuilder.password(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.dto.AuthDto user.dto.AuthDto$AuthDtoBuilder.build(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.createDefaultAuthUser(user.dto.AuthDto)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.updateUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User$UserBuilder user.entity.User.builder(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.updateUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.email(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.updateUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.password(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.updateUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.userId(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.updateUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.userName(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.updateUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.gender(int)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.updateUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.documentNum(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.updateUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.documentType(int)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.updateUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/user.entity.User user.entity.User$UserBuilder.build(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/void user.service.impl.UserServiceImpl.deleteUserAuth(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/java.lang.String user.service.impl.UserServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/user.entity.User user.entity.User$UserBuilder.build(empty)",
      "target": "ts-user-service/void user.entity.User.<init>(java.lang.String, java.lang.String, java.lang.String, int, int, java.lang.String, java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/user.dto.AuthDto user.dto.AuthDto$AuthDtoBuilder.build(empty)",
      "target": "ts-user-service/void user.dto.AuthDto.<init>(java.lang.String, java.lang.String, java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.createDefaultAuthUser(user.dto.AuthDto)",
      "target": "ts-user-service/java.lang.String user.dto.AuthDto.toString(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.createDefaultAuthUser(user.dto.AuthDto)",
      "target": "ts-user-service/java.lang.String user.service.impl.UserServiceImpl.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.createDefaultAuthUser(user.dto.AuthDto)",
      "target": "ts-user-service/void user.service.impl.UserServiceImpl$1.<init>(user.service.impl.UserServiceImpl)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-verification-code-service/void verifycode.controller.VerifyCodeController.imageCode(org.springframework.http.HttpHeaders, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)",
      "target": "ts-verification-code-service/java.util.Map verifycode.service.impl.VerifyCodeServiceImpl.getImageCode(int, int, java.io.OutputStream, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-verification-code-service/boolean verifycode.controller.VerifyCodeController.verifyCode(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.http.HttpHeaders)",
      "target": "ts-verification-code-service/boolean verifycode.service.impl.VerifyCodeServiceImpl.verifyCode(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-verification-code-service/java.util.Map verifycode.service.impl.VerifyCodeServiceImpl.getImageCode(int, int, java.io.OutputStream, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.http.HttpHeaders)",
      "target": "ts-verification-code-service/java.awt.Color verifycode.service.impl.VerifyCodeServiceImpl.getRandColor(int, int)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-verification-code-service/java.util.Map verifycode.service.impl.VerifyCodeServiceImpl.getImageCode(int, int, java.io.OutputStream, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.http.HttpHeaders)",
      "target": "ts-verification-code-service/java.awt.Color verifycode.service.impl.VerifyCodeServiceImpl.getRandColor(int, int)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-verification-code-service/java.util.Map verifycode.service.impl.VerifyCodeServiceImpl.getImageCode(int, int, java.io.OutputStream, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.http.HttpHeaders)",
      "target": "ts-verification-code-service/javax.servlet.http.Cookie verifycode.util.CookieUtil.getCookieByName(javax.servlet.http.HttpServletRequest, java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-verification-code-service/java.util.Map verifycode.service.impl.VerifyCodeServiceImpl.getImageCode(int, int, java.io.OutputStream, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.http.HttpHeaders)",
      "target": "ts-verification-code-service/void verifycode.util.CookieUtil.addCookie(javax.servlet.http.HttpServletResponse, java.lang.String, java.lang.String, int)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-verification-code-service/java.util.Map verifycode.service.impl.VerifyCodeServiceImpl.getImageCode(int, int, java.io.OutputStream, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.http.HttpHeaders)",
      "target": "ts-verification-code-service/void verifycode.util.CookieUtil.addCookie(javax.servlet.http.HttpServletResponse, java.lang.String, java.lang.String, int)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-verification-code-service/boolean verifycode.service.impl.VerifyCodeServiceImpl.verifyCode(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-verification-code-service/javax.servlet.http.Cookie verifycode.util.CookieUtil.getCookieByName(javax.servlet.http.HttpServletRequest, java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-verification-code-service/boolean verifycode.service.impl.VerifyCodeServiceImpl.verifyCode(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-verification-code-service/void verifycode.util.CookieUtil.addCookie(javax.servlet.http.HttpServletResponse, java.lang.String, java.lang.String, int)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-verification-code-service/javax.servlet.http.Cookie verifycode.util.CookieUtil.getCookieByName(javax.servlet.http.HttpServletRequest, java.lang.String)",
      "target": "ts-verification-code-service/java.util.Map verifycode.util.CookieUtil.readCookieMap(javax.servlet.http.HttpServletRequest)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/org.springframework.http.HttpEntity waitorder.controller.WaitListOrderController.createNewOrder(waitorder.entity.WaitListOrderVO, org.springframework.http.HttpHeaders)",
      "target": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.create(waitorder.entity.WaitListOrderVO, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/org.springframework.http.HttpEntity waitorder.controller.WaitListOrderController.getAllOrders(org.springframework.http.HttpHeaders)",
      "target": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.getAllOrders(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/org.springframework.http.HttpEntity waitorder.controller.WaitListOrderController.getWaitListOrders(org.springframework.http.HttpHeaders)",
      "target": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.getAllWaitListOrders(org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.toString(empty)",
      "target": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.toString(empty)",
      "target": "ts-wait-order-service/java.util.Date waitorder.entity.WaitListOrder.getTravelTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.toString(empty)",
      "target": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getAccountId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.toString(empty)",
      "target": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getContactsId(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.toString(empty)",
      "target": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getContactsName(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.toString(empty)",
      "target": "ts-wait-order-service/int waitorder.entity.WaitListOrder.getContactsDocumentType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.toString(empty)",
      "target": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getContactsDocumentNumber(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.toString(empty)",
      "target": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getTrainNumber(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.toString(empty)",
      "target": "ts-wait-order-service/int waitorder.entity.WaitListOrder.getSeatType(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.toString(empty)",
      "target": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getFrom(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.toString(empty)",
      "target": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getTo(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.toString(empty)",
      "target": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getPrice(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.toString(empty)",
      "target": "ts-wait-order-service/java.util.Date waitorder.entity.WaitListOrder.getWaitUtilTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.toString(empty)",
      "target": "ts-wait-order-service/java.util.Date waitorder.entity.WaitListOrder.getCreatedTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.toString(empty)",
      "target": "ts-wait-order-service/int waitorder.entity.WaitListOrder.getStatus(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.create(waitorder.entity.WaitListOrderVO, org.springframework.http.HttpHeaders)",
      "target": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.saveNewOrder(waitorder.entity.WaitListOrderVO, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.create(waitorder.entity.WaitListOrderVO, org.springframework.http.HttpHeaders)",
      "target": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.triggerThread(waitorder.entity.WaitListOrder, waitorder.entity.WaitListOrderVO, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.getAllWaitListOrders(org.springframework.http.HttpHeaders)",
      "target": "ts-wait-order-service/void waitorder.service.Impl.WaitListOrderServiceImpl$$Lambda/0xcaee37e7a646f1b9349273f350ba05880.<init>(java.util.List)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/void waitorder.utils.PollThread.run(empty)",
      "target": "ts-wait-order-service/java.lang.String waitorder.utils.PollThread.getServiceUrl(java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/void waitorder.utils.PollThread.run(empty)",
      "target": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.modifyWaitListOrderStatus(int, java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/void waitorder.utils.PollThread.run(empty)",
      "target": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.utils.PollThread.doPreserve(java.lang.String, org.springframework.http.HttpEntity)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/void waitorder.utils.PollThread.run(empty)",
      "target": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.modifyWaitListOrderStatus(int, java.lang.String)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.saveNewOrder(waitorder.entity.WaitListOrderVO, org.springframework.http.HttpHeaders)",
      "target": "ts-wait-order-service/java.lang.Boolean waitorder.service.Impl.WaitListOrderServiceImpl.WaitListOrderExist(java.util.List, waitorder.entity.WaitListOrderVO)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.saveNewOrder(waitorder.entity.WaitListOrderVO, org.springframework.http.HttpHeaders)",
      "target": "ts-wait-order-service/void waitorder.entity.WaitListOrder.<init>(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.triggerThread(waitorder.entity.WaitListOrder, waitorder.entity.WaitListOrderVO, org.springframework.http.HttpHeaders)",
      "target": "ts-wait-order-service/java.util.Date waitorder.entity.WaitListOrder.getWaitUtilTime(empty)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.triggerThread(waitorder.entity.WaitListOrder, waitorder.entity.WaitListOrderVO, org.springframework.http.HttpHeaders)",
      "target": "ts-wait-order-service/void waitorder.utils.PollThread.<init>(java.util.Date, waitorder.service.WaitListOrderService, waitorder.entity.WaitListOrderVO, org.springframework.web.client.RestTemplate, org.springframework.http.HttpHeaders)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.utils.PollThread.doPreserve(java.lang.String, org.springframework.http.HttpEntity)",
      "target": "ts-wait-order-service/void waitorder.utils.PollThread$1.<init>(waitorder.utils.PollThread)",
      "httpMethod": null,
      "isInterserviceCall": false
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.update(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "httpMethod": "PUT",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deleteTrain(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.delete(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "DELETE",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.create(train.entity.TrainType, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllTrains(org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.query(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deleteContact(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.deleteContacts(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "DELETE",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addContact(edu.fudan.common.entity.Contacts, org.springframework.http.HttpHeaders)",
      "target": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.createNewContactsAdmin(contacts.entity.Contacts, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllContacts(org.springframework.http.HttpHeaders)",
      "target": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.getAllContacts(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyContact(edu.fudan.common.entity.Contacts, org.springframework.http.HttpHeaders)",
      "target": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.modifyContacts(contacts.entity.Contacts, org.springframework.http.HttpHeaders)",
      "httpMethod": "PUT",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllPrices(org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.queryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addPrice(adminbasic.entity.PriceInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.create(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deletePrice(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.delete(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "DELETE",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyPrice(adminbasic.entity.PriceInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.update(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
      "httpMethod": "PUT",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addConfig(edu.fudan.common.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.createConfig(config.entity.Config, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deleteConfig(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.deleteConfig(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "DELETE",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllConfigs(org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.queryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyConfig(edu.fudan.common.entity.Config, org.springframework.http.HttpHeaders)",
      "target": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.updateConfig(config.entity.Config, org.springframework.http.HttpHeaders)",
      "httpMethod": "PUT",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deleteStation(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/org.springframework.http.ResponseEntity fdse.microservice.controller.StationController.delete(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "DELETE",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllStations(org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.query(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addStation(edu.fudan.common.entity.Station, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/org.springframework.http.ResponseEntity fdse.microservice.controller.StationController.create(fdse.microservice.entity.Station, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyStation(edu.fudan.common.entity.Station, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.update(fdse.microservice.entity.Station, org.springframework.http.HttpHeaders)",
      "httpMethod": "PUT",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.addOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.addcreateNewOrder(other.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.updateOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.updateOrder(other.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": "PUT",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.deleteOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.deleteOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "DELETE",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.getAllOrders(org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.findAllOrder(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.deleteOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.deleteOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "DELETE",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.getAllOrders(org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.findAllOrder(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.updateOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.updateOrder(order.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": "PUT",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.addOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.addcreateNewOrder(order.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.getAllRoutes(org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.deleteRoute(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.deleteRoute(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "DELETE",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.createAndModifyRoute(edu.fudan.common.entity.RouteInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/org.springframework.http.ResponseEntity route.controller.RouteController.createAndModifyRoute(route.entity.RouteInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.checkStationsExists(java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.queryForIdBatch(java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.entity.TrainType admintravel.service.AdminTravelServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieveByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.checkStationsExists(java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.queryForIdBatch(java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.getAllTravels(org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.adminQueryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.entity.Route admintravel.service.AdminTravelServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.getAllTravels(org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.adminQueryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.updateUser(adminuser.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.updateUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "httpMethod": "PUT",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.addUser(adminuser.dto.UserDto, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.registerUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.deleteUser(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.deleteUserById(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "DELETE",
      "isInterserviceCall": true
    },
    {
      "source": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.getAllUsers(org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.getAllUser(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-auth-service/edu.fudan.common.util.Response auth.service.impl.TokenServiceImpl.getToken(auth.dto.BasicAuthDto, org.springframework.http.HttpHeaders)",
      "target": "ts-verification-code-service/void verifycode.controller.VerifyCodeController.imageCode(org.springframework.http.HttpHeaders, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-basic-service/edu.fudan.common.entity.TrainType fdse.microservice.service.BasicServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieveByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-basic-service/java.util.List fdse.microservice.service.BasicServiceImpl.queryTrainTypeByNames(java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieveByName(java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-basic-service/edu.fudan.common.entity.Route fdse.microservice.service.BasicServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-basic-service/java.util.List fdse.microservice.service.BasicServiceImpl.getRoutesByRouteIds(java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryByIds(java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-basic-service/boolean fdse.microservice.service.BasicServiceImpl.checkStationExists(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.query(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-basic-service/java.util.Map fdse.microservice.service.BasicServiceImpl.checkStationsExists(java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.queryForIdBatch(java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForStationId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.query(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-basic-service/java.util.Map fdse.microservice.service.BasicServiceImpl.queryPriceConfigByRouteIdsAndTrainTypes(java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.query(java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-basic-service/edu.fudan.common.entity.PriceConfig fdse.microservice.service.BasicServiceImpl.queryPriceConfigByRouteIdAndTrainType(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.queryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getOrderByIdFromOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.findAllOrder(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelFromOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.saveOrderInfo(order.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": "PUT",
      "isInterserviceCall": true
    },
    {
      "source": "ts-cancel-service/boolean cancel.service.CancelServiceImpl.sendEmail(edu.fudan.common.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-notification-service/boolean notification.controller.NotificationController.order_cancel_success(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getAccount(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/java.lang.String user.controller.UserController.testHello()",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-cancel-service/boolean cancel.service.CancelServiceImpl.drawbackMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.drawBack(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getOrderByIdFromOrderOther(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.findAllOrder(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelFromOtherOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.saveOrderInfo(other.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": "PUT",
      "isInterserviceCall": true
    },
    {
      "source": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.updateConsignRecord(consign.entity.Consign, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/org.springframework.http.HttpEntity consignprice.controller.ConsignPriceController.getPriceInfo(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.insertConsignRecord(consign.entity.Consign, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-price-service/org.springframework.http.HttpEntity consignprice.controller.ConsignPriceController.getPriceInfo(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrder(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.findAllOrder(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.executeOrder(java.lang.String, int, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.getOrderById(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrderOther(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.findAllOrder(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.executeOrderOther(java.lang.String, int, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.getOrderById(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.createFoodDeliveryOrder(food_delivery.entity.FoodDeliveryOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-station-food-service/org.springframework.http.HttpEntity food.controller.StationFoodController.getFoodStoresOfStation(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.getAllFood(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-train-food-service/org.springframework.http.HttpEntity trainFood.controller.TrainFoodController.getAllTrainFood(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.getAllFood(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-station-food-service/org.springframework.http.HttpEntity food.controller.StationFoodController.getFoodStoresByStationNames(java.util.List<java.lang.String>)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.pay(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/org.springframework.http.HttpEntity com.trainticket.controller.PaymentController.pay(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.payDifference(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-payment-service/org.springframework.http.HttpEntity com.trainticket.controller.PaymentController.pay(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-order-other-service/java.util.List other.service.OrderOtherServiceImpl.queryForStationId(java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.queryForNameBatch(java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-order-service/java.util.List order.service.OrderServiceImpl.queryForStationId(java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.queryForNameBatch(java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.getContactsById(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.getContactsByContactsId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.createConsign(edu.fudan.common.entity.Consign, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-service/org.springframework.http.HttpEntity consign.controller.ConsignController.insertConsign(consign.entity.Consign, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-other-service/java.lang.String preserveOther.service.PreserveOtherServiceImpl.queryForStationId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.query(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/org.springframework.http.HttpEntity fdse.microservice.controller.BasicController.queryForTravel(edu.fudan.common.entity.Travel, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.getTripAllDetailInfo(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.createOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.createNewOrder(other.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.checkSecurity(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/org.springframework.http.HttpEntity security.controller.SecurityController.findAllSecurityConfig(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.entity.User preserveOther.service.PreserveOtherServiceImpl.getAccount(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/java.lang.String user.controller.UserController.testHello()",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.entity.Ticket preserveOther.service.PreserveOtherServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/org.springframework.http.HttpEntity seat.controller.SeatController.create(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.createFoodOrder(edu.fudan.common.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.addAssuranceForOrder(int, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-assurance-service/org.springframework.http.HttpEntity assurance.controller.AssuranceController.getAllAssuranceType(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.addAssuranceForOrder(int, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-assurance-service/org.springframework.http.HttpEntity assurance.controller.AssuranceController.getAllAssuranceType(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-service/java.lang.String preserve.service.PreserveServiceImpl.queryForStationId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.query(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.createOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.createNewOrder(order.entity.Order, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/org.springframework.http.HttpEntity fdse.microservice.controller.BasicController.queryForTravel(edu.fudan.common.entity.Travel, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.checkSecurity(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-security-service/org.springframework.http.HttpEntity security.controller.SecurityController.findAllSecurityConfig(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.entity.Ticket preserve.service.PreserveServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/org.springframework.http.HttpEntity seat.controller.SeatController.create(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.createConsign(edu.fudan.common.entity.Consign, org.springframework.http.HttpHeaders)",
      "target": "ts-consign-service/org.springframework.http.HttpEntity consign.controller.ConsignController.insertConsign(consign.entity.Consign, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.createFoodOrder(edu.fudan.common.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "target": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.getTripAllDetailInfo(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.entity.User preserve.service.PreserveServiceImpl.getAccount(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-user-service/java.lang.String user.controller.UserController.testHello()",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.getContactsById(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.getContactsByContactsId(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.entity.TrainType rebook.service.RebookServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieveByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.entity.Ticket rebook.service.RebookServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/org.springframework.http.HttpEntity seat.controller.SeatController.create(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.payDifferentMoney(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.payDifference(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.drawBackMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.drawBack(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-rebook-service/edu.fudan.common.entity.Route rebook.service.RebookServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-route-plan-service/java.util.ArrayList plan.service.RoutePlanServiceImpl.getTripFromHighSpeedTravelServive(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.queryInfo(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchMinStopStations(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.getTripsByRouteId(java.util.ArrayList<java.lang.String>, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.entity.Route plan.service.RoutePlanServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchMinStopStations(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-route-plan-service/java.util.ArrayList plan.service.RoutePlanServiceImpl.getTripFromNormalTrainTravelService(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.queryInfo(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.distributeSeat(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.getTicketListByDateAndTripId(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.getLeftTicketOfInterval(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.getTicketListByDateAndTripId(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.distributeSeat(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.getTicketListByDateAndTripId(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.getLeftTicketOfInterval(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.getTicketListByDateAndTripId(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-security-service/edu.fudan.common.entity.OrderSecurity security.service.SecurityServiceImpl.getSecurityOrderOtherInfoFromOrder(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.getOrderById(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-security-service/edu.fudan.common.entity.OrderSecurity security.service.SecurityServiceImpl.getSecurityOrderInfoFromOrder(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.getOrderById(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.getRoutePlanResultCheapest(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/org.springframework.http.HttpEntity plan.controller.RoutePlanController.getCheapestRoutes(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.getRoutePlanResultQuickest(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/org.springframework.http.HttpEntity plan.controller.RoutePlanController.getQuickestRoutes(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.getRoutePlanResultMinStation(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-route-plan-service/org.springframework.http.HttpEntity plan.controller.RoutePlanController.getMinStopStations(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel-plan-service/edu.fudan.common.entity.TrainType travelplan.service.TravelPlanServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieveByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel-plan-service/int travelplan.service.TravelPlanServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/org.springframework.http.HttpEntity seat.controller.SeatController.getLeftTicketOfInterval(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.tripsFromNormal(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.queryInfo(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel-plan-service/java.util.List travelplan.service.TravelPlanServiceImpl.tripsFromHighSpeed(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "target": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.queryInfo(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel-service/java.util.List travel.service.TravelServiceImpl.getTicketsByBatch(java.util.List<travel.entity.Trip>, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/org.springframework.http.HttpEntity fdse.microservice.controller.BasicController.queryForTravels(java.util.List<edu.fudan.common.entity.Travel>, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.getTickets(travel.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/org.springframework.http.HttpEntity fdse.microservice.controller.BasicController.queryForTravel(edu.fudan.common.entity.Travel, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.Route travel.service.TravelServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel-service/int travel.service.TravelServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/org.springframework.http.HttpEntity seat.controller.SeatController.getLeftTicketOfInterval(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel-service/edu.fudan.common.entity.TrainType travel.service.TravelServiceImpl.getTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieveByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.TrainType travel2.service.TravelServiceImpl.getTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieveByName(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel2-service/int travel2.service.TravelServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List<java.lang.String>, org.springframework.http.HttpHeaders)",
      "target": "ts-seat-service/org.springframework.http.HttpEntity seat.controller.SeatController.getLeftTicketOfInterval(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.getTickets(travel2.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/org.springframework.http.HttpEntity fdse.microservice.controller.BasicController.queryForTravel(edu.fudan.common.entity.Travel, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel2-service/java.util.List travel2.service.TravelServiceImpl.getTicketsByBatch(java.util.List<travel2.entity.Trip>, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-basic-service/org.springframework.http.HttpEntity fdse.microservice.controller.BasicController.queryForTravels(java.util.List<edu.fudan.common.entity.Travel>, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-travel2-service/edu.fudan.common.entity.Route travel2.service.TravelServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryAll(org.springframework.http.HttpHeaders)",
      "httpMethod": "GET",
      "isInterserviceCall": true
    },
    {
      "source": "ts-user-service/void user.service.impl.UserServiceImpl.deleteUserAuth(java.lang.String, org.springframework.http.HttpHeaders)",
      "target": "ts-auth-service/org.springframework.http.ResponseEntity auth.controller.UserController.deleteUserById(java.lang.String, org.springframework.http.HttpHeaders)",
      "httpMethod": "DELETE",
      "isInterserviceCall": true
    },
    {
      "source": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.createDefaultAuthUser(user.dto.AuthDto)",
      "target": "ts-auth-service/org.springframework.http.HttpEntity auth.controller.AuthController.createDefaultUser(auth.dto.AuthDto)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    },
    {
      "source": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.utils.PollThread.doPreserve(java.lang.String, org.springframework.http.HttpEntity)",
      "target": "ts-contacts-service/org.springframework.http.ResponseEntity contacts.controller.ContactsController.createNewContacts(contacts.entity.Contacts, org.springframework.http.HttpHeaders)",
      "httpMethod": "POST",
      "isInterserviceCall": true
    }
  ],
  "methods": [
    {
      "id": 0,
      "name": "<clinit>",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "s",
      "display": "a.c.ABIC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd644066246de131eb8bee812f2ace80f49d71bafe3d92fade0edd3c214420e7",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/void adminbasic.controller.AdminBasicInfoController.<clinit>(empty)"
    },
    {
      "id": 1,
      "name": "addConfig",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.addConfig",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.Config",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/configs",
      "bytecodeHash": "fdf2b9256a9116011078b552471857825c3ced64129a1cf767b66d46ed60c20a",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.addConfig(edu.fudan.common.entity.Config, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2,
      "name": "addContacts",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.addContacts",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.Contacts",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/contacts",
      "bytecodeHash": "987710cbb8be4b2fc434fdb1e12ba6031b58caec339c20595a2f0f6c4c6b17e7",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.addContacts(edu.fudan.common.entity.Contacts, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 3,
      "name": "addPrice",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.addPrice",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "adminbasic.entity.PriceInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/prices",
      "bytecodeHash": "4dade039254be01f45efa7c49a82a4d0934fe7e7e2924c5c4d7a3ab5b6e4c766",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.addPrice(adminbasic.entity.PriceInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4,
      "name": "addStation",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.addStation",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.Station",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/stations",
      "bytecodeHash": "2e527ffbc9c16654c9a90693323ab6e8aeb793bf5c0601900f983e258f2ca967",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.addStation(edu.fudan.common.entity.Station, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 5,
      "name": "addTrain",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.addTrain",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.TrainType",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/trains",
      "bytecodeHash": "81fdd375a81c5c60ce5e57a14bc69e4bf027309c1f43220b3f900c970aba0ec1",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.addTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6,
      "name": "deleteConfig",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.deleteConfig",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/configs/{name}",
      "bytecodeHash": "6e06edd207885ff1b2c674ca349dda8edc0e2e81f4d184a88d29022d1aa42092",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.deleteConfig(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7,
      "name": "deleteContacts",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.deleteContacts",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/contacts/{contactsId}",
      "bytecodeHash": "b80770900a35c398bd9fe0cc80a2f7b54621ac6d6a76c7db238c70a71c386242",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.deleteContacts(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8,
      "name": "deletePrice",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.deletePrice",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/prices/{pricesId}",
      "bytecodeHash": "81785c4a549bb2e01cdcbdb661f005c29017fd97bbff23084d882ba5efeb07c7",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.deletePrice(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 9,
      "name": "deleteStation",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.deleteStation",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/stations/{id}",
      "bytecodeHash": "e065b06ffaf900d105fefbe7d1a6e384a0e76747cebcdcf465163dc9864360c0",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.deleteStation(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10,
      "name": "deleteTrain",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.deleteTrain",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/trains/{id}",
      "bytecodeHash": "efeaa86192946d684f80f2b0b55c86a4a12e28555a1b17776904c9678716397d",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.deleteTrain(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11,
      "name": "getAllConfigs",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.getAllConfigs",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/configs",
      "bytecodeHash": "cdf50aba3596b5d883786068e5dcd8225902d890a1eb494be814ba8c00a9279b",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.getAllConfigs(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 12,
      "name": "getAllContacts",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.getAllContacts",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/contacts",
      "bytecodeHash": "77604c5353051bdc1c00951ddb8d9b68696994f73402249dcc0798ff5db0e965",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.getAllContacts(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13,
      "name": "getAllPrices",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.getAllPrices",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/prices",
      "bytecodeHash": "eb052b17adda42f94f206c98d2de38c12ed530ec0e9fc63f096c46205400db72",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.getAllPrices(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14,
      "name": "getAllStations",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.getAllStations",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/stations",
      "bytecodeHash": "59f58242c58bc5a32e245fcb2fc8e36231673f91d0e19262b9f1f919190761c4",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.getAllStations(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 15,
      "name": "getAllTrains",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.getAllTrains",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/trains",
      "bytecodeHash": "b1788be7073984c8f23aa809b9705a99f1a6f6114c1d0184c52e3b7c1265e3c9",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.getAllTrains(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 16,
      "name": "home",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "/api/v1/adminbasicservice/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/java.lang.String adminbasic.controller.AdminBasicInfoController.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17,
      "name": "modifyConfig",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.modifyConfig",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "edu.fudan.common.entity.Config",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/configs",
      "bytecodeHash": "b77baf7a3ead645f9ce32dc7ecc2b72706236f07c86300124a87eae7ee97ba2f",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.modifyConfig(edu.fudan.common.entity.Config, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 18,
      "name": "modifyContacts",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.modifyContacts",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "edu.fudan.common.entity.Contacts",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/contacts",
      "bytecodeHash": "87d081a43593b66a308f22582a184b9fbcc7bd5415183104886caf5f27c7163e",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.modifyContacts(edu.fudan.common.entity.Contacts, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 19,
      "name": "modifyPrice",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.modifyPrice",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "adminbasic.entity.PriceInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/prices",
      "bytecodeHash": "946c73a02bfd2d55d6f3908d6c2a803feaf27d0227a83fe3cd1654d16d02fd3c",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.modifyPrice(adminbasic.entity.PriceInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 20,
      "name": "modifyStation",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.modifyStation",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "edu.fudan.common.entity.Station",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/stations",
      "bytecodeHash": "85317bbbfe38c602bcb81586dc0dabcc851341802f27ef09504eff1e14857814",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.modifyStation(edu.fudan.common.entity.Station, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 21,
      "name": "modifyTrain",
      "type": "adminbasic.controller.AdminBasicInfoController",
      "flags": "p",
      "display": "a.c.ABIC.modifyTrain",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "edu.fudan.common.entity.TrainType",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminbasicservice/adminbasic/trains",
      "bytecodeHash": "ca4bb9a02c615d93f2c69b8f7c67ef0a630b484fbcbd5386ec674396246fde77",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.modifyTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 22,
      "name": "<clinit>",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "s",
      "display": "a.s.ABISI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "8bd3157a17cb962cfac371a1066a28783564dd467b90ed625694f4cdb631e4de",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/void adminbasic.service.AdminBasicInfoServiceImpl.<clinit>(empty)"
    },
    {
      "id": 10651,
      "name": "getServiceUrl",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "P",
      "display": "a.s.ABISI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4c9cdca9114d46d9b6782076a5fcdd786861a709d13bfd695ca633cdf0ab0f00",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/java.lang.String adminbasic.service.AdminBasicInfoServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 39252,
      "name": "addConfig",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.addConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Config",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.addConfig(edu.fudan.common.entity.Config, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39256,
      "name": "addContact",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.addContact",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Contacts",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.addContact(edu.fudan.common.entity.Contacts, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39257,
      "name": "getId",
      "type": "adminbasic.entity.PriceInfo",
      "flags": "p",
      "display": "a.e.PI.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "804b3ae705e9e66161446b56a0c8ea320f025aad25a62dc23af37c7c98396f39",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/java.lang.String adminbasic.entity.PriceInfo.getId(empty)"
    },
    {
      "id": 39258,
      "name": "addPrice",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.addPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "adminbasic.entity.PriceInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.addPrice(adminbasic.entity.PriceInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39260,
      "name": "addStation",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.addStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Station",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.addStation(edu.fudan.common.entity.Station, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39262,
      "name": "addTrain",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.addTrain",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TrainType",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.addTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39263,
      "name": "deleteConfig",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.deleteConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.deleteConfig(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39264,
      "name": "deleteContact",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.deleteContact",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.deleteContact(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39265,
      "name": "deletePrice",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.deletePrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.deletePrice(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39266,
      "name": "deleteStation",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.deleteStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.deleteStation(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39267,
      "name": "deleteTrain",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.deleteTrain",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.deleteTrain(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39270,
      "name": "getAllConfigs",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.getAllConfigs",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.getAllConfigs(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7271,
      "name": "addConfig",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.addConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Config",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "e2959a64132679b28338442e599e6b4eba669b7dcf5a433e8e505fde2bc6fd93",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addConfig(edu.fudan.common.entity.Config, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39271,
      "name": "getAllContacts",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.getAllContacts",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.getAllContacts(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39272,
      "name": "getAllPrices",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.getAllPrices",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.getAllPrices(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7273,
      "name": "addContact",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.addContact",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Contacts",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "97aa6506bfcd4a49aee9eb415c08427f11ef9624d2fa7e54d6b4bf36c9c35cdc",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addContact(edu.fudan.common.entity.Contacts, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39273,
      "name": "getAllStations",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.getAllStations",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.getAllStations(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7274,
      "name": "addPrice",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.addPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "adminbasic.entity.PriceInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "5d093507c6e38d209821272f729f4a53f696a59f3a059d82615510a9bf731e09",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addPrice(adminbasic.entity.PriceInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39274,
      "name": "getAllTrains",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.getAllTrains",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.getAllTrains(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7275,
      "name": "addStation",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.addStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Station",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "905ef9404034d53893d2efd48ae485ee5642429f7accb00b7f0aed203725f2bf",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addStation(edu.fudan.common.entity.Station, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39275,
      "name": "modifyConfig",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.modifyConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Config",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.modifyConfig(edu.fudan.common.entity.Config, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7276,
      "name": "addTrain",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.addTrain",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TrainType",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "fdba467e2bb893dd6b13de136ac9369a42a1caab36103bbbed5974e272295718",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.addTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39276,
      "name": "modifyContact",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.modifyContact",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Contacts",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.modifyContact(edu.fudan.common.entity.Contacts, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7277,
      "name": "deleteConfig",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.deleteConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "fc82e3649473d94f0b5531ca9dd29d8216beea4bb5d3f061735ebb74d04ea862",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deleteConfig(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39277,
      "name": "modifyPrice",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.modifyPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "adminbasic.entity.PriceInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.modifyPrice(adminbasic.entity.PriceInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7278,
      "name": "deleteContact",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.deleteContact",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "28152eb50bdc418e4d0836e1dd390de543cdcefa0e32ffe7647b5ad11cacb0e8",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deleteContact(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39278,
      "name": "modifyStation",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.modifyStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Station",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.modifyStation(edu.fudan.common.entity.Station, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7279,
      "name": "deletePrice",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.deletePrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "b6f14fc392424e5754550fd758fb0133333063cb920fcb54a1cf50f562279e37",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deletePrice(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39279,
      "name": "modifyTrain",
      "type": "adminbasic.service.AdminBasicInfoService",
      "flags": "pa",
      "display": "a.s.ABIS.modifyTrain",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TrainType",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoService.modifyTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7280,
      "name": "deleteStation",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.deleteStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "ba5c1abc0858ba71506ac9d32de1cc471a2d00525454c3047ec5536353d08722",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deleteStation(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7281,
      "name": "deleteTrain",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.deleteTrain",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "9b97eb5a801e8cdc18be2f132155c90449413fb40c7ddd07c7fa9bc9a1acddb5",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.deleteTrain(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7285,
      "name": "getAllConfigs",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.getAllConfigs",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "14c4cd3462ddfad88b4250ff0f254036f4f5cc03d5870c7013359ce30ff895c0",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllConfigs(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7286,
      "name": "getAllContacts",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.getAllContacts",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "0196ecb807937159d6a54df3c8b09f54ec1cbdb72009c62c08c1cf95a40a1526",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllContacts(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7287,
      "name": "getAllPrices",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.getAllPrices",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "de8b241e8a1e18ba773ae4d09e338f190089e3c484776f26ff1a410f7fa4994e",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllPrices(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7288,
      "name": "getAllStations",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.getAllStations",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "2f737c0a78eda9aa4b7a8238409676f0c714ca407abf4741706bac2e850cb9e7",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllStations(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7289,
      "name": "getAllTrains",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.getAllTrains",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "c8d51e9db870d576a3e2ac2667f4c7429c8f552cd129e6de11ee5af272d5b564",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.getAllTrains(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7290,
      "name": "modifyConfig",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.modifyConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Config",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "d6ebcc42a6b102619899a295819bf47eafac90b70e0dea6f19680851119cd547",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyConfig(edu.fudan.common.entity.Config, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7291,
      "name": "modifyContact",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.modifyContact",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Contacts",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "ea42978fbed9cb5dfd12f8ee1f1b2efd8e0202e0198a4a4b4e54325f0ceb59b4",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyContact(edu.fudan.common.entity.Contacts, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7292,
      "name": "modifyPrice",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.modifyPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "adminbasic.entity.PriceInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "14a027569c2c6a72e67bd1936c3dd78fdfaf43606ff7cf6d4fbbbfaa962acec2",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyPrice(adminbasic.entity.PriceInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7293,
      "name": "modifyStation",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.modifyStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Station",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "066b8adc6f1c6a3351ff4c936c8a2a1a3e3b297ed19b2f83218cdd3ac9dfa787",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyStation(edu.fudan.common.entity.Station, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7294,
      "name": "modifyTrain",
      "type": "adminbasic.service.AdminBasicInfoServiceImpl",
      "flags": "p",
      "display": "a.s.ABISI.modifyTrain",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TrainType",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "17b946be352fe50df57c47f40ba3ec77668c20a6487017c67d85593748df7c1d",
      "microservice": "ts-admin-basic-info-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-basic-info-service/edu.fudan.common.util.Response adminbasic.service.AdminBasicInfoServiceImpl.modifyTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 0,
      "name": "<clinit>",
      "type": "adminorder.controller.AdminOrderController",
      "flags": "s",
      "display": "a.c.AOC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "66d95e034b6f741c3c396531f65ebe975240e5be41cc14e1b1435e717739a533",
      "microservice": "ts-admin-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-order-service/void adminorder.controller.AdminOrderController.<clinit>(empty)"
    },
    {
      "id": 7296,
      "name": "getAllOrders",
      "type": "adminorder.service.AdminOrderServiceImpl",
      "flags": "p",
      "display": "a.s.AOSI.getAllOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "c63b2d32712b4ddafded5927fcc4344cbcfc5ae9c71f3510ddc67d7a9fbdb88b",
      "microservice": "ts-admin-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.getAllOrders(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1,
      "name": "addOrder",
      "type": "adminorder.controller.AdminOrderController",
      "flags": "p",
      "display": "a.c.AOC.addOrder",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminorderservice/adminorder",
      "bytecodeHash": "e5d73ae67c3886bf0dd383be89e512abd8db3d78ae208b517826e2f0fb713667",
      "microservice": "ts-admin-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-order-service/org.springframework.http.HttpEntity adminorder.controller.AdminOrderController.addOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7297,
      "name": "updateOrder",
      "type": "adminorder.service.AdminOrderServiceImpl",
      "flags": "p",
      "display": "a.s.AOSI.updateOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "a92161d5fb38cec3eee1deb184268866759ffb78c0e748576f9ac39c86e70699",
      "microservice": "ts-admin-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.updateOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2,
      "name": "deleteOrder",
      "type": "adminorder.controller.AdminOrderController",
      "flags": "p",
      "display": "a.c.AOC.deleteOrder",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminorderservice/adminorder/{orderId}/{trainNumber}",
      "bytecodeHash": "bdbdfd663524bf368bbc6a5f2dfffde0fe1a9640993b08f713fd556157f9ce59",
      "microservice": "ts-admin-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-order-service/org.springframework.http.HttpEntity adminorder.controller.AdminOrderController.deleteOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10658,
      "name": "getServiceUrl",
      "type": "adminorder.service.AdminOrderServiceImpl",
      "flags": "P",
      "display": "a.s.AOSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4c9cdca9114d46d9b6782076a5fcdd786861a709d13bfd695ca633cdf0ab0f00",
      "microservice": "ts-admin-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-order-service/java.lang.String adminorder.service.AdminOrderServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 3,
      "name": "getAllOrders",
      "type": "adminorder.controller.AdminOrderController",
      "flags": "p",
      "display": "a.c.AOC.getAllOrders",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminorderservice/adminorder",
      "bytecodeHash": "77604c5353051bdc1c00951ddb8d9b68696994f73402249dcc0798ff5db0e965",
      "microservice": "ts-admin-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-order-service/org.springframework.http.HttpEntity adminorder.controller.AdminOrderController.getAllOrders(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4,
      "name": "home",
      "type": "adminorder.controller.AdminOrderController",
      "flags": "p",
      "display": "a.c.AOC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "/api/v1/adminorderservice/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-admin-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-order-service/java.lang.String adminorder.controller.AdminOrderController.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 5,
      "name": "updateOrder",
      "type": "adminorder.controller.AdminOrderController",
      "flags": "p",
      "display": "a.c.AOC.updateOrder",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "edu.fudan.common.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminorderservice/adminorder",
      "bytecodeHash": "44a6a6380ce167a674d829ec437ebe20f14339d18d5eeb1bb90540ed9184fe6a",
      "microservice": "ts-admin-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-order-service/org.springframework.http.HttpEntity adminorder.controller.AdminOrderController.updateOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6,
      "name": "<clinit>",
      "type": "adminorder.service.AdminOrderServiceImpl",
      "flags": "s",
      "display": "a.s.AOSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "3f63d08a2ca52a55c0b99e30c3ddd536e5b3c208a98be0cd36409b6272ee5a77",
      "microservice": "ts-admin-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-order-service/void adminorder.service.AdminOrderServiceImpl.<clinit>(empty)"
    },
    {
      "id": 10665,
      "name": "<init>",
      "type": "adminorder.service.AdminOrderServiceImpl$1",
      "flags": "",
      "display": "a.s.AOSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["adminorder.service.AdminOrderServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-admin-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-order-service/void adminorder.service.AdminOrderServiceImpl$1.<init>(adminorder.service.AdminOrderServiceImpl)"
    },
    {
      "id": 39276,
      "name": "addOrder",
      "type": "adminorder.service.AdminOrderService",
      "flags": "pa",
      "display": "a.s.AOS.addOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderService.addOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10669,
      "name": "<init>",
      "type": "adminorder.service.AdminOrderServiceImpl$2",
      "flags": "",
      "display": "a.s.AOSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["adminorder.service.AdminOrderServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-admin-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-order-service/void adminorder.service.AdminOrderServiceImpl$2.<init>(adminorder.service.AdminOrderServiceImpl)"
    },
    {
      "id": 39283,
      "name": "deleteOrder",
      "type": "adminorder.service.AdminOrderService",
      "flags": "pa",
      "display": "a.s.AOS.deleteOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderService.deleteOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39285,
      "name": "getAllOrders",
      "type": "adminorder.service.AdminOrderService",
      "flags": "pa",
      "display": "a.s.AOS.getAllOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderService.getAllOrders(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7287,
      "name": "addOrder",
      "type": "adminorder.service.AdminOrderServiceImpl",
      "flags": "p",
      "display": "a.s.AOSI.addOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "4703cfd8d776047fae4b526f08e29f10e3c1463efc15d80299bda25f0cf0cafa",
      "microservice": "ts-admin-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.addOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39290,
      "name": "updateOrder",
      "type": "adminorder.service.AdminOrderService",
      "flags": "pa",
      "display": "a.s.AOS.updateOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderService.updateOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7292,
      "name": "deleteOrder",
      "type": "adminorder.service.AdminOrderServiceImpl",
      "flags": "p",
      "display": "a.s.AOSI.deleteOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "7fe8bd1b1ad2c0a4185569cda25e5ae959efd4260b77b2537c2eb78a1c049fa7",
      "microservice": "ts-admin-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-order-service/edu.fudan.common.util.Response adminorder.service.AdminOrderServiceImpl.deleteOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 0,
      "name": "<clinit>",
      "type": "adminroute.controller.AdminRouteController",
      "flags": "s",
      "display": "a.c.ARC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "66d95e034b6f741c3c396531f65ebe975240e5be41cc14e1b1435e717739a533",
      "microservice": "ts-admin-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-route-service/void adminroute.controller.AdminRouteController.<clinit>(empty)"
    },
    {
      "id": 39296,
      "name": "deleteRoute",
      "type": "adminroute.service.AdminRouteService",
      "flags": "pa",
      "display": "a.s.ARS.deleteRoute",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteService.deleteRoute(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1,
      "name": "addRoute",
      "type": "adminroute.controller.AdminRouteController",
      "flags": "p",
      "display": "a.c.ARC.addRoute",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.RouteInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminrouteservice/adminroute",
      "bytecodeHash": "f7000feacd5c035193e0257f93dddc33da0a9018ec770bc287c4f408823e9a70",
      "microservice": "ts-admin-route-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-route-service/org.springframework.http.HttpEntity adminroute.controller.AdminRouteController.addRoute(edu.fudan.common.entity.RouteInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2,
      "name": "deleteRoute",
      "type": "adminroute.controller.AdminRouteController",
      "flags": "p",
      "display": "a.c.ARC.deleteRoute",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminrouteservice/adminroute/{routeId}",
      "bytecodeHash": "9a3745678ba3c849a1e59f2736a7050647e8bace1ae790a7daa311508d685e4f",
      "microservice": "ts-admin-route-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-route-service/org.springframework.http.HttpEntity adminroute.controller.AdminRouteController.deleteRoute(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 3,
      "name": "getAllRoutes",
      "type": "adminroute.controller.AdminRouteController",
      "flags": "p",
      "display": "a.c.ARC.getAllRoutes",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminrouteservice/adminroute",
      "bytecodeHash": "77604c5353051bdc1c00951ddb8d9b68696994f73402249dcc0798ff5db0e965",
      "microservice": "ts-admin-route-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-route-service/org.springframework.http.HttpEntity adminroute.controller.AdminRouteController.getAllRoutes(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39299,
      "name": "getAllRoutes",
      "type": "adminroute.service.AdminRouteService",
      "flags": "pa",
      "display": "a.s.ARS.getAllRoutes",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteService.getAllRoutes(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4,
      "name": "home",
      "type": "adminroute.controller.AdminRouteController",
      "flags": "p",
      "display": "a.c.ARC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "/api/v1/adminrouteservice/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-admin-route-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-route-service/java.lang.String adminroute.controller.AdminRouteController.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10660,
      "name": "checkStationsExists",
      "type": "adminroute.service.AdminRouteServiceImpl",
      "flags": "p",
      "display": "a.s.ARSI.checkStationsExists",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "eff78c48c4df0f2ca0aa07b8c78ec4d241c80ce48b6ab556a263b824e3fc2836",
      "microservice": "ts-admin-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.checkStationsExists(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 5,
      "name": "<clinit>",
      "type": "adminroute.service.AdminRouteServiceImpl",
      "flags": "s",
      "display": "a.s.ARSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "529591bc3a6ce305bac920e407524fffd8a68ba22a2346d87bc1bf4e18ed9bfb",
      "microservice": "ts-admin-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-route-service/void adminroute.service.AdminRouteServiceImpl.<clinit>(empty)"
    },
    {
      "id": 10661,
      "name": "getServiceUrl",
      "type": "adminroute.service.AdminRouteServiceImpl",
      "flags": "P",
      "display": "a.s.ARSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4c9cdca9114d46d9b6782076a5fcdd786861a709d13bfd695ca633cdf0ab0f00",
      "microservice": "ts-admin-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-route-service/java.lang.String adminroute.service.AdminRouteServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 10662,
      "name": "<init>",
      "type": "adminroute.service.AdminRouteServiceImpl$1",
      "flags": "",
      "display": "a.s.ARSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["adminroute.service.AdminRouteServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-admin-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-route-service/void adminroute.service.AdminRouteServiceImpl$1.<init>(adminroute.service.AdminRouteServiceImpl)"
    },
    {
      "id": 39281,
      "name": "createAndModifyRoute",
      "type": "adminroute.service.AdminRouteService",
      "flags": "pa",
      "display": "a.s.ARS.createAndModifyRoute",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.RouteInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteService.createAndModifyRoute(edu.fudan.common.entity.RouteInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7286,
      "name": "createAndModifyRoute",
      "type": "adminroute.service.AdminRouteServiceImpl",
      "flags": "p",
      "display": "a.s.ARSI.createAndModifyRoute",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.RouteInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "d1a8d7e8536b8e9471783796ef4f8e1f61ccc0654ba027c43d9013a2e5153928",
      "microservice": "ts-admin-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.createAndModifyRoute(edu.fudan.common.entity.RouteInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7291,
      "name": "deleteRoute",
      "type": "adminroute.service.AdminRouteServiceImpl",
      "flags": "p",
      "display": "a.s.ARSI.deleteRoute",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "49affa83fdd80c1910dde070fcdc449d559abd0ae41362113788c7c733b03923",
      "microservice": "ts-admin-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.deleteRoute(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7295,
      "name": "getAllRoutes",
      "type": "adminroute.service.AdminRouteServiceImpl",
      "flags": "p",
      "display": "a.s.ARSI.getAllRoutes",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "f21089c469ff0079101310df8b733acbea5f82f0072ee9f1beeadf7eae58d933",
      "microservice": "ts-admin-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-route-service/edu.fudan.common.util.Response adminroute.service.AdminRouteServiceImpl.getAllRoutes(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 0,
      "name": "<clinit>",
      "type": "admintravel.controller.AdminTravelController",
      "flags": "s",
      "display": "a.c.ATC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "ae1e58630356ddac510494ebc6eda8ca1cc071891390f3ad61f26aeecb1ae05e",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/void admintravel.controller.AdminTravelController.<clinit>(empty)"
    },
    {
      "id": 1,
      "name": "addTravel",
      "type": "admintravel.controller.AdminTravelController",
      "flags": "p",
      "display": "a.c.ATC.addTravel",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/admintravelservice/admintravel",
      "bytecodeHash": "e9402c8bae0a05f04b01a210d40a379088fa5e3ee816b2233d94e54d30b7f487",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-travel-service/org.springframework.http.HttpEntity admintravel.controller.AdminTravelController.addTravel(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7553,
      "name": "addTravel",
      "type": "admintravel.service.AdminTravelServiceImpl",
      "flags": "p",
      "display": "a.s.ATSI.addTravel",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "8dbacad4c7b8792a4765b9d6f4522ebafe7e3e24c00bfb8e70c010cce7e89c57",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.addTravel(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2,
      "name": "deleteTravel",
      "type": "admintravel.controller.AdminTravelController",
      "flags": "p",
      "display": "a.c.ATC.deleteTravel",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/admintravelservice/admintravel/{tripId}",
      "bytecodeHash": "e4db28eeae454f9e0608364dca0b76e3acc5e0c7bebc2dbf1117c47c06a14462",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-travel-service/org.springframework.http.HttpEntity admintravel.controller.AdminTravelController.deleteTravel(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 3,
      "name": "getAllTravels",
      "type": "admintravel.controller.AdminTravelController",
      "flags": "p",
      "display": "a.c.ATC.getAllTravels",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/admintravelservice/admintravel",
      "bytecodeHash": "77604c5353051bdc1c00951ddb8d9b68696994f73402249dcc0798ff5db0e965",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-travel-service/org.springframework.http.HttpEntity admintravel.controller.AdminTravelController.getAllTravels(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4,
      "name": "home",
      "type": "admintravel.controller.AdminTravelController",
      "flags": "p",
      "display": "a.c.ATC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "/api/v1/admintravelservice/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-travel-service/java.lang.String admintravel.controller.AdminTravelController.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 5,
      "name": "updateTravel",
      "type": "admintravel.controller.AdminTravelController",
      "flags": "p",
      "display": "a.c.ATC.updateTravel",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/admintravelservice/admintravel",
      "bytecodeHash": "7dbad0d1b67fb7de9b73ea5e2d49e2c64c6054fad6af47303daf5dee9c000b5b",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-travel-service/org.springframework.http.HttpEntity admintravel.controller.AdminTravelController.updateTravel(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6,
      "name": "<clinit>",
      "type": "admintravel.service.AdminTravelServiceImpl",
      "flags": "s",
      "display": "a.s.ATSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "45974b2b4399fde4af15bdd4923b42c252f40afebeee2fd7b406da028642b266",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/void admintravel.service.AdminTravelServiceImpl.<clinit>(empty)"
    },
    {
      "id": 7558,
      "name": "deleteTravel",
      "type": "admintravel.service.AdminTravelServiceImpl",
      "flags": "p",
      "display": "a.s.ATSI.deleteTravel",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "fc2c9b7a5b432a41540597393a1321ec9c710f27ce616f41e7146f6121dc0a78",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.deleteTravel(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14472,
      "name": "checkStationsExists",
      "type": "admintravel.service.AdminTravelServiceImpl",
      "flags": "p",
      "display": "a.s.ATSI.checkStationsExists",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "dc12a443070a3fd94fa33c424914a6a9353cf1c3f66beda28827c4f5d1088622",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.checkStationsExists(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14473,
      "name": "queryTrainTypeByName",
      "type": "admintravel.service.AdminTravelServiceImpl",
      "flags": "p",
      "display": "a.s.ATSI.queryTrainTypeByName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.TrainType",
      "endpointURI": null,
      "bytecodeHash": "01925ccb64fc9b27f532d8c67078356364f4aa1c1b8c831b95909615a8127526",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/edu.fudan.common.entity.TrainType admintravel.service.AdminTravelServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7562,
      "name": "getAllTravels",
      "type": "admintravel.service.AdminTravelServiceImpl",
      "flags": "p",
      "display": "a.s.ATSI.getAllTravels",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "f2e5c8256338809e0b780afafffc5b5a3bedb7f7b6247f0d85284696c0c97989",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.getAllTravels(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7563,
      "name": "updateTravel",
      "type": "admintravel.service.AdminTravelServiceImpl",
      "flags": "p",
      "display": "a.s.ATSI.updateTravel",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "780065c08ec54eba246aa637b38caec5b30b12b957e54c25bf76fc963e75bf04",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.updateTravel(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 44078,
      "name": "addTravel",
      "type": "admintravel.service.AdminTravelService",
      "flags": "pa",
      "display": "a.s.ATS.addTravel",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelService.addTravel(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11055,
      "name": "checkTravelInfo",
      "type": "admintravel.service.AdminTravelServiceImpl",
      "flags": "p",
      "display": "a.s.ATSI.checkTravelInfo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "be27819d1c2a326a9b4aa5b6aab20d40149132001d01840262adbd123df2b3e5",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelServiceImpl.checkTravelInfo(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14479,
      "name": "getRouteByRouteId",
      "type": "admintravel.service.AdminTravelServiceImpl",
      "flags": "P",
      "display": "a.s.ATSI.getRouteByRouteId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.Route",
      "endpointURI": null,
      "bytecodeHash": "d432258106260b18915607f9326fc6f0a5455d62f56ac0cd799ed65dbc4b3473",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/edu.fudan.common.entity.Route admintravel.service.AdminTravelServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11056,
      "name": "getServiceUrl",
      "type": "admintravel.service.AdminTravelServiceImpl",
      "flags": "P",
      "display": "a.s.ATSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4c9cdca9114d46d9b6782076a5fcdd786861a709d13bfd695ca633cdf0ab0f00",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/java.lang.String admintravel.service.AdminTravelServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 44244,
      "name": "deleteTravel",
      "type": "admintravel.service.AdminTravelService",
      "flags": "pa",
      "display": "a.s.ATS.deleteTravel",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelService.deleteTravel(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 44246,
      "name": "getAllTravels",
      "type": "admintravel.service.AdminTravelService",
      "flags": "pa",
      "display": "a.s.ATS.getAllTravels",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelService.getAllTravels(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11066,
      "name": "<init>",
      "type": "admintravel.service.AdminTravelServiceImpl$1",
      "flags": "",
      "display": "a.s.ATSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["admintravel.service.AdminTravelServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/void admintravel.service.AdminTravelServiceImpl$1.<init>(admintravel.service.AdminTravelServiceImpl)"
    },
    {
      "id": 44251,
      "name": "updateTravel",
      "type": "admintravel.service.AdminTravelService",
      "flags": "pa",
      "display": "a.s.ATS.updateTravel",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/edu.fudan.common.util.Response admintravel.service.AdminTravelService.updateTravel(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11070,
      "name": "<init>",
      "type": "admintravel.service.AdminTravelServiceImpl$2",
      "flags": "",
      "display": "a.s.ATSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["admintravel.service.AdminTravelServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-admin-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-travel-service/void admintravel.service.AdminTravelServiceImpl$2.<init>(admintravel.service.AdminTravelServiceImpl)"
    },
    {
      "id": 0,
      "name": "<clinit>",
      "type": "adminuser.controller.AdminUserController",
      "flags": "s",
      "display": "a.c.AUC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "ba0303d59eab0da189eb1df6c94ed9107a21fd5d0145464b3764b496e058e32c",
      "microservice": "ts-admin-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-user-service/void adminuser.controller.AdminUserController.<clinit>(empty)"
    },
    {
      "id": 1,
      "name": "addUser",
      "type": "adminuser.controller.AdminUserController",
      "flags": "p",
      "display": "a.c.AUC.addUser",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "adminuser.dto.UserDto",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminuserservice/users",
      "bytecodeHash": "234cb318145b71372095281190da8e41db9051711cb6bb4b32c7ed0beac4f7ae",
      "microservice": "ts-admin-user-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-user-service/org.springframework.http.HttpEntity adminuser.controller.AdminUserController.addUser(adminuser.dto.UserDto, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39265,
      "name": "getAllUsers",
      "type": "adminuser.service.AdminUserService",
      "flags": "pa",
      "display": "a.s.AUS.getAllUsers",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserService.getAllUsers(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2,
      "name": "deleteUser",
      "type": "adminuser.controller.AdminUserController",
      "flags": "p",
      "display": "a.c.AUC.deleteUser",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminuserservice/users/{userId}",
      "bytecodeHash": "4c7ce50cafc567609b23ed6edcc1a5f6632562b097d46bb2dcc09cd5bcfc5c4f",
      "microservice": "ts-admin-user-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-user-service/org.springframework.http.HttpEntity adminuser.controller.AdminUserController.deleteUser(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 3,
      "name": "getAllUsers",
      "type": "adminuser.controller.AdminUserController",
      "flags": "p",
      "display": "a.c.AUC.getAllUsers",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminuserservice/users",
      "bytecodeHash": "77604c5353051bdc1c00951ddb8d9b68696994f73402249dcc0798ff5db0e965",
      "microservice": "ts-admin-user-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-user-service/org.springframework.http.HttpEntity adminuser.controller.AdminUserController.getAllUsers(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7267,
      "name": "getAllUsers",
      "type": "adminuser.service.AdminUserServiceImpl",
      "flags": "p",
      "display": "a.s.AUSI.getAllUsers",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "8aa5bd6cad5f6ad5f4b46f24dd0947c3f40b6a75a076c768c058301352f81c3b",
      "microservice": "ts-admin-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.getAllUsers(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39267,
      "name": "updateUser",
      "type": "adminuser.service.AdminUserService",
      "flags": "pa",
      "display": "a.s.AUS.updateUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "adminuser.dto.UserDto",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserService.updateUser(adminuser.dto.UserDto, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4,
      "name": "home",
      "type": "adminuser.controller.AdminUserController",
      "flags": "p",
      "display": "a.c.AUC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "/api/v1/adminuserservice/users/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-admin-user-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-user-service/java.lang.String adminuser.controller.AdminUserController.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7268,
      "name": "updateUser",
      "type": "adminuser.service.AdminUserServiceImpl",
      "flags": "p",
      "display": "a.s.AUSI.updateUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "adminuser.dto.UserDto",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "00161392ad15933f9701d61cc9fa4946ae40e642531fae72d6d0fb1b00b4f2a1",
      "microservice": "ts-admin-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.updateUser(adminuser.dto.UserDto, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 5,
      "name": "updateUser",
      "type": "adminuser.controller.AdminUserController",
      "flags": "p",
      "display": "a.c.AUC.updateUser",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "adminuser.dto.UserDto",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/adminuserservice/users",
      "bytecodeHash": "e5d73ae67c3886bf0dd383be89e512abd8db3d78ae208b517826e2f0fb713667",
      "microservice": "ts-admin-user-service",
      "endpointMethod": true,
      "methodSignature": "ts-admin-user-service/org.springframework.http.HttpEntity adminuser.controller.AdminUserController.updateUser(adminuser.dto.UserDto, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10629,
      "name": "getServiceUrl",
      "type": "adminuser.service.AdminUserServiceImpl",
      "flags": "P",
      "display": "a.s.AUSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4c9cdca9114d46d9b6782076a5fcdd786861a709d13bfd695ca633cdf0ab0f00",
      "microservice": "ts-admin-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-user-service/java.lang.String adminuser.service.AdminUserServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 6,
      "name": "<clinit>",
      "type": "adminuser.service.AdminUserServiceImpl",
      "flags": "s",
      "display": "a.s.AUSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "002e2476649c8ac673068c080dfc524a86b9b9117470eda6b555e37a79168c8b",
      "microservice": "ts-admin-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-user-service/void adminuser.service.AdminUserServiceImpl.<clinit>(empty)"
    },
    {
      "id": 10630,
      "name": "<init>",
      "type": "adminuser.service.AdminUserServiceImpl$2",
      "flags": "",
      "display": "a.s.AUSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["adminuser.service.AdminUserServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-admin-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-user-service/void adminuser.service.AdminUserServiceImpl$2.<init>(adminuser.service.AdminUserServiceImpl)"
    },
    {
      "id": 10642,
      "name": "<init>",
      "type": "adminuser.service.AdminUserServiceImpl$1",
      "flags": "",
      "display": "a.s.AUSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["adminuser.service.AdminUserServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-admin-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-user-service/void adminuser.service.AdminUserServiceImpl$1.<init>(adminuser.service.AdminUserServiceImpl)"
    },
    {
      "id": 39253,
      "name": "addUser",
      "type": "adminuser.service.AdminUserService",
      "flags": "pa",
      "display": "a.s.AUS.addUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "adminuser.dto.UserDto",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserService.addUser(adminuser.dto.UserDto, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39254,
      "name": "toString",
      "type": "adminuser.dto.UserDto",
      "flags": "p",
      "display": "a.d.UD.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "7305bb71936d6aad7837c3c3d6f64fbd928a657346502412f49113f01731960d",
      "microservice": "ts-admin-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-user-service/java.lang.String adminuser.dto.UserDto.toString(empty)"
    },
    {
      "id": 39259,
      "name": "deleteUser",
      "type": "adminuser.service.AdminUserService",
      "flags": "pa",
      "display": "a.s.AUS.deleteUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-admin-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserService.deleteUser(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39228,
      "name": "getUserName",
      "type": "adminuser.dto.UserDto",
      "flags": "p",
      "display": "a.d.UD.getUserName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-admin-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-user-service/java.lang.String adminuser.dto.UserDto.getUserName(empty)"
    },
    {
      "id": 7261,
      "name": "addUser",
      "type": "adminuser.service.AdminUserServiceImpl",
      "flags": "p",
      "display": "a.s.AUSI.addUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "adminuser.dto.UserDto",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "50e1710d64902e1309c4b90530f071a747d599baae8d8232e399113f7df9642c",
      "microservice": "ts-admin-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.addUser(adminuser.dto.UserDto, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7263,
      "name": "deleteUser",
      "type": "adminuser.service.AdminUserServiceImpl",
      "flags": "p",
      "display": "a.s.AUSI.deleteUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "60f934a46a3de88026252e1afdda7258060bf1c24ecc72387c1bba8fd0363af7",
      "microservice": "ts-admin-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-admin-user-service/edu.fudan.common.util.Response adminuser.service.AdminUserServiceImpl.deleteUser(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 0,
      "name": "<clinit>",
      "type": "assurance.controller.AssuranceController",
      "flags": "s",
      "display": "a.c.AC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "722b64a47fdee802e097c7442846cc4d5fe0eff21e8ceb9f2edffe4e5223ed75",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/void assurance.controller.AssuranceController.<clinit>(empty)"
    },
    {
      "id": 1,
      "name": "createNewAssurance",
      "type": "assurance.controller.AssuranceController",
      "flags": "p",
      "display": "a.c.AC.createNewAssurance",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "int",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/assuranceservice/assurances/{typeIndex}/{orderId}",
      "bytecodeHash": "2be9b9e64b7f81705a35cb155ed856497115472fc0d4457ef25e7e871a8e3a76",
      "microservice": "ts-assurance-service",
      "endpointMethod": true,
      "methodSignature": "ts-assurance-service/org.springframework.http.HttpEntity assurance.controller.AssuranceController.createNewAssurance(int, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2,
      "name": "deleteAssurance",
      "type": "assurance.controller.AssuranceController",
      "flags": "p",
      "display": "a.c.AC.deleteAssurance",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/assuranceservice/assurances/assuranceid/{assuranceId}",
      "bytecodeHash": "ad9661feb748f7bab7550fb4eafdd248365e9d3918c8a97855e8bed267ed2d5c",
      "microservice": "ts-assurance-service",
      "endpointMethod": true,
      "methodSignature": "ts-assurance-service/org.springframework.http.HttpEntity assurance.controller.AssuranceController.deleteAssurance(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 3,
      "name": "deleteAssuranceByOrderId",
      "type": "assurance.controller.AssuranceController",
      "flags": "p",
      "display": "a.c.AC.deleteAssuranceByOrderId",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/assuranceservice/assurances/orderid/{orderId}",
      "bytecodeHash": "9c3d2693c21a9f7d611a372787173928f340b2b9537cbe018afe73004e09ca3c",
      "microservice": "ts-assurance-service",
      "endpointMethod": true,
      "methodSignature": "ts-assurance-service/org.springframework.http.HttpEntity assurance.controller.AssuranceController.deleteAssuranceByOrderId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4,
      "name": "findAssuranceByOrderId",
      "type": "assurance.controller.AssuranceController",
      "flags": "p",
      "display": "a.c.AC.findAssuranceByOrderId",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/assuranceservice/assurance/orderid/{orderId}",
      "bytecodeHash": "a048118ddcc4a7eedb278fa6ebc61fa8e962a1b1d1f47657d65a1ad0ad77046a",
      "microservice": "ts-assurance-service",
      "endpointMethod": true,
      "methodSignature": "ts-assurance-service/org.springframework.http.HttpEntity assurance.controller.AssuranceController.findAssuranceByOrderId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 5,
      "name": "getAllAssuranceType",
      "type": "assurance.controller.AssuranceController",
      "flags": "p",
      "display": "a.c.AC.getAllAssuranceType",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/assuranceservice/assurances/types",
      "bytecodeHash": "fa686c81f242febf43de5174e7f227fd3725876be010531a7b6f6846453ebd5b",
      "microservice": "ts-assurance-service",
      "endpointMethod": true,
      "methodSignature": "ts-assurance-service/org.springframework.http.HttpEntity assurance.controller.AssuranceController.getAllAssuranceType(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6,
      "name": "getAllAssurances",
      "type": "assurance.controller.AssuranceController",
      "flags": "p",
      "display": "a.c.AC.getAllAssurances",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/assuranceservice/assurances",
      "bytecodeHash": "77604c5353051bdc1c00951ddb8d9b68696994f73402249dcc0798ff5db0e965",
      "microservice": "ts-assurance-service",
      "endpointMethod": true,
      "methodSignature": "ts-assurance-service/org.springframework.http.HttpEntity assurance.controller.AssuranceController.getAllAssurances(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7,
      "name": "getAssuranceById",
      "type": "assurance.controller.AssuranceController",
      "flags": "p",
      "display": "a.c.AC.getAssuranceById",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/assuranceservice/assurances/assuranceid/{assuranceId}",
      "bytecodeHash": "fb8b3cdb5a886228fc48f3dfa752e31a54f4d97fce87fdd1191922ccbbdb813b",
      "microservice": "ts-assurance-service",
      "endpointMethod": true,
      "methodSignature": "ts-assurance-service/org.springframework.http.HttpEntity assurance.controller.AssuranceController.getAssuranceById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8,
      "name": "home",
      "type": "assurance.controller.AssuranceController",
      "flags": "p",
      "display": "a.c.AC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "/api/v1/assuranceservice/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-assurance-service",
      "endpointMethod": true,
      "methodSignature": "ts-assurance-service/java.lang.String assurance.controller.AssuranceController.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 9,
      "name": "equals",
      "type": "assurance.entity.Assurance",
      "flags": "p",
      "display": "a.e.A.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "f48e37e93b7b85903371142523e74e35f7e46e75616e23d47f4f88371c52f765",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/boolean assurance.entity.Assurance.equals(java.lang.Object)"
    },
    {
      "id": 10,
      "name": "hashCode",
      "type": "assurance.entity.Assurance",
      "flags": "p",
      "display": "a.e.A.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "b115d4660bb6a98f22b598c1fd353020fe5ee62fb17b82dae81b1fa41d3cf5f9",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/int assurance.entity.Assurance.hashCode(empty)"
    },
    {
      "id": 11,
      "name": "toString",
      "type": "assurance.entity.Assurance",
      "flags": "p",
      "display": "a.e.A.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "3d3c5902b2f1daaa1dc3878beb59b0fa140b6c40f734ce88b69fa3b8d620669c",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/java.lang.String assurance.entity.Assurance.toString(empty)"
    },
    {
      "id": 12,
      "name": "values",
      "type": "assurance.entity.AssuranceType",
      "flags": "ps",
      "display": "a.e.AT.values",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "assurance.entity.AssuranceType[]",
      "endpointURI": null,
      "bytecodeHash": "788a04776960595c8ec4d925c472f45949608c1c07c621f228ef227be9c9b16e",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/assurance.entity.AssuranceType[] assurance.entity.AssuranceType.values(empty)"
    },
    {
      "id": 13,
      "name": "equals",
      "type": "assurance.entity.AssuranceTypeBean",
      "flags": "p",
      "display": "a.e.ATB.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "9fb395dd6ba2996dc74ecfaeff0474d32d9f64e031b214ffd9b816b29ce40880",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/boolean assurance.entity.AssuranceTypeBean.equals(java.lang.Object)"
    },
    {
      "id": 14,
      "name": "hashCode",
      "type": "assurance.entity.AssuranceTypeBean",
      "flags": "p",
      "display": "a.e.ATB.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "9f4f1f59b0061dc267bafae7c6d0bb9f496ba79cfba166d16ef0b8a3f2f5c2ff",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/int assurance.entity.AssuranceTypeBean.hashCode(empty)"
    },
    {
      "id": 15,
      "name": "toString",
      "type": "assurance.entity.AssuranceTypeBean",
      "flags": "p",
      "display": "a.e.ATB.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "6d43407857ffad67982a1fd9b2642b0f0ac2eee696080c150cd6cf0057977c4a",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/java.lang.String assurance.entity.AssuranceTypeBean.toString(empty)"
    },
    {
      "id": 7311,
      "name": "create",
      "type": "assurance.service.AssuranceServiceImpl",
      "flags": "p",
      "display": "a.s.ASI.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "int",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "05bc2d9a7fa01ca5a63cb0bcd405be01b99e9be0ec6019d7c1d8471f7fd87169",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.create(int, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 16,
      "name": "equals",
      "type": "assurance.entity.PlainAssurance",
      "flags": "p",
      "display": "a.e.PA.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "50de038f6e5f75dd446dd2645e6d41e9bcdc4b34f19477308d84db87f8448c9f",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/boolean assurance.entity.PlainAssurance.equals(java.lang.Object)"
    },
    {
      "id": 17,
      "name": "hashCode",
      "type": "assurance.entity.PlainAssurance",
      "flags": "p",
      "display": "a.e.PA.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "66da9850f94fabbaf6872a00e91582ce3415d3722479241d9b03a4367d0bc85d",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/int assurance.entity.PlainAssurance.hashCode(empty)"
    },
    {
      "id": 18,
      "name": "toString",
      "type": "assurance.entity.PlainAssurance",
      "flags": "p",
      "display": "a.e.PA.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "9c53b177359d2d9f82b31fe959cb36f9b77ef2d985c353352757988a137d7b11",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.toString(empty)"
    },
    {
      "id": 19,
      "name": "<clinit>",
      "type": "assurance.service.AssuranceServiceImpl",
      "flags": "s",
      "display": "a.s.ASI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "4c3215228304dba5946fe7b2f04a1550ab49f3828aaa359b498fce3b2520b36f",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/void assurance.service.AssuranceServiceImpl.<clinit>(empty)"
    },
    {
      "id": 7317,
      "name": "deleteById",
      "type": "assurance.service.AssuranceServiceImpl",
      "flags": "p",
      "display": "a.s.ASI.deleteById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.UUID", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "f5ea78bbb6c8c85c18a98c0e7b6d9010ae98ad57c526ac0c6c97e1fe61c56fff",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.deleteById(java.util.UUID, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7318,
      "name": "deleteByOrderId",
      "type": "assurance.service.AssuranceServiceImpl",
      "flags": "p",
      "display": "a.s.ASI.deleteByOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.UUID", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "1ab86e0effeffdb48723d016f963dd8e956bcb3f1a971ae721d092aff45ec32d",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.deleteByOrderId(java.util.UUID, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7319,
      "name": "findAssuranceByOrderId",
      "type": "assurance.service.AssuranceServiceImpl",
      "flags": "p",
      "display": "a.s.ASI.findAssuranceByOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.UUID", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "990c2c9a0eaf924ee3957d7412e56f4a967e4db4370243ca90ec6d35936ecfa1",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.findAssuranceByOrderId(java.util.UUID, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7323,
      "name": "getAllAssuranceTypes",
      "type": "assurance.service.AssuranceServiceImpl",
      "flags": "p",
      "display": "a.s.ASI.getAllAssuranceTypes",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "c865e26af9fbdc96a4c3ba657a49b5f9a96aa26cb34965a929aa5f0272c83f76",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.getAllAssuranceTypes(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7324,
      "name": "getAllAssurances",
      "type": "assurance.service.AssuranceServiceImpl",
      "flags": "p",
      "display": "a.s.ASI.getAllAssurances",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "741c841822eacda304845916366b8b54b9043c215169d4daabecd13cac26a498",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.getAllAssurances(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7325,
      "name": "findAssuranceById",
      "type": "assurance.service.AssuranceServiceImpl",
      "flags": "p",
      "display": "a.s.ASI.findAssuranceById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.UUID", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "90583fe1b3ee655cd227d48ada43ccd51ed216a17cc87c75070d7ec4196e6fb7",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceServiceImpl.findAssuranceById(java.util.UUID, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7326,
      "name": "canEqual",
      "type": "assurance.entity.Assurance",
      "flags": "d",
      "display": "a.e.A.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "a68dc653e04e3320436802d4e774643da76551bbd07cf806c855cbfc1096e4e1",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/boolean assurance.entity.Assurance.canEqual(java.lang.Object)"
    },
    {
      "id": 7327,
      "name": "getId",
      "type": "assurance.entity.Assurance",
      "flags": "p",
      "display": "a.e.A.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/java.lang.String assurance.entity.Assurance.getId(empty)"
    },
    {
      "id": 7328,
      "name": "getOrderId",
      "type": "assurance.entity.Assurance",
      "flags": "p",
      "display": "a.e.A.getOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/java.lang.String assurance.entity.Assurance.getOrderId(empty)"
    },
    {
      "id": 7329,
      "name": "getType",
      "type": "assurance.entity.Assurance",
      "flags": "p",
      "display": "a.e.A.getType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "assurance.entity.AssuranceType",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/assurance.entity.AssuranceType assurance.entity.Assurance.getType(empty)"
    },
    {
      "id": 7333,
      "name": "canEqual",
      "type": "assurance.entity.AssuranceTypeBean",
      "flags": "d",
      "display": "a.e.ATB.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "464ff6a84daa34b8bb846d28cbb7defc4d56ec77d19a49dd72dd81d83c156c5a",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/boolean assurance.entity.AssuranceTypeBean.canEqual(java.lang.Object)"
    },
    {
      "id": 7334,
      "name": "getIndex",
      "type": "assurance.entity.AssuranceTypeBean",
      "flags": "p",
      "display": "a.e.ATB.getIndex",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "dfe22d388a813c22414dfd73d2b2758b3ef661760564f7c57d621493bc4b5295",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/int assurance.entity.AssuranceTypeBean.getIndex(empty)"
    },
    {
      "id": 39334,
      "name": "create",
      "type": "assurance.service.AssuranceService",
      "flags": "pa",
      "display": "a.s.AS.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "int",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceService.create(int, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7335,
      "name": "getPrice",
      "type": "assurance.entity.AssuranceTypeBean",
      "flags": "p",
      "display": "a.e.ATB.getPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "double",
      "endpointURI": null,
      "bytecodeHash": "c76899d02dbcf516752264315c6c2f699213a16172bf525692f8e7d62932ac9a",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/double assurance.entity.AssuranceTypeBean.getPrice(empty)"
    },
    {
      "id": 39335,
      "name": "findByOrderId",
      "type": "assurance.repository.AssuranceRepository",
      "flags": "pa",
      "display": "a.r.AR.findByOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "assurance.entity.Assurance",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/assurance.entity.Assurance assurance.repository.AssuranceRepository.findByOrderId(java.lang.String)"
    },
    {
      "id": 7337,
      "name": "getName",
      "type": "assurance.entity.AssuranceTypeBean",
      "flags": "p",
      "display": "a.e.ATB.getName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/java.lang.String assurance.entity.AssuranceTypeBean.getName(empty)"
    },
    {
      "id": 39338,
      "name": "save",
      "type": "assurance.repository.AssuranceRepository",
      "flags": "pby",
      "display": "a.r.AR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "7ab4fd7387fda293dc31fed3d9dcadc34df218a74951819d86ff2e939190a8b8",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/java.lang.Object assurance.repository.AssuranceRepository.save(java.lang.Object)"
    },
    {
      "id": 7340,
      "name": "canEqual",
      "type": "assurance.entity.PlainAssurance",
      "flags": "d",
      "display": "a.e.PA.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/boolean assurance.entity.PlainAssurance.canEqual(java.lang.Object)"
    },
    {
      "id": 7341,
      "name": "getTypeIndex",
      "type": "assurance.entity.PlainAssurance",
      "flags": "p",
      "display": "a.e.PA.getTypeIndex",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "17d2088447ccf826ece32e30a3768849a386734ae9eaa8712655f75cd4c67385",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/int assurance.entity.PlainAssurance.getTypeIndex(empty)"
    },
    {
      "id": 7342,
      "name": "getTypePrice",
      "type": "assurance.entity.PlainAssurance",
      "flags": "p",
      "display": "a.e.PA.getTypePrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "double",
      "endpointURI": null,
      "bytecodeHash": "7cb397cd266479a99b83f7bec4befae5853aec2b7fcb1765d4d236caa5c08604",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/double assurance.entity.PlainAssurance.getTypePrice(empty)"
    },
    {
      "id": 7343,
      "name": "getId",
      "type": "assurance.entity.PlainAssurance",
      "flags": "p",
      "display": "a.e.PA.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.getId(empty)"
    },
    {
      "id": 7344,
      "name": "getOrderId",
      "type": "assurance.entity.PlainAssurance",
      "flags": "p",
      "display": "a.e.PA.getOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.getOrderId(empty)"
    },
    {
      "id": 7345,
      "name": "getTypeName",
      "type": "assurance.entity.PlainAssurance",
      "flags": "p",
      "display": "a.e.PA.getTypeName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/java.lang.String assurance.entity.PlainAssurance.getTypeName(empty)"
    },
    {
      "id": 39345,
      "name": "deleteById",
      "type": "assurance.service.AssuranceService",
      "flags": "pa",
      "display": "a.s.AS.deleteById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.UUID", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceService.deleteById(java.util.UUID, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39346,
      "name": "deleteById",
      "type": "assurance.repository.AssuranceRepository",
      "flags": "pa",
      "display": "a.r.AR.deleteById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/void assurance.repository.AssuranceRepository.deleteById(java.lang.String)"
    },
    {
      "id": 39347,
      "name": "findById",
      "type": "assurance.repository.AssuranceRepository",
      "flags": "pa",
      "display": "a.r.AR.findById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.Optional",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/java.util.Optional assurance.repository.AssuranceRepository.findById(java.lang.String)"
    },
    {
      "id": 39349,
      "name": "deleteByOrderId",
      "type": "assurance.service.AssuranceService",
      "flags": "pa",
      "display": "a.s.AS.deleteByOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.UUID", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceService.deleteByOrderId(java.util.UUID, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39350,
      "name": "removeAssuranceByOrderId",
      "type": "assurance.repository.AssuranceRepository",
      "flags": "pa",
      "display": "a.r.AR.removeAssuranceByOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/void assurance.repository.AssuranceRepository.removeAssuranceByOrderId(java.lang.String)"
    },
    {
      "id": 39351,
      "name": "findAssuranceByOrderId",
      "type": "assurance.service.AssuranceService",
      "flags": "pa",
      "display": "a.s.AS.findAssuranceByOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.UUID", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceService.findAssuranceByOrderId(java.util.UUID, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39354,
      "name": "getAllAssuranceTypes",
      "type": "assurance.service.AssuranceService",
      "flags": "pa",
      "display": "a.s.AS.getAllAssuranceTypes",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceService.getAllAssuranceTypes(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39356,
      "name": "getAllAssurances",
      "type": "assurance.service.AssuranceService",
      "flags": "pa",
      "display": "a.s.AS.getAllAssurances",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceService.getAllAssurances(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39357,
      "name": "findAll",
      "type": "assurance.repository.AssuranceRepository",
      "flags": "pa",
      "display": "a.r.AR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/java.util.ArrayList assurance.repository.AssuranceRepository.findAll(empty)"
    },
    {
      "id": 39358,
      "name": "findAssuranceById",
      "type": "assurance.service.AssuranceService",
      "flags": "pa",
      "display": "a.s.AS.findAssuranceById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.UUID", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/edu.fudan.common.util.Response assurance.service.AssuranceService.findAssuranceById(java.util.UUID, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10702,
      "name": "getTypeByIndex",
      "type": "assurance.entity.AssuranceType",
      "flags": "ps",
      "display": "a.e.AT.getTypeByIndex",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "assurance.entity.AssuranceType",
      "endpointURI": null,
      "bytecodeHash": "d843a78d156c9fa28e9a4268bc692db646f62afef5a6be60d3f772cf2b75bff9",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/assurance.entity.AssuranceType assurance.entity.AssuranceType.getTypeByIndex(int)"
    },
    {
      "id": 10711,
      "name": "<init>",
      "type": "assurance.entity.Assurance",
      "flags": "p",
      "display": "a.e.A.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "assurance.entity.AssuranceType"
      ],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "2ec032ea74370dc8fe468c2aeaf97f24b69f9762e2829129ac6bf385acab534f",
      "microservice": "ts-assurance-service",
      "endpointMethod": false,
      "methodSignature": "ts-assurance-service/void assurance.entity.Assurance.<init>(java.lang.String, java.lang.String, assurance.entity.AssuranceType)"
    },
    {
      "id": 0,
      "name": "<clinit>",
      "type": "auth.controller.AuthController",
      "flags": "s",
      "display": "a.c.AC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "dc021f7606cc72a29d0560a8931de78703248b6e4c0e4fc1fc1a9e03a2ba72dd",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/void auth.controller.AuthController.<clinit>(empty)"
    },
    {
      "id": 1,
      "name": "createDefaultUser",
      "type": "auth.controller.AuthController",
      "flags": "p",
      "display": "a.c.AC.createDefaultUser",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": ["auth.dto.AuthDto"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/auth",
      "bytecodeHash": "588517e62519cf1f7a5a3791369792b5c98fb3b84a90655a9078bdc2f4080f48",
      "microservice": "ts-auth-service",
      "endpointMethod": true,
      "methodSignature": "ts-auth-service/org.springframework.http.HttpEntity auth.controller.AuthController.createDefaultUser(auth.dto.AuthDto)"
    },
    {
      "id": 2,
      "name": "getHello",
      "type": "auth.controller.AuthController",
      "flags": "p",
      "display": "a.c.AC.getHello",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.controller.AuthController.getHello(empty)"
    },
    {
      "id": 3,
      "name": "<clinit>",
      "type": "auth.controller.UserController",
      "flags": "s",
      "display": "a.c.UC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "317d4883e0701a7509234e3dfc970ca1b9fc93606b4cc9dfcc97bf73fb417c60",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/void auth.controller.UserController.<clinit>(empty)"
    },
    {
      "id": 4,
      "name": "deleteUserById",
      "type": "auth.controller.UserController",
      "flags": "p",
      "display": "a.c.UC.deleteUserById",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.ResponseEntity",
      "endpointURI": "/api/v1/users/{userId}",
      "bytecodeHash": "7758c214788ca62a31904e89c787f6735b7902d51068192c4cda3a3ce76b93e9",
      "microservice": "ts-auth-service",
      "endpointMethod": true,
      "methodSignature": "ts-auth-service/org.springframework.http.ResponseEntity auth.controller.UserController.deleteUserById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 5,
      "name": "getAllUser",
      "type": "auth.controller.UserController",
      "flags": "p",
      "display": "a.c.UC.getAllUser",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.ResponseEntity",
      "endpointURI": "/api/v1/users",
      "bytecodeHash": "92273e236a048db2b090f7e5d2a66cd689ae470cce839691cf5af93211c4a1e6",
      "microservice": "ts-auth-service",
      "endpointMethod": true,
      "methodSignature": "ts-auth-service/org.springframework.http.ResponseEntity auth.controller.UserController.getAllUser(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6,
      "name": "getHello",
      "type": "auth.controller.UserController",
      "flags": "p",
      "display": "a.c.UC.getHello",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.Object auth.controller.UserController.getHello(empty)"
    },
    {
      "id": 7,
      "name": "getToken",
      "type": "auth.controller.UserController",
      "flags": "p",
      "display": "a.c.UC.getToken",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "auth.dto.BasicAuthDto",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.ResponseEntity",
      "endpointURI": "/api/v1/users/login",
      "bytecodeHash": "89e308843d1b3a4a94268b2e300a669f005c2fab122f19078b0c9d5187bdc050",
      "microservice": "ts-auth-service",
      "endpointMethod": true,
      "methodSignature": "ts-auth-service/org.springframework.http.ResponseEntity auth.controller.UserController.getToken(auth.dto.BasicAuthDto, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8,
      "name": "equals",
      "type": "auth.dto.TokenDto",
      "flags": "p",
      "display": "a.d.TD.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "9dfcdc8c08828cb3dcc82fb9a8b2ca4407d55a1a169776eb78f4a2c9a4c5f0ef",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/boolean auth.dto.TokenDto.equals(java.lang.Object)"
    },
    {
      "id": 9,
      "name": "hashCode",
      "type": "auth.dto.TokenDto",
      "flags": "p",
      "display": "a.d.TD.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "1af13273a01c3ee0e296a86f46f7158847a994524a208ec361d4981b6b48e869",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/int auth.dto.TokenDto.hashCode(empty)"
    },
    {
      "id": 10,
      "name": "toString",
      "type": "auth.dto.TokenDto",
      "flags": "p",
      "display": "a.d.TD.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4569dcd39fb83037f6a48e6470bbe7bd31639617af6bd2614e80e4669e9fdc63",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.dto.TokenDto.toString(empty)"
    },
    {
      "id": 11,
      "name": "toString",
      "type": "auth.entity.User$UserBuilder",
      "flags": "p",
      "display": "a.e.UUB.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "6635f255d9852164f4d14a3eb94e369e82307b4253e4439c8e541e74eb50ae61",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.entity.User$UserBuilder.toString(empty)"
    },
    {
      "id": 12,
      "name": "equals",
      "type": "auth.entity.User",
      "flags": "p",
      "display": "a.e.U.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "4e4ccdd4a93653f0d985fe496fe7178a5932afb598cadeb4f73a49a184214599",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/boolean auth.entity.User.equals(java.lang.Object)"
    },
    {
      "id": 13,
      "name": "hashCode",
      "type": "auth.entity.User",
      "flags": "p",
      "display": "a.e.U.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "b876d4e29f51428939b7460e421bc0e08a48db54101b1f13e5d8d64aaa609a9d",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/int auth.entity.User.hashCode(empty)"
    },
    {
      "id": 14,
      "name": "toString",
      "type": "auth.entity.User",
      "flags": "p",
      "display": "a.e.U.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "f405b243f323c67e5eafa2bf260252daa2d740e026c1c8eb86daa145951c1764",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.entity.User.toString(empty)"
    },
    {
      "id": 15,
      "name": "<clinit>",
      "type": "auth.security.UserDetailsServiceImpl",
      "flags": "s",
      "display": "a.s.UDSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "5ed93b7bfe7646299f400d634a5e350f135e5e7cf238b5bd9511b50b5bbc77fb",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/void auth.security.UserDetailsServiceImpl.<clinit>(empty)"
    },
    {
      "id": 16,
      "name": "<clinit>",
      "type": "auth.service.impl.TokenServiceImpl",
      "flags": "s",
      "display": "a.s.i.TSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "3713845edf84c1ca59f7e745ea8929bdc3d755df293757c478be002c5eea8bcb",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/void auth.service.impl.TokenServiceImpl.<clinit>(empty)"
    },
    {
      "id": 10768,
      "name": "builder",
      "type": "auth.entity.User",
      "flags": "ps",
      "display": "a.e.U.builder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "auth.entity.User$UserBuilder",
      "endpointURI": null,
      "bytecodeHash": "4c7cf201c9d615db4ac8601f4d88d4fcca4b30e8d191e40e5c17e749ae506eb5",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/auth.entity.User$UserBuilder auth.entity.User.builder(empty)"
    },
    {
      "id": 39440,
      "name": "createDefaultAuthUser",
      "type": "auth.service.UserService",
      "flags": "pa",
      "display": "a.s.US.createDefaultAuthUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["auth.dto.AuthDto"],
      "returnType": "auth.entity.User",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/auth.entity.User auth.service.UserService.createDefaultAuthUser(auth.dto.AuthDto)"
    },
    {
      "id": 17,
      "name": "<clinit>",
      "type": "auth.service.impl.UserServiceImpl",
      "flags": "s",
      "display": "a.s.i.USI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "0b5113c6dd6b78259a300cae1b91dc8ddf6ad474b8d7dfa1465e6021c80ecb15",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/void auth.service.impl.UserServiceImpl.<clinit>(empty)"
    },
    {
      "id": 10769,
      "name": "userId",
      "type": "auth.entity.User$UserBuilder",
      "flags": "p",
      "display": "a.e.UUB.userId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "auth.entity.User$UserBuilder",
      "endpointURI": null,
      "bytecodeHash": "fc1903b9d7f30f6aa74acae5fb44304bb4230244bed541df29250e57d3bea12b",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/auth.entity.User$UserBuilder auth.entity.User$UserBuilder.userId(java.lang.String)"
    },
    {
      "id": 39441,
      "name": "getUserName",
      "type": "auth.dto.AuthDto",
      "flags": "p",
      "display": "a.d.AD.getUserName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.dto.AuthDto.getUserName(empty)"
    },
    {
      "id": 10770,
      "name": "username",
      "type": "auth.entity.User$UserBuilder",
      "flags": "p",
      "display": "a.e.UUB.username",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "auth.entity.User$UserBuilder",
      "endpointURI": null,
      "bytecodeHash": "f1c7ed24bb61adab135c8de71da8b5d3309f40e928a2d2501e9c2391a3d07ce8",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/auth.entity.User$UserBuilder auth.entity.User$UserBuilder.username(java.lang.String)"
    },
    {
      "id": 39442,
      "name": "getUserId",
      "type": "auth.dto.AuthDto",
      "flags": "p",
      "display": "a.d.AD.getUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "804b3ae705e9e66161446b56a0c8ea320f025aad25a62dc23af37c7c98396f39",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.dto.AuthDto.getUserId(empty)"
    },
    {
      "id": 10771,
      "name": "password",
      "type": "auth.entity.User$UserBuilder",
      "flags": "p",
      "display": "a.e.UUB.password",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "auth.entity.User$UserBuilder",
      "endpointURI": null,
      "bytecodeHash": "c3cbd5ce5fd8549dbca474859d787ed0ef6b0bea82538d7f636bb0fc6c2d9a50",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/auth.entity.User$UserBuilder auth.entity.User$UserBuilder.password(java.lang.String)"
    },
    {
      "id": 39443,
      "name": "getPassword",
      "type": "auth.dto.AuthDto",
      "flags": "p",
      "display": "a.d.AD.getPassword",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.dto.AuthDto.getPassword(empty)"
    },
    {
      "id": 10772,
      "name": "roles",
      "type": "auth.entity.User$UserBuilder",
      "flags": "p",
      "display": "a.e.UUB.roles",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.Set"],
      "returnType": "auth.entity.User$UserBuilder",
      "endpointURI": null,
      "bytecodeHash": "c80f5ec9f83882e94238a0047ad9f2701d0393cefc849700c93386eb118851b0",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/auth.entity.User$UserBuilder auth.entity.User$UserBuilder.roles(java.util.Set)"
    },
    {
      "id": 14100,
      "name": "<init>",
      "type": "auth.entity.User",
      "flags": "p",
      "display": "a.e.U.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.util.Set"
      ],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "b6f05bf59a4c40f1849cb48a577ec8cf1a4a852d203a7fb4063110f09b42efe9",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/void auth.entity.User.<init>(java.lang.String, java.lang.String, java.lang.String, java.util.Set)"
    },
    {
      "id": 10773,
      "name": "build",
      "type": "auth.entity.User$UserBuilder",
      "flags": "p",
      "display": "a.e.UUB.build",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "auth.entity.User",
      "endpointURI": null,
      "bytecodeHash": "5e2d1a3a05e00292fa517b01e4db4a666bbadbad69b9c40a8981609116edca19",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/auth.entity.User auth.entity.User$UserBuilder.build(empty)"
    },
    {
      "id": 10774,
      "name": "checkUserCreateInfo",
      "type": "auth.service.impl.UserServiceImpl",
      "flags": "P",
      "display": "a.s.i.USI.checkUserCreateInfo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["auth.entity.User"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "3dd4b92d696c15235fa4adc3f78bc50dc5b98c9afd54b6a655b76a8bef014255",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/void auth.service.impl.UserServiceImpl.checkUserCreateInfo(auth.entity.User)"
    },
    {
      "id": 39450,
      "name": "deleteByUserId",
      "type": "auth.service.UserService",
      "flags": "pa",
      "display": "a.s.US.deleteByUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/edu.fudan.common.util.Response auth.service.UserService.deleteByUserId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39451,
      "name": "deleteByUserId",
      "type": "auth.repository.UserRepository",
      "flags": "pa",
      "display": "a.r.UR.deleteByUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/void auth.repository.UserRepository.deleteByUserId(java.lang.String)"
    },
    {
      "id": 10780,
      "name": "getServiceUrl",
      "type": "auth.service.impl.TokenServiceImpl",
      "flags": "P",
      "display": "a.s.i.TSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4c9cdca9114d46d9b6782076a5fcdd786861a709d13bfd695ca633cdf0ab0f00",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.service.impl.TokenServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 39455,
      "name": "getAllUser",
      "type": "auth.service.UserService",
      "flags": "pa",
      "display": "a.s.US.getAllUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.util.List auth.service.UserService.getAllUser(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39457,
      "name": "getUsername",
      "type": "auth.dto.BasicAuthDto",
      "flags": "p",
      "display": "a.d.BAD.getUsername",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.dto.BasicAuthDto.getUsername(empty)"
    },
    {
      "id": 10786,
      "name": "<init>",
      "type": "auth.service.impl.TokenServiceImpl$$Lambda/0x447c4079ca22eac3939c6ddfb8267890",
      "flags": "P",
      "display": "a.s.i.TSIL.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "b61614a49eb6fbdc074ab289d16b7266d15e8d830461056c92959d0def2dc144",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/void auth.service.impl.TokenServiceImpl$$Lambda/0x447c4079ca22eac3939c6ddfb8267890.<init>(java.lang.String)"
    },
    {
      "id": 39458,
      "name": "getToken",
      "type": "auth.service.TokenService",
      "flags": "pa",
      "display": "a.s.TS.getToken",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "auth.dto.BasicAuthDto",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/edu.fudan.common.util.Response auth.service.TokenService.getToken(auth.dto.BasicAuthDto, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39459,
      "name": "getPassword",
      "type": "auth.dto.BasicAuthDto",
      "flags": "p",
      "display": "a.d.BAD.getPassword",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.dto.BasicAuthDto.getPassword(empty)"
    },
    {
      "id": 39460,
      "name": "getVerificationCode",
      "type": "auth.dto.BasicAuthDto",
      "flags": "p",
      "display": "a.d.BAD.getVerificationCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.dto.BasicAuthDto.getVerificationCode(empty)"
    },
    {
      "id": 10790,
      "name": "<init>",
      "type": "auth.dto.TokenDto",
      "flags": "p",
      "display": "a.d.TD.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String"
      ],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "57e56675ac4ea8e41c0fc5731e909ea83f6303f4c9b6f9bb89fae8658add57ea",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/void auth.dto.TokenDto.<init>(java.lang.String, java.lang.String, java.lang.String)"
    },
    {
      "id": 7335,
      "name": "createDefaultAuthUser",
      "type": "auth.service.impl.UserServiceImpl",
      "flags": "p",
      "display": "a.s.i.USI.createDefaultAuthUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["auth.dto.AuthDto"],
      "returnType": "auth.entity.User",
      "endpointURI": null,
      "bytecodeHash": "564d406aec31dce6c069c7caa6a874fd60049ed2b0e4e285426136924e45bb82",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/auth.entity.User auth.service.impl.UserServiceImpl.createDefaultAuthUser(auth.dto.AuthDto)"
    },
    {
      "id": 14121,
      "name": "get",
      "type": "auth.service.impl.TokenServiceImpl$$Lambda/0x447c4079ca22eac3939c6ddfb8267890",
      "flags": "p",
      "display": "a.s.i.TSIL.get",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "a9f37df2c934b33e4b68afb906d69de87e36ae7c266cdf0d15ee1cecc7d990f3",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.Object auth.service.impl.TokenServiceImpl$$Lambda/0x447c4079ca22eac3939c6ddfb8267890.get(empty)"
    },
    {
      "id": 7338,
      "name": "deleteByUserId",
      "type": "auth.service.impl.UserServiceImpl",
      "flags": "p",
      "display": "a.s.i.USI.deleteByUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "5321337a19dc7afac6390c6e224bb1ef640e60c5aefae007f9e746b25db63ee6",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/edu.fudan.common.util.Response auth.service.impl.UserServiceImpl.deleteByUserId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39466,
      "name": "findByUsername",
      "type": "auth.repository.UserRepository",
      "flags": "pa",
      "display": "a.r.UR.findByUsername",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.Optional",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.util.Optional auth.repository.UserRepository.findByUsername(java.lang.String)"
    },
    {
      "id": 39467,
      "name": "createToken",
      "type": "auth.security.jwt.JWTProvider",
      "flags": "p",
      "display": "a.s.j.JWTP.createToken",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["auth.entity.User"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "9390160094c5e27889b1b3dae1c38e57a03debd190f9b2502542d141440b313f",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.security.jwt.JWTProvider.createToken(auth.entity.User)"
    },
    {
      "id": 7344,
      "name": "getAllUser",
      "type": "auth.service.impl.UserServiceImpl",
      "flags": "p",
      "display": "a.s.i.USI.getAllUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "a69be07a15a65ebc84f4db1fed3bb74514536f79c5f08be18f63bb75524141c5",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.util.List auth.service.impl.UserServiceImpl.getAllUser(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7346,
      "name": "getToken",
      "type": "auth.service.impl.TokenServiceImpl",
      "flags": "p",
      "display": "a.s.i.TSI.getToken",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "auth.dto.BasicAuthDto",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "8be8e864c8117f711c6e3ebac7dbd15fec7b14ef7d9a30a607de237afcb1b444",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/edu.fudan.common.util.Response auth.service.impl.TokenServiceImpl.getToken(auth.dto.BasicAuthDto, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7351,
      "name": "canEqual",
      "type": "auth.dto.TokenDto",
      "flags": "d",
      "display": "a.d.TD.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/boolean auth.dto.TokenDto.canEqual(java.lang.Object)"
    },
    {
      "id": 7352,
      "name": "getUserId",
      "type": "auth.dto.TokenDto",
      "flags": "p",
      "display": "a.d.TD.getUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.dto.TokenDto.getUserId(empty)"
    },
    {
      "id": 7353,
      "name": "getUsername",
      "type": "auth.dto.TokenDto",
      "flags": "p",
      "display": "a.d.TD.getUsername",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.dto.TokenDto.getUsername(empty)"
    },
    {
      "id": 7354,
      "name": "getToken",
      "type": "auth.dto.TokenDto",
      "flags": "p",
      "display": "a.d.TD.getToken",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.dto.TokenDto.getToken(empty)"
    },
    {
      "id": 7358,
      "name": "canEqual",
      "type": "auth.entity.User",
      "flags": "d",
      "display": "a.e.U.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "464ff6a84daa34b8bb846d28cbb7defc4d56ec77d19a49dd72dd81d83c156c5a",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/boolean auth.entity.User.canEqual(java.lang.Object)"
    },
    {
      "id": 7359,
      "name": "getUserId",
      "type": "auth.entity.User",
      "flags": "p",
      "display": "a.e.U.getUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "5fa52bee8d9ecaf9cc0dbb511c90d8e27e9656598177b730ca11725ba9764f76",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.entity.User.getUserId(empty)"
    },
    {
      "id": 7360,
      "name": "getUsername",
      "type": "auth.entity.User",
      "flags": "p",
      "display": "a.e.U.getUsername",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.entity.User.getUsername(empty)"
    },
    {
      "id": 7361,
      "name": "getPassword",
      "type": "auth.entity.User",
      "flags": "p",
      "display": "a.e.U.getPassword",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.entity.User.getPassword(empty)"
    },
    {
      "id": 7362,
      "name": "getRoles",
      "type": "auth.entity.User",
      "flags": "p",
      "display": "a.e.U.getRoles",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.Set",
      "endpointURI": null,
      "bytecodeHash": "804b3ae705e9e66161446b56a0c8ea320f025aad25a62dc23af37c7c98396f39",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.util.Set auth.entity.User.getRoles(empty)"
    },
    {
      "id": 17732,
      "name": "lambda$getToken$0",
      "type": "auth.service.impl.TokenServiceImpl",
      "flags": "Psy",
      "display": "a.s.i.TSI.lambda$getToken$0",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "auth.exception.UserOperationException",
      "endpointURI": null,
      "bytecodeHash": "402ae5d3b6da28884aa589069c45f4b0a6c5b6e48228d21e5b6ed934b2891aae",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/auth.exception.UserOperationException auth.service.impl.TokenServiceImpl.lambda$getToken$0(java.lang.String)"
    },
    {
      "id": 39415,
      "name": "toString",
      "type": "auth.dto.AuthDto",
      "flags": "p",
      "display": "a.d.AD.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "6f3d84e32a2999b2f7db4a8c7562c3a9f8e999c05942badb8fdbd71ddf892e60",
      "microservice": "ts-auth-service",
      "endpointMethod": false,
      "methodSignature": "ts-auth-service/java.lang.String auth.dto.AuthDto.toString(empty)"
    },
    {
      "id": 45828,
      "name": "queryForStationId",
      "type": "fdse.microservice.service.BasicService",
      "flags": "pa",
      "display": "f.m.s.BS.queryForStationId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicService.queryForStationId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8485,
      "name": "queryForStationId",
      "type": "fdse.microservice.service.BasicServiceImpl",
      "flags": "p",
      "display": "f.m.s.BSI.queryForStationId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "8b08498d3a15000907f27dfec7b692f8c6a3b0f131badee263ba98eecdc3bd54",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForStationId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8487,
      "name": "queryForTravel",
      "type": "fdse.microservice.service.BasicServiceImpl",
      "flags": "p",
      "display": "f.m.s.BSI.queryForTravel",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Travel",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "bbb08ad0be061c24126dc7dbccaa48827fcab2546b685c90194922ccb6e55caf",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForTravel(edu.fudan.common.entity.Travel, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8488,
      "name": "queryForTravels",
      "type": "fdse.microservice.service.BasicServiceImpl",
      "flags": "p",
      "display": "f.m.s.BSI.queryForTravels",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "eece3e019fe32c050516bdbc346eec10276d3e9ab494e3d7acec169553665709",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicServiceImpl.queryForTravels(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 12168,
      "name": "getServiceUrl",
      "type": "fdse.microservice.service.BasicServiceImpl",
      "flags": "P",
      "display": "f.m.s.BSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4c9cdca9114d46d9b6782076a5fcdd786861a709d13bfd695ca633cdf0ab0f00",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/java.lang.String fdse.microservice.service.BasicServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 45833,
      "name": "queryForTravel",
      "type": "fdse.microservice.service.BasicService",
      "flags": "pa",
      "display": "f.m.s.BS.queryForTravel",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Travel",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicService.queryForTravel(edu.fudan.common.entity.Travel, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2155,
      "name": "<clinit>",
      "type": "fdse.microservice.controller.BasicController",
      "flags": "s",
      "display": "f.m.c.BC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "3964062702a866c637c63d909461428888c0d1cad03e0c82dbbaa2ad151d6ef5",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/void fdse.microservice.controller.BasicController.<clinit>(empty)"
    },
    {
      "id": 15627,
      "name": "<init>",
      "type": "fdse.microservice.service.BasicServiceImpl$1",
      "flags": "",
      "display": "f.m.s.BSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["fdse.microservice.service.BasicServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/void fdse.microservice.service.BasicServiceImpl$1.<init>(fdse.microservice.service.BasicServiceImpl)"
    },
    {
      "id": 2156,
      "name": "home",
      "type": "fdse.microservice.controller.BasicController",
      "flags": "p",
      "display": "f.m.c.BC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "/api/v1/basicservice/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-basic-service",
      "endpointMethod": true,
      "methodSignature": "ts-basic-service/java.lang.String fdse.microservice.controller.BasicController.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2157,
      "name": "queryForStationId",
      "type": "fdse.microservice.controller.BasicController",
      "flags": "p",
      "display": "f.m.c.BC.queryForStationId",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/basicservice/basic/{stationName}",
      "bytecodeHash": "b79315622fccdf6d1d2448583bb9f6358852a33ca837f200caff23ae3334c685",
      "microservice": "ts-basic-service",
      "endpointMethod": true,
      "methodSignature": "ts-basic-service/org.springframework.http.HttpEntity fdse.microservice.controller.BasicController.queryForStationId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2158,
      "name": "queryForTravel",
      "type": "fdse.microservice.controller.BasicController",
      "flags": "p",
      "display": "f.m.c.BC.queryForTravel",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.Travel",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/basicservice/basic/travel",
      "bytecodeHash": "f16537ac16a9cc82d66849439346c04970f962b83993f67edf7c192ac7345553",
      "microservice": "ts-basic-service",
      "endpointMethod": true,
      "methodSignature": "ts-basic-service/org.springframework.http.HttpEntity fdse.microservice.controller.BasicController.queryForTravel(edu.fudan.common.entity.Travel, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2159,
      "name": "queryForTravels",
      "type": "fdse.microservice.controller.BasicController",
      "flags": "p",
      "display": "f.m.c.BC.queryForTravels",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": null,
      "bytecodeHash": "38238be77cd07b43587f82b9c3ab21f06aacbd34b2d04339a0e73164bd4213a9",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/org.springframework.http.HttpEntity fdse.microservice.controller.BasicController.queryForTravels(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 12175,
      "name": "checkStationExists",
      "type": "fdse.microservice.service.BasicServiceImpl",
      "flags": "p",
      "display": "f.m.s.BSI.checkStationExists",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "7cfdf4b639c31559a9f9763e3e124aeaaafa4887110ef008b17557a6eac7c69f",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/boolean fdse.microservice.service.BasicServiceImpl.checkStationExists(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2160,
      "name": "<clinit>",
      "type": "fdse.microservice.service.BasicServiceImpl",
      "flags": "s",
      "display": "f.m.s.BSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "cdbb2064ac4f51bac21d530552eb8d6ec9e425a93904f04d6ee033ee24995319",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/void fdse.microservice.service.BasicServiceImpl.<clinit>(empty)"
    },
    {
      "id": 12179,
      "name": "queryTrainTypeByName",
      "type": "fdse.microservice.service.BasicServiceImpl",
      "flags": "p",
      "display": "f.m.s.BSI.queryTrainTypeByName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.TrainType",
      "endpointURI": null,
      "bytecodeHash": "f41aa0570cc561a179cebe37496717f5d88bac896963574e1c87aae93424c2ef",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/edu.fudan.common.entity.TrainType fdse.microservice.service.BasicServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 12180,
      "name": "getRouteByRouteId",
      "type": "fdse.microservice.service.BasicServiceImpl",
      "flags": "P",
      "display": "f.m.s.BSI.getRouteByRouteId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.Route",
      "endpointURI": null,
      "bytecodeHash": "2e514bc603cd6534a244b566c4e32feaa61df952db9d41f3f0ca4956283330ed",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/edu.fudan.common.entity.Route fdse.microservice.service.BasicServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 12184,
      "name": "queryPriceConfigByRouteIdAndTrainType",
      "type": "fdse.microservice.service.BasicServiceImpl",
      "flags": "P",
      "display": "f.m.s.BSI.queryPriceConfigByRouteIdAndTrainType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.PriceConfig",
      "endpointURI": null,
      "bytecodeHash": "e5986c573af818b1eea57290ffb0bbbff8a98a367d7ff909b3e2c6adc789e4f5",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/edu.fudan.common.entity.PriceConfig fdse.microservice.service.BasicServiceImpl.queryPriceConfigByRouteIdAndTrainType(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 45848,
      "name": "queryForTravels",
      "type": "fdse.microservice.service.BasicService",
      "flags": "pa",
      "display": "f.m.s.BS.queryForTravels",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/edu.fudan.common.util.Response fdse.microservice.service.BasicService.queryForTravels(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 12185,
      "name": "checkStationsExists",
      "type": "fdse.microservice.service.BasicServiceImpl",
      "flags": "p",
      "display": "f.m.s.BSI.checkStationsExists",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "java.util.Map",
      "endpointURI": null,
      "bytecodeHash": "50db4488331bc729d665d62ac03857b485e67fefd226d2a14c99757159559930",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/java.util.Map fdse.microservice.service.BasicServiceImpl.checkStationsExists(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 12186,
      "name": "queryTrainTypeByNames",
      "type": "fdse.microservice.service.BasicServiceImpl",
      "flags": "p",
      "display": "f.m.s.BSI.queryTrainTypeByNames",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "dcdafd9dacec490c8e53d2be0a111b670988c27ef63fa637567045c7a39ffb49",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/java.util.List fdse.microservice.service.BasicServiceImpl.queryTrainTypeByNames(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 12187,
      "name": "getRoutesByRouteIds",
      "type": "fdse.microservice.service.BasicServiceImpl",
      "flags": "P",
      "display": "f.m.s.BSI.getRoutesByRouteIds",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "d8b6efb15df2eee014fc7e7d9b80fb23bc50f2a27b586039b9810e2b7c4aa7cc",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/java.util.List fdse.microservice.service.BasicServiceImpl.getRoutesByRouteIds(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 12188,
      "name": "queryPriceConfigByRouteIdsAndTrainTypes",
      "type": "fdse.microservice.service.BasicServiceImpl",
      "flags": "P",
      "display": "f.m.s.BSI.queryPriceConfigByRouteIdsAndTrainTypes",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "java.util.Map",
      "endpointURI": null,
      "bytecodeHash": "4362ec515529a62edd0ce30cf6efe5e75e62f63b896a0678512ea62b331dca85",
      "microservice": "ts-basic-service",
      "endpointMethod": false,
      "methodSignature": "ts-basic-service/java.util.Map fdse.microservice.service.BasicServiceImpl.queryPriceConfigByRouteIdsAndTrainTypes(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 0,
      "name": "<clinit>",
      "type": "cancel.controller.CancelController",
      "flags": "s",
      "display": "c.c.CC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "44aba1e01918e965f7dad87da15d46215d1a104fe6fccdd7a0f139d2ef403a7e",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/void cancel.controller.CancelController.<clinit>(empty)"
    },
    {
      "id": 1,
      "name": "calculate",
      "type": "cancel.controller.CancelController",
      "flags": "p",
      "display": "c.c.CC.calculate",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/cancelservice/cancel/refound/{orderId}",
      "bytecodeHash": "97e0b2e9c29341172cf29b09d94a4b3e830944adf57fbf0e739fc548ddf9d199",
      "microservice": "ts-cancel-service",
      "endpointMethod": true,
      "methodSignature": "ts-cancel-service/org.springframework.http.HttpEntity cancel.controller.CancelController.calculate(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2,
      "name": "cancelTicket",
      "type": "cancel.controller.CancelController",
      "flags": "p",
      "display": "c.c.CC.cancelTicket",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/cancelservice/cancel/{orderId}/{loginId}",
      "bytecodeHash": "6236e3eb9ad075cc3ac5a99ed27d8e9de7243ceeaaba0fc856e884c80fda7d0f",
      "microservice": "ts-cancel-service",
      "endpointMethod": true,
      "methodSignature": "ts-cancel-service/org.springframework.http.HttpEntity cancel.controller.CancelController.cancelTicket(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 3,
      "name": "home",
      "type": "cancel.controller.CancelController",
      "flags": "p",
      "display": "c.c.CC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "/api/v1/cancelservice/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-cancel-service",
      "endpointMethod": true,
      "methodSignature": "ts-cancel-service/java.lang.String cancel.controller.CancelController.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4,
      "name": "<clinit>",
      "type": "cancel.service.CancelServiceImpl",
      "flags": "s",
      "display": "c.s.CSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "08ba74aee3efc99e068d8167d00da554e59f2264fb3625510a9765e4e36af5b8",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/void cancel.service.CancelServiceImpl.<clinit>(empty)"
    },
    {
      "id": 39332,
      "name": "calculateRefund",
      "type": "cancel.service.CancelService",
      "flags": "pa",
      "display": "c.s.CS.calculateRefund",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelService.calculateRefund(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13989,
      "name": "<init>",
      "type": "cancel.service.CancelServiceImpl$1",
      "flags": "",
      "display": "c.s.CSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["cancel.service.CancelServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/void cancel.service.CancelServiceImpl$1.<init>(cancel.service.CancelServiceImpl)"
    },
    {
      "id": 10695,
      "name": "cancelFromOtherOrder",
      "type": "cancel.service.CancelServiceImpl",
      "flags": "P",
      "display": "c.s.CSI.cancelFromOtherOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "a871c275f83ade52ac37faeb98ca24836734f3bdacfbe17c5c6913d4e6e68d76",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelFromOtherOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 39374,
      "name": "cancelOrder",
      "type": "cancel.service.CancelService",
      "flags": "pa",
      "display": "c.s.CS.cancelOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelService.cancelOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10671,
      "name": "getOrderByIdFromOrder",
      "type": "cancel.service.CancelServiceImpl",
      "flags": "P",
      "display": "c.s.CSI.getOrderByIdFromOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "565054bf21bcf3bc077430d4c52a54224013a95e0cb8d8e8253813cb7714035c",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getOrderByIdFromOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10672,
      "name": "calculateRefund",
      "type": "cancel.service.CancelServiceImpl",
      "flags": "P",
      "display": "c.s.CSI.calculateRefund",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["edu.fudan.common.entity.Order"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "f180b7c3bb8b25184c5d3f208adc564b34acab7934edfb822d791b4d4e2e5e02",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/java.lang.String cancel.service.CancelServiceImpl.calculateRefund(edu.fudan.common.entity.Order)"
    },
    {
      "id": 13968,
      "name": "getAuthorizationHeadersFrom",
      "type": "cancel.service.CancelServiceImpl",
      "flags": "ps",
      "display": "c.s.CSI.getAuthorizationHeadersFrom",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpHeaders",
      "endpointURI": null,
      "bytecodeHash": "0c71a3e257e08012f7fb5b777436efcac097effb0a97c71c27e51e0c538c077d",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/org.springframework.http.HttpHeaders cancel.service.CancelServiceImpl.getAuthorizationHeadersFrom(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10673,
      "name": "getOrderByIdFromOrderOther",
      "type": "cancel.service.CancelServiceImpl",
      "flags": "P",
      "display": "c.s.CSI.getOrderByIdFromOrderOther",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "60d08f8b008adefcc25eb0db8a7452b9418c37e4dc54b8ce1f6cafd7b07160f5",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getOrderByIdFromOrderOther(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13969,
      "name": "getServiceUrl",
      "type": "cancel.service.CancelServiceImpl",
      "flags": "P",
      "display": "c.s.CSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "1862b83a15032a72c4e8998e223103b0525d3d34c6fd44300541d9ebaf0ab264",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/java.lang.String cancel.service.CancelServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 13970,
      "name": "<init>",
      "type": "cancel.service.CancelServiceImpl$2",
      "flags": "",
      "display": "c.s.CSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["cancel.service.CancelServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/void cancel.service.CancelServiceImpl$2.<init>(cancel.service.CancelServiceImpl)"
    },
    {
      "id": 7290,
      "name": "calculateRefund",
      "type": "cancel.service.CancelServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.calculateRefund",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "115fc70542bbfaf5a3bd34bf1808cb59d5aed6c5c4f5975f16b251440464fdc9",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.calculateRefund(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10684,
      "name": "cancelFromOrder",
      "type": "cancel.service.CancelServiceImpl",
      "flags": "P",
      "display": "c.s.CSI.cancelFromOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "03a0d722cd5ced598fea12748675f1d307851f7a8c0fa86fe886e5c674e6f11b",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelFromOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10685,
      "name": "drawbackMoney",
      "type": "cancel.service.CancelServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.drawbackMoney",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "e1c0ac01976e8f333e69d2044a8ee0b9e0edddca848ea279e55533610f563b0f",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/boolean cancel.service.CancelServiceImpl.drawbackMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10686,
      "name": "getAccount",
      "type": "cancel.service.CancelServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.getAccount",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "2d21e2660198bb3c5f5577735acd8c0a63fe3979ca0da0a6f64893d9bd6c25d7",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.getAccount(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13982,
      "name": "<init>",
      "type": "cancel.service.CancelServiceImpl$3",
      "flags": "",
      "display": "c.s.CSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["cancel.service.CancelServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/void cancel.service.CancelServiceImpl$3.<init>(cancel.service.CancelServiceImpl)"
    },
    {
      "id": 7295,
      "name": "cancelOrder",
      "type": "cancel.service.CancelServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.cancelOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "f91b974c49d639939175d10e1826149836c49bf2fc37e3784ba2e490e4e4f8bc",
      "microservice": "ts-cancel-service",
      "endpointMethod": false,
      "methodSignature": "ts-cancel-service/edu.fudan.common.util.Response cancel.service.CancelServiceImpl.cancelOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1920,
      "name": "queryAll",
      "type": "config.controller.ConfigController",
      "flags": "p",
      "display": "c.c.CC.queryAll",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "api/v1/configservice/configs",
      "bytecodeHash": "77604c5353051bdc1c00951ddb8d9b68696994f73402249dcc0798ff5db0e965",
      "microservice": "ts-config-service",
      "endpointMethod": true,
      "methodSignature": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.queryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8064,
      "name": "create",
      "type": "config.service.ConfigServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "config.entity.Config",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "e407da1ec2207b5fcff7e27d36428e5cd4b82ab8977c3cd2e71813c9c74e3594",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.create(config.entity.Config, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1921,
      "name": "retrieve",
      "type": "config.controller.ConfigController",
      "flags": "p",
      "display": "c.c.CC.retrieve",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "api/v1/configservice/configs/{configName}",
      "bytecodeHash": "de2d38041f66d273f57229e589c90e8c09306c38585bb42528f43accb3546193",
      "microservice": "ts-config-service",
      "endpointMethod": true,
      "methodSignature": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1922,
      "name": "updateConfig",
      "type": "config.controller.ConfigController",
      "flags": "p",
      "display": "c.c.CC.updateConfig",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "config.entity.Config",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "api/v1/configservice/configs",
      "bytecodeHash": "af9eff8763e18bdca337ecab067b3eb302bb6e8714a98060afab3e5a9adc87f6",
      "microservice": "ts-config-service",
      "endpointMethod": true,
      "methodSignature": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.updateConfig(config.entity.Config, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8066,
      "name": "delete",
      "type": "config.service.ConfigServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.delete",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "0d652491e0d5f8c7f322074e67d8a22c28c949cf2e1e380936b8fff96c426470",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.delete(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1923,
      "name": "equals",
      "type": "config.entity.Config",
      "flags": "p",
      "display": "c.e.C.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "7d4b756999280554e1145e2cc01765cb5f16c80d87cbe29a9af0e2435a8a9c3d",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/boolean config.entity.Config.equals(java.lang.Object)"
    },
    {
      "id": 1924,
      "name": "hashCode",
      "type": "config.entity.Config",
      "flags": "p",
      "display": "c.e.C.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "1af13273a01c3ee0e296a86f46f7158847a994524a208ec361d4981b6b48e869",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/int config.entity.Config.hashCode(empty)"
    },
    {
      "id": 1925,
      "name": "toString",
      "type": "config.entity.Config",
      "flags": "p",
      "display": "c.e.C.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4569dcd39fb83037f6a48e6470bbe7bd31639617af6bd2614e80e4669e9fdc63",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/java.lang.String config.entity.Config.toString(empty)"
    },
    {
      "id": 1926,
      "name": "<clinit>",
      "type": "config.service.ConfigServiceImpl",
      "flags": "s",
      "display": "c.s.CSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "c1240d365ede90374231ef7f73155eb60a5310f63cc3e122503aadfd7bb89f47",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/void config.service.ConfigServiceImpl.<clinit>(empty)"
    },
    {
      "id": 8071,
      "name": "queryAll",
      "type": "config.service.ConfigServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.queryAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "13e02606f86ba4828f6d3d31cbf7b5a5f96d86c199882ff5e579c2b54da41371",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.queryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8072,
      "name": "query",
      "type": "config.service.ConfigServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.query",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "a8d6600d62fe7db5334c4190ccc091ee37dd4ed20af82d0ba8d8dba6ab65a5a2",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.query(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8073,
      "name": "update",
      "type": "config.service.ConfigServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.update",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "config.entity.Config",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "3bba352e5fb52b2b6ef36adabcc3dd7bc4e02af3886e48fec326113160b350b3",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigServiceImpl.update(config.entity.Config, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8074,
      "name": "canEqual",
      "type": "config.entity.Config",
      "flags": "d",
      "display": "c.e.C.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "71fde991d4816f8c723b072930331723ecd9a4f661c8f4317d57b676fb65167a",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/boolean config.entity.Config.canEqual(java.lang.Object)"
    },
    {
      "id": 8075,
      "name": "getValue",
      "type": "config.entity.Config",
      "flags": "p",
      "display": "c.e.C.getValue",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/java.lang.String config.entity.Config.getValue(empty)"
    },
    {
      "id": 8076,
      "name": "getDescription",
      "type": "config.entity.Config",
      "flags": "p",
      "display": "c.e.C.getDescription",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/java.lang.String config.entity.Config.getDescription(empty)"
    },
    {
      "id": 40482,
      "name": "create",
      "type": "config.service.ConfigService",
      "flags": "pa",
      "display": "c.s.CS.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "config.entity.Config",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigService.create(config.entity.Config, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40483,
      "name": "findByName",
      "type": "config.repository.ConfigRepository",
      "flags": "pa",
      "display": "c.r.CR.findByName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "config.entity.Config",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/config.entity.Config config.repository.ConfigRepository.findByName(java.lang.String)"
    },
    {
      "id": 40485,
      "name": "save",
      "type": "config.repository.ConfigRepository",
      "flags": "pby",
      "display": "c.r.CR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "e5f6825e17d20eff5076c9ddd447f958590e7a5e2e36f55d32bc8dc2e7e28fad",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/java.lang.Object config.repository.ConfigRepository.save(java.lang.Object)"
    },
    {
      "id": 40486,
      "name": "delete",
      "type": "config.service.ConfigService",
      "flags": "pa",
      "display": "c.s.CS.delete",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigService.delete(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40488,
      "name": "deleteByName",
      "type": "config.repository.ConfigRepository",
      "flags": "pa",
      "display": "c.r.CR.deleteByName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/void config.repository.ConfigRepository.deleteByName(java.lang.String)"
    },
    {
      "id": 40491,
      "name": "queryAll",
      "type": "config.service.ConfigService",
      "flags": "pa",
      "display": "c.s.CS.queryAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigService.queryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40492,
      "name": "findAll",
      "type": "config.repository.ConfigRepository",
      "flags": "pa",
      "display": "c.r.CR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/java.util.List config.repository.ConfigRepository.findAll(empty)"
    },
    {
      "id": 40494,
      "name": "query",
      "type": "config.service.ConfigService",
      "flags": "pa",
      "display": "c.s.CS.query",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigService.query(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40495,
      "name": "update",
      "type": "config.service.ConfigService",
      "flags": "pa",
      "display": "c.s.CS.update",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "config.entity.Config",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/edu.fudan.common.util.Response config.service.ConfigService.update(config.entity.Config, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1916,
      "name": "<clinit>",
      "type": "config.controller.ConfigController",
      "flags": "s",
      "display": "c.c.CC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "c0efbba6d288f9aa9d83335340b101616455ef2f11dcff8549a8001f3f8ae680",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/void config.controller.ConfigController.<clinit>(empty)"
    },
    {
      "id": 8060,
      "name": "getName",
      "type": "config.entity.Config",
      "flags": "p",
      "display": "c.e.C.getName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/java.lang.String config.entity.Config.getName(empty)"
    },
    {
      "id": 1917,
      "name": "createConfig",
      "type": "config.controller.ConfigController",
      "flags": "p",
      "display": "c.c.CC.createConfig",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "config.entity.Config",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "api/v1/configservice/configs",
      "bytecodeHash": "cce45df0abd7526554d87f3ff495d659e006f8c733d4b66d76aa63c6d60cffdf",
      "microservice": "ts-config-service",
      "endpointMethod": true,
      "methodSignature": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.createConfig(config.entity.Config, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1918,
      "name": "deleteConfig",
      "type": "config.controller.ConfigController",
      "flags": "p",
      "display": "c.c.CC.deleteConfig",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "api/v1/configservice/configs/{configName}",
      "bytecodeHash": "df459f8665e6baed397ca99fb57004a4d1f701b7d6bb73ba87f3292572647eb6",
      "microservice": "ts-config-service",
      "endpointMethod": true,
      "methodSignature": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.deleteConfig(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1919,
      "name": "home",
      "type": "config.controller.ConfigController",
      "flags": "p",
      "display": "c.c.CC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "api/v1/configservice/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-config-service",
      "endpointMethod": true,
      "methodSignature": "ts-config-service/java.lang.String config.controller.ConfigController.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11647,
      "name": "<init>",
      "type": "config.entity.Config",
      "flags": "p",
      "display": "c.e.C.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String"
      ],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "a5e5937857fe63ff8b5d7decf56720fdf3913f1532c0af91d5aae8f777a7c86b",
      "microservice": "ts-config-service",
      "endpointMethod": false,
      "methodSignature": "ts-config-service/void config.entity.Config.<init>(java.lang.String, java.lang.String, java.lang.String)"
    },
    {
      "id": 1920,
      "name": "<clinit>",
      "type": "consignprice.controller.ConsignPriceController",
      "flags": "s",
      "display": "c.c.CPC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "66d95e034b6f741c3c396531f65ebe975240e5be41cc14e1b1435e717739a533",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/void consignprice.controller.ConsignPriceController.<clinit>(empty)"
    },
    {
      "id": 8128,
      "name": "getId",
      "type": "consignprice.entity.ConsignPrice",
      "flags": "p",
      "display": "c.e.CP.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/java.lang.String consignprice.entity.ConsignPrice.getId(empty)"
    },
    {
      "id": 1921,
      "name": "getPriceByWeightAndRegion",
      "type": "consignprice.controller.ConsignPriceController",
      "flags": "p",
      "display": "c.c.CPC.getPriceByWeightAndRegion",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/consignpriceservice/consignprice/{weight}/{isWithinRegion}",
      "bytecodeHash": "8be84da5c393129a47efb9b574ebf6a85c44a7e78f7e5d81b57b3959636088e3",
      "microservice": "ts-consign-price-service",
      "endpointMethod": true,
      "methodSignature": "ts-consign-price-service/org.springframework.http.HttpEntity consignprice.controller.ConsignPriceController.getPriceByWeightAndRegion(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1922,
      "name": "getPriceConfig",
      "type": "consignprice.controller.ConsignPriceController",
      "flags": "p",
      "display": "c.c.CPC.getPriceConfig",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/consignpriceservice/consignprice/config",
      "bytecodeHash": "fe4f0b8ee8a0d4ab4d053f106ea81591293769feeed64dc36bfcc2eaaf701430",
      "microservice": "ts-consign-price-service",
      "endpointMethod": true,
      "methodSignature": "ts-consign-price-service/org.springframework.http.HttpEntity consignprice.controller.ConsignPriceController.getPriceConfig(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1923,
      "name": "getPriceInfo",
      "type": "consignprice.controller.ConsignPriceController",
      "flags": "p",
      "display": "c.c.CPC.getPriceInfo",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/consignpriceservice/consignprice/price",
      "bytecodeHash": "8e5471e19c6e9c50fcbc7f67e59d7f0bee7290620768911cca2cb20b0c1ea0b9",
      "microservice": "ts-consign-price-service",
      "endpointMethod": true,
      "methodSignature": "ts-consign-price-service/org.springframework.http.HttpEntity consignprice.controller.ConsignPriceController.getPriceInfo(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1924,
      "name": "home",
      "type": "consignprice.controller.ConsignPriceController",
      "flags": "p",
      "display": "c.c.CPC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "/api/v1/consignpriceservice/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-consign-price-service",
      "endpointMethod": true,
      "methodSignature": "ts-consign-price-service/java.lang.String consignprice.controller.ConsignPriceController.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1925,
      "name": "modifyPriceConfig",
      "type": "consignprice.controller.ConsignPriceController",
      "flags": "p",
      "display": "c.c.CPC.modifyPriceConfig",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "consignprice.entity.ConsignPrice",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/consignpriceservice/consignprice",
      "bytecodeHash": "1a3bf9b2d1bd2452a1c781d2fc733a8dd74684ec1b0ef9ab10fbccad5066c083",
      "microservice": "ts-consign-price-service",
      "endpointMethod": true,
      "methodSignature": "ts-consign-price-service/org.springframework.http.HttpEntity consignprice.controller.ConsignPriceController.modifyPriceConfig(consignprice.entity.ConsignPrice, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1926,
      "name": "equals",
      "type": "consignprice.entity.ConsignPrice",
      "flags": "p",
      "display": "c.e.CP.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "771e00779c2cf7dc0d5433aff56e6d4f89f8dad03442c977809e889c6216cf13",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/boolean consignprice.entity.ConsignPrice.equals(java.lang.Object)"
    },
    {
      "id": 1927,
      "name": "hashCode",
      "type": "consignprice.entity.ConsignPrice",
      "flags": "p",
      "display": "c.e.CP.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "e806d472ccf8a72f28456580ff78e82737a6ca61fe2ed3bd9f6dac22397e07b7",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/int consignprice.entity.ConsignPrice.hashCode(empty)"
    },
    {
      "id": 1928,
      "name": "toString",
      "type": "consignprice.entity.ConsignPrice",
      "flags": "p",
      "display": "c.e.CP.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d8e51b3d0d28e58b6da07e959078452d3f8a96b7a35fb6699ad4b15b66e21cdf",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/java.lang.String consignprice.entity.ConsignPrice.toString(empty)"
    },
    {
      "id": 1929,
      "name": "<clinit>",
      "type": "consignprice.init.InitData",
      "flags": "s",
      "display": "c.i.ID.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "e1193a9dda9b323db12b6dbe4cd1cfb6bf9352a653a73f2f1b94cbbcb4e63eb5",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/void consignprice.init.InitData.<clinit>(empty)"
    },
    {
      "id": 1930,
      "name": "<clinit>",
      "type": "consignprice.service.ConsignPriceServiceImpl",
      "flags": "s",
      "display": "c.s.CPSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "38bd39e635627fb9b2aee9dd6eb5d6eb1bbe20621487289eae24ca351192a407",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/void consignprice.service.ConsignPriceServiceImpl.<clinit>(empty)"
    },
    {
      "id": 40526,
      "name": "getPriceByWeightAndRegion",
      "type": "consignprice.service.ConsignPriceService",
      "flags": "pa",
      "display": "c.s.CPS.getPriceByWeightAndRegion",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "double",
        "boolean",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceService.getPriceByWeightAndRegion(double, boolean, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40527,
      "name": "findByIndex",
      "type": "consignprice.repository.ConsignPriceConfigRepository",
      "flags": "pa",
      "display": "c.r.CPCR.findByIndex",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "consignprice.entity.ConsignPrice",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/consignprice.entity.ConsignPrice consignprice.repository.ConsignPriceConfigRepository.findByIndex(int)"
    },
    {
      "id": 40530,
      "name": "getPriceConfig",
      "type": "consignprice.service.ConsignPriceService",
      "flags": "pa",
      "display": "c.s.CPS.getPriceConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceService.getPriceConfig(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40531,
      "name": "queryPriceInformation",
      "type": "consignprice.service.ConsignPriceService",
      "flags": "pa",
      "display": "c.s.CPS.queryPriceInformation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceService.queryPriceInformation(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40533,
      "name": "createAndModifyPrice",
      "type": "consignprice.service.ConsignPriceService",
      "flags": "pa",
      "display": "c.s.CPS.createAndModifyPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "consignprice.entity.ConsignPrice",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceService.createAndModifyPrice(consignprice.entity.ConsignPrice, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8110,
      "name": "getPriceByWeightAndRegion",
      "type": "consignprice.service.ConsignPriceServiceImpl",
      "flags": "p",
      "display": "c.s.CPSI.getPriceByWeightAndRegion",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "double",
        "boolean",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "fcc6b77a8cf86673bd7496ffcc5516c20426aae7ecd9589e8fd95800d4d0e7f4",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.getPriceByWeightAndRegion(double, boolean, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8115,
      "name": "getPriceConfig",
      "type": "consignprice.service.ConsignPriceServiceImpl",
      "flags": "p",
      "display": "c.s.CPSI.getPriceConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "9c9f78911e8214423cc38054cde8fcb84b1f2b70f2200deffa59de30368dbac3",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.getPriceConfig(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8116,
      "name": "queryPriceInformation",
      "type": "consignprice.service.ConsignPriceServiceImpl",
      "flags": "p",
      "display": "c.s.CPSI.queryPriceInformation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "47c8915893911a2cdf8a3f9979438d3120fd594a9fa9b4584cab58c8aba166a7",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.queryPriceInformation(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8120,
      "name": "createAndModifyPrice",
      "type": "consignprice.service.ConsignPriceServiceImpl",
      "flags": "p",
      "display": "c.s.CPSI.createAndModifyPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "consignprice.entity.ConsignPrice",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "744150b528cddf9cf150f4156ac503559060fadb015d3549fd5ad77eab0ec06c",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/edu.fudan.common.util.Response consignprice.service.ConsignPriceServiceImpl.createAndModifyPrice(consignprice.entity.ConsignPrice, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11704,
      "name": "setId",
      "type": "consignprice.entity.ConsignPrice",
      "flags": "p",
      "display": "c.e.CP.setId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "a868b8c8adc730c9960e5d5464c70e58b0cf744ab46ac42695a0f57ea57d1583",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/void consignprice.entity.ConsignPrice.setId(java.lang.String)"
    },
    {
      "id": 8121,
      "name": "canEqual",
      "type": "consignprice.entity.ConsignPrice",
      "flags": "d",
      "display": "c.e.CP.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/boolean consignprice.entity.ConsignPrice.canEqual(java.lang.Object)"
    },
    {
      "id": 11705,
      "name": "setIndex",
      "type": "consignprice.entity.ConsignPrice",
      "flags": "p",
      "display": "c.e.CP.setIndex",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "94c64ef71e87fe8f787c358628a98bc1e295e68c5fab92a8b5b35ad8382476bc",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/void consignprice.entity.ConsignPrice.setIndex(int)"
    },
    {
      "id": 8122,
      "name": "getIndex",
      "type": "consignprice.entity.ConsignPrice",
      "flags": "p",
      "display": "c.e.CP.getIndex",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "03413414f76d87055da213e92a79728041e6e47e1b1c52781787269c57cba44d",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/int consignprice.entity.ConsignPrice.getIndex(empty)"
    },
    {
      "id": 11706,
      "name": "setInitialPrice",
      "type": "consignprice.entity.ConsignPrice",
      "flags": "p",
      "display": "c.e.CP.setInitialPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["double"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "df7379ac9bf7118da36af1e53a3c01bc7e9dd3b20caf29cd06e1063af91b7ebc",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/void consignprice.entity.ConsignPrice.setInitialPrice(double)"
    },
    {
      "id": 8123,
      "name": "getInitialWeight",
      "type": "consignprice.entity.ConsignPrice",
      "flags": "p",
      "display": "c.e.CP.getInitialWeight",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "double",
      "endpointURI": null,
      "bytecodeHash": "6e41223bc0dac49176e0b6b316d4922afc6d2168c97a9bd8c2f9942eb2161984",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getInitialWeight(empty)"
    },
    {
      "id": 11707,
      "name": "setInitialWeight",
      "type": "consignprice.entity.ConsignPrice",
      "flags": "p",
      "display": "c.e.CP.setInitialWeight",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["double"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "9c5e7ba41ef0c0edd137af466cb07b5ff8f5a6782e8bae6bcaadc5d98b414bc0",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/void consignprice.entity.ConsignPrice.setInitialWeight(double)"
    },
    {
      "id": 11708,
      "name": "setWithinPrice",
      "type": "consignprice.entity.ConsignPrice",
      "flags": "p",
      "display": "c.e.CP.setWithinPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["double"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "4bac203b49eb4e8640fcc25856383492885feb0035705d6cf4a4f3c5e5a28ad4",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/void consignprice.entity.ConsignPrice.setWithinPrice(double)"
    },
    {
      "id": 8125,
      "name": "getInitialPrice",
      "type": "consignprice.entity.ConsignPrice",
      "flags": "p",
      "display": "c.e.CP.getInitialPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "double",
      "endpointURI": null,
      "bytecodeHash": "d597389f2e9fe5026d1e931d1bab67f79df11355c373758e804456fcf8d76bfa",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getInitialPrice(empty)"
    },
    {
      "id": 11709,
      "name": "setBeyondPrice",
      "type": "consignprice.entity.ConsignPrice",
      "flags": "p",
      "display": "c.e.CP.setBeyondPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["double"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "55e4edf531cc8c88a71ec60a1be3c68a3be455d5c49e5e59c6996e1c601086b2",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/void consignprice.entity.ConsignPrice.setBeyondPrice(double)"
    },
    {
      "id": 8126,
      "name": "getWithinPrice",
      "type": "consignprice.entity.ConsignPrice",
      "flags": "p",
      "display": "c.e.CP.getWithinPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "double",
      "endpointURI": null,
      "bytecodeHash": "7cb397cd266479a99b83f7bec4befae5853aec2b7fcb1765d4d236caa5c08604",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getWithinPrice(empty)"
    },
    {
      "id": 1919,
      "name": "<clinit>",
      "type": "consignprice.ConsignPriceApplication",
      "flags": "s",
      "display": "c.CPA.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "ba0e80e06ae45c8b491a8ebc715d7c06211b26e512907f9b2e7247b6d4411091",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/void consignprice.ConsignPriceApplication.<clinit>(empty)"
    },
    {
      "id": 8127,
      "name": "getBeyondPrice",
      "type": "consignprice.entity.ConsignPrice",
      "flags": "p",
      "display": "c.e.CP.getBeyondPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "double",
      "endpointURI": null,
      "bytecodeHash": "3c2c79f272c179eaf982cb90eb6f0619a2fb56fbe8762f0487b3ada2124e8ec9",
      "microservice": "ts-consign-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-price-service/double consignprice.entity.ConsignPrice.getBeyondPrice(empty)"
    },
    {
      "id": 1921,
      "name": "<clinit>",
      "type": "consign.controller.ConsignController",
      "flags": "s",
      "display": "c.c.CC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "44aba1e01918e965f7dad87da15d46215d1a104fe6fccdd7a0f139d2ef403a7e",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/void consign.controller.ConsignController.<clinit>(empty)"
    },
    {
      "id": 1922,
      "name": "findByAccountId",
      "type": "consign.controller.ConsignController",
      "flags": "p",
      "display": "c.c.CC.findByAccountId",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/consignservice/consigns/account/{id}",
      "bytecodeHash": "63de7eec9915070c45830db95086fe3250c9e89859eadbd3eaae45181f5b480f",
      "microservice": "ts-consign-service",
      "endpointMethod": true,
      "methodSignature": "ts-consign-service/org.springframework.http.HttpEntity consign.controller.ConsignController.findByAccountId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1923,
      "name": "findByConsignee",
      "type": "consign.controller.ConsignController",
      "flags": "p",
      "display": "c.c.CC.findByConsignee",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/consignservice/consigns/{consignee}",
      "bytecodeHash": "e75533e99613996b42d06dc753dacb52062f9c998ea35eb93f821f01d93bff6a",
      "microservice": "ts-consign-service",
      "endpointMethod": true,
      "methodSignature": "ts-consign-service/org.springframework.http.HttpEntity consign.controller.ConsignController.findByConsignee(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1924,
      "name": "findByOrderId",
      "type": "consign.controller.ConsignController",
      "flags": "p",
      "display": "c.c.CC.findByOrderId",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/consignservice/consigns/order/{id}",
      "bytecodeHash": "ff17027d4a24480d506e29c9d65fbfec3832d26cc8fc9b6146ee57c5b010f60f",
      "microservice": "ts-consign-service",
      "endpointMethod": true,
      "methodSignature": "ts-consign-service/org.springframework.http.HttpEntity consign.controller.ConsignController.findByOrderId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1925,
      "name": "home",
      "type": "consign.controller.ConsignController",
      "flags": "p",
      "display": "c.c.CC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "/api/v1/consignservice/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-consign-service",
      "endpointMethod": true,
      "methodSignature": "ts-consign-service/java.lang.String consign.controller.ConsignController.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40581,
      "name": "queryByAccountId",
      "type": "consign.service.ConsignService",
      "flags": "pa",
      "display": "c.s.CS.queryByAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.UUID", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignService.queryByAccountId(java.util.UUID, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1926,
      "name": "insertConsign",
      "type": "consign.controller.ConsignController",
      "flags": "p",
      "display": "c.c.CC.insertConsign",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "consign.entity.Consign",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/consignservice/consigns",
      "bytecodeHash": "f16537ac16a9cc82d66849439346c04970f962b83993f67edf7c192ac7345553",
      "microservice": "ts-consign-service",
      "endpointMethod": true,
      "methodSignature": "ts-consign-service/org.springframework.http.HttpEntity consign.controller.ConsignController.insertConsign(consign.entity.Consign, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40582,
      "name": "findByAccountId",
      "type": "consign.repository.ConsignRepository",
      "flags": "pa",
      "display": "c.r.CR.findByAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.util.ArrayList consign.repository.ConsignRepository.findByAccountId(java.lang.String)"
    },
    {
      "id": 1927,
      "name": "updateConsign",
      "type": "consign.controller.ConsignController",
      "flags": "p",
      "display": "c.c.CC.updateConsign",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "consign.entity.Consign",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/consignservice/consigns",
      "bytecodeHash": "2696cce47b30c1b5261efcc189b0f0dbc907aa2e8e8f18d9c2762584672c0e14",
      "microservice": "ts-consign-service",
      "endpointMethod": true,
      "methodSignature": "ts-consign-service/org.springframework.http.HttpEntity consign.controller.ConsignController.updateConsign(consign.entity.Consign, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1928,
      "name": "equals",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "b3b41554a973d582d41c5cf2e58dce572dbbb1efa12353644860c2eea9642b3f",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/boolean consign.entity.ConsignRecord.equals(java.lang.Object)"
    },
    {
      "id": 1929,
      "name": "hashCode",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "ebd18a1477d0f5b0c973643a7cb6dac53331897ce18f6d8352d39e1bce5f2838",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/int consign.entity.ConsignRecord.hashCode(empty)"
    },
    {
      "id": 40585,
      "name": "queryByConsignee",
      "type": "consign.service.ConsignService",
      "flags": "pa",
      "display": "c.s.CS.queryByConsignee",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignService.queryByConsignee(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1930,
      "name": "toString",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d8f46fa6ebcde54c626984ef4b49af05b9c6471fd90600cd8fafc346e2cf3ff0",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.toString(empty)"
    },
    {
      "id": 40586,
      "name": "findByConsignee",
      "type": "consign.repository.ConsignRepository",
      "flags": "pa",
      "display": "c.r.CR.findByConsignee",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.util.ArrayList consign.repository.ConsignRepository.findByConsignee(java.lang.String)"
    },
    {
      "id": 1931,
      "name": "<clinit>",
      "type": "consign.service.ConsignServiceImpl",
      "flags": "s",
      "display": "c.s.CSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "93244e5d89dee8c3e88fed9a364973f6049ae5c1386f9d04edb0a785e6dfd610",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/void consign.service.ConsignServiceImpl.<clinit>(empty)"
    },
    {
      "id": 40587,
      "name": "queryByOrderId",
      "type": "consign.service.ConsignService",
      "flags": "pa",
      "display": "c.s.CS.queryByOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.UUID", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignService.queryByOrderId(java.util.UUID, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40588,
      "name": "findByOrderId",
      "type": "consign.repository.ConsignRepository",
      "flags": "pa",
      "display": "c.r.CR.findByOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "consign.entity.ConsignRecord",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/consign.entity.ConsignRecord consign.repository.ConsignRepository.findByOrderId(java.lang.String)"
    },
    {
      "id": 40589,
      "name": "getId",
      "type": "consign.entity.Consign",
      "flags": "p",
      "display": "c.e.C.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "804b3ae705e9e66161446b56a0c8ea320f025aad25a62dc23af37c7c98396f39",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.Consign.getId(empty)"
    },
    {
      "id": 40590,
      "name": "insertConsignRecord",
      "type": "consign.service.ConsignService",
      "flags": "pa",
      "display": "c.s.CS.insertConsignRecord",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "consign.entity.Consign",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignService.insertConsignRecord(consign.entity.Consign, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40591,
      "name": "getOrderId",
      "type": "consign.entity.Consign",
      "flags": "p",
      "display": "c.e.C.getOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.Consign.getOrderId(empty)"
    },
    {
      "id": 40592,
      "name": "getAccountId",
      "type": "consign.entity.Consign",
      "flags": "p",
      "display": "c.e.C.getAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.Consign.getAccountId(empty)"
    },
    {
      "id": 40593,
      "name": "getHandleDate",
      "type": "consign.entity.Consign",
      "flags": "p",
      "display": "c.e.C.getHandleDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.Consign.getHandleDate(empty)"
    },
    {
      "id": 40594,
      "name": "getTargetDate",
      "type": "consign.entity.Consign",
      "flags": "p",
      "display": "c.e.C.getTargetDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.Consign.getTargetDate(empty)"
    },
    {
      "id": 40596,
      "name": "getFrom",
      "type": "consign.entity.Consign",
      "flags": "p",
      "display": "c.e.C.getFrom",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.Consign.getFrom(empty)"
    },
    {
      "id": 40597,
      "name": "getTo",
      "type": "consign.entity.Consign",
      "flags": "p",
      "display": "c.e.C.getTo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.Consign.getTo(empty)"
    },
    {
      "id": 40598,
      "name": "getConsignee",
      "type": "consign.entity.Consign",
      "flags": "p",
      "display": "c.e.C.getConsignee",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "668501b084f2dc96265ceb4e39579391868136fffaeab12c3f93e3c91daee2e4",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.Consign.getConsignee(empty)"
    },
    {
      "id": 40599,
      "name": "getPhone",
      "type": "consign.entity.Consign",
      "flags": "p",
      "display": "c.e.C.getPhone",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "5fa52bee8d9ecaf9cc0dbb511c90d8e27e9656598177b730ca11725ba9764f76",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.Consign.getPhone(empty)"
    },
    {
      "id": 40600,
      "name": "getWeight",
      "type": "consign.entity.Consign",
      "flags": "p",
      "display": "c.e.C.getWeight",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "double",
      "endpointURI": null,
      "bytecodeHash": "fb5002192b14f1a1c88e4d78b3f1cc36d46ef02d9135416c2548b9116c5c6fd7",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/double consign.entity.Consign.getWeight(empty)"
    },
    {
      "id": 40601,
      "name": "isWithin",
      "type": "consign.entity.Consign",
      "flags": "p",
      "display": "c.e.C.isWithin",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "4fce3ac993307fea4f13f3b8101b4f9d26d1d5dcb8688de8f4b6d40580c02414",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/boolean consign.entity.Consign.isWithin(empty)"
    },
    {
      "id": 40603,
      "name": "save",
      "type": "consign.repository.ConsignRepository",
      "flags": "pby",
      "display": "c.r.CR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "35155465ca24fbbea4ed95c31ced08fc03523ba74e7b2fe3dcd3d26860e7cd0f",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.Object consign.repository.ConsignRepository.save(java.lang.Object)"
    },
    {
      "id": 40604,
      "name": "updateConsignRecord",
      "type": "consign.service.ConsignService",
      "flags": "pa",
      "display": "c.s.CS.updateConsignRecord",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "consign.entity.Consign",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignService.updateConsignRecord(consign.entity.Consign, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40606,
      "name": "findById",
      "type": "consign.repository.ConsignRepository",
      "flags": "pa",
      "display": "c.r.CR.findById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.Optional",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.util.Optional consign.repository.ConsignRepository.findById(java.lang.String)"
    },
    {
      "id": 40607,
      "name": "setAccountId",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.setAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "52860e6fc7f9e5b84669354a8a23b2606c35569844d5e6f8dba8cb07e8b22955",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/void consign.entity.ConsignRecord.setAccountId(java.lang.String)"
    },
    {
      "id": 40608,
      "name": "setHandleDate",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.setHandleDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "69e52eac317680e748fa698b13b4527c910f3cd3f7436b5eb79b7a10eba51484",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/void consign.entity.ConsignRecord.setHandleDate(java.lang.String)"
    },
    {
      "id": 40609,
      "name": "setTargetDate",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.setTargetDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1c059b5fe325fde7d43b063306b8ea508a338bafb0f3efc8a9c0b94e3f6e422c",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/void consign.entity.ConsignRecord.setTargetDate(java.lang.String)"
    },
    {
      "id": 40610,
      "name": "setFrom",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.setFrom",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "935836f6468fbbdce3aa550163b41db4acc66eaba962e885841470780dddd4d2",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/void consign.entity.ConsignRecord.setFrom(java.lang.String)"
    },
    {
      "id": 40611,
      "name": "setTo",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.setTo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "48fb720aa2a9b68dfbb952c6e9e11d36348ceb48bf0fec91e3294ba5ac037a6d",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/void consign.entity.ConsignRecord.setTo(java.lang.String)"
    },
    {
      "id": 40612,
      "name": "setConsignee",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.setConsignee",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1d639c8f9d43d88d1092bc7e304fe5af5f3947dc8cd8d30fe244a71c9d82d654",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/void consign.entity.ConsignRecord.setConsignee(java.lang.String)"
    },
    {
      "id": 40613,
      "name": "setPhone",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.setPhone",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "3187f710dcb01652de862560cc7782b805f200c9af0d7b1df750b2924081e43c",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/void consign.entity.ConsignRecord.setPhone(java.lang.String)"
    },
    {
      "id": 40614,
      "name": "setPrice",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.setPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["double"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "38a378ae75ac8600fdfc6bbbab3cde34e2177b60160c0f4291746225b263ad59",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/void consign.entity.ConsignRecord.setPrice(double)"
    },
    {
      "id": 40615,
      "name": "setWeight",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.setWeight",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["double"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "0d9bb2fba07153df2644afe5c4b29fdf50ef6015e99de52bb8d41836f50eabfc",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/void consign.entity.ConsignRecord.setWeight(double)"
    },
    {
      "id": 8142,
      "name": "queryByAccountId",
      "type": "consign.service.ConsignServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.queryByAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.UUID", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "fabb0ef4cb510ee91cfbbab3d9787bf3c86e4a2b182317478766eef3ae1c69a9",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.queryByAccountId(java.util.UUID, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8144,
      "name": "queryByConsignee",
      "type": "consign.service.ConsignServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.queryByConsignee",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "d3495d1f0ac550bdf575c2d07d633df2efe41d64a7f5676c98dfb4a5763d99fb",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.queryByConsignee(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8145,
      "name": "queryByOrderId",
      "type": "consign.service.ConsignServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.queryByOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.UUID", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "8b3b3c7a1bf8a33345fa6d481d1b3a1af1ef5585e553428d0b89e6db6907593d",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.queryByOrderId(java.util.UUID, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8146,
      "name": "insertConsignRecord",
      "type": "consign.service.ConsignServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.insertConsignRecord",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "consign.entity.Consign",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "d33f8d55c9a4e25936f28bbebb495f8e06ee96cb26cbad3fa23db12855837e1e",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.insertConsignRecord(consign.entity.Consign, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8147,
      "name": "updateConsignRecord",
      "type": "consign.service.ConsignServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.updateConsignRecord",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "consign.entity.Consign",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "35ca3b017ae30d5287acf19d8361fe8e6c858ffe698d1997faf0c06320e12b10",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/edu.fudan.common.util.Response consign.service.ConsignServiceImpl.updateConsignRecord(consign.entity.Consign, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8148,
      "name": "canEqual",
      "type": "consign.entity.ConsignRecord",
      "flags": "d",
      "display": "c.e.CR.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "464ff6a84daa34b8bb846d28cbb7defc4d56ec77d19a49dd72dd81d83c156c5a",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/boolean consign.entity.ConsignRecord.canEqual(java.lang.Object)"
    },
    {
      "id": 8149,
      "name": "getWeight",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.getWeight",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "double",
      "endpointURI": null,
      "bytecodeHash": "fb5002192b14f1a1c88e4d78b3f1cc36d46ef02d9135416c2548b9116c5c6fd7",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/double consign.entity.ConsignRecord.getWeight(empty)"
    },
    {
      "id": 8151,
      "name": "getPrice",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.getPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "double",
      "endpointURI": null,
      "bytecodeHash": "1929dae836b224ae68348dcc6ff2db20583fd29b445148bedb5f71b798d4b197",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/double consign.entity.ConsignRecord.getPrice(empty)"
    },
    {
      "id": 8152,
      "name": "getId",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "804b3ae705e9e66161446b56a0c8ea320f025aad25a62dc23af37c7c98396f39",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getId(empty)"
    },
    {
      "id": 8153,
      "name": "getOrderId",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.getOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getOrderId(empty)"
    },
    {
      "id": 8154,
      "name": "getAccountId",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.getAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getAccountId(empty)"
    },
    {
      "id": 8155,
      "name": "getHandleDate",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.getHandleDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getHandleDate(empty)"
    },
    {
      "id": 8156,
      "name": "getTargetDate",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.getTargetDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getTargetDate(empty)"
    },
    {
      "id": 8157,
      "name": "getFrom",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.getFrom",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getFrom(empty)"
    },
    {
      "id": 11741,
      "name": "getServiceUrl",
      "type": "consign.service.ConsignServiceImpl",
      "flags": "P",
      "display": "c.s.CSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4c9cdca9114d46d9b6782076a5fcdd786861a709d13bfd695ca633cdf0ab0f00",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.service.ConsignServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 8158,
      "name": "getTo",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.getTo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getTo(empty)"
    },
    {
      "id": 11742,
      "name": "<init>",
      "type": "consign.service.ConsignServiceImpl$1",
      "flags": "",
      "display": "c.s.CSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["consign.service.ConsignServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/void consign.service.ConsignServiceImpl$1.<init>(consign.service.ConsignServiceImpl)"
    },
    {
      "id": 8159,
      "name": "getConsignee",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.getConsignee",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "668501b084f2dc96265ceb4e39579391868136fffaeab12c3f93e3c91daee2e4",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getConsignee(empty)"
    },
    {
      "id": 8160,
      "name": "getPhone",
      "type": "consign.entity.ConsignRecord",
      "flags": "p",
      "display": "c.e.CR.getPhone",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "5fa52bee8d9ecaf9cc0dbb511c90d8e27e9656598177b730ca11725ba9764f76",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/java.lang.String consign.entity.ConsignRecord.getPhone(empty)"
    },
    {
      "id": 11746,
      "name": "<init>",
      "type": "consign.service.ConsignServiceImpl$2",
      "flags": "",
      "display": "c.s.CSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["consign.service.ConsignServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-consign-service",
      "endpointMethod": false,
      "methodSignature": "ts-consign-service/void consign.service.ConsignServiceImpl$2.<init>(consign.service.ConsignServiceImpl)"
    },
    {
      "id": 40576,
      "name": "delete",
      "type": "contacts.service.ContactsService",
      "flags": "pa",
      "display": "c.s.CS.delete",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsService.delete(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40577,
      "name": "deleteById",
      "type": "contacts.repository.ContactsRepository",
      "flags": "pa",
      "display": "c.r.CR.deleteById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/void contacts.repository.ContactsRepository.deleteById(java.lang.String)"
    },
    {
      "id": 1922,
      "name": "<clinit>",
      "type": "contacts.controller.ContactsController",
      "flags": "s",
      "display": "c.c.CC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1cae2cea35eda2fb8c2b998e35e99e1bedeae3129cff5876555a32fbbcdd7726",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/void contacts.controller.ContactsController.<clinit>(empty)"
    },
    {
      "id": 40578,
      "name": "findById",
      "type": "contacts.repository.ContactsRepository",
      "flags": "pa",
      "display": "c.r.CR.findById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.Optional",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/java.util.Optional contacts.repository.ContactsRepository.findById(java.lang.String)"
    },
    {
      "id": 1923,
      "name": "createNewContacts",
      "type": "contacts.controller.ContactsController",
      "flags": "p",
      "display": "c.c.CC.createNewContacts",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "contacts.entity.Contacts",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.ResponseEntity",
      "endpointURI": "api/v1/contactservice/contacts",
      "bytecodeHash": "a69fa477ccf2e4963d7e9f8aaa02db46e7c4030f73751ee506ffd36889573121",
      "microservice": "ts-contacts-service",
      "endpointMethod": true,
      "methodSignature": "ts-contacts-service/org.springframework.http.ResponseEntity contacts.controller.ContactsController.createNewContacts(contacts.entity.Contacts, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1924,
      "name": "createNewContactsAdmin",
      "type": "contacts.controller.ContactsController",
      "flags": "p",
      "display": "c.c.CC.createNewContactsAdmin",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "contacts.entity.Contacts",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "api/v1/contactservice/contacts/admin",
      "bytecodeHash": "038536a63a7a5ce5cef8701ea57ebffa9c4877ac3a3c036e9cd7658c6b15ba92",
      "microservice": "ts-contacts-service",
      "endpointMethod": true,
      "methodSignature": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.createNewContactsAdmin(contacts.entity.Contacts, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1925,
      "name": "deleteContacts",
      "type": "contacts.controller.ContactsController",
      "flags": "p",
      "display": "c.c.CC.deleteContacts",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "api/v1/contactservice/contacts/{contactsId}",
      "bytecodeHash": "d10940dbe40932f771d76521c9c2ef0241bb6d556a85992b57f8bdf9c34ebe3d",
      "microservice": "ts-contacts-service",
      "endpointMethod": true,
      "methodSignature": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.deleteContacts(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1926,
      "name": "findContactsByAccountId",
      "type": "contacts.controller.ContactsController",
      "flags": "p",
      "display": "c.c.CC.findContactsByAccountId",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "api/v1/contactservice/contacts/account/{accountId}",
      "bytecodeHash": "ab9d4ba0d538d2904e545b601a957c54c4a0448163fc92c87745068658981c9d",
      "microservice": "ts-contacts-service",
      "endpointMethod": true,
      "methodSignature": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.findContactsByAccountId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40582,
      "name": "findContactsByAccountId",
      "type": "contacts.service.ContactsService",
      "flags": "pa",
      "display": "c.s.CS.findContactsByAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsService.findContactsByAccountId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1927,
      "name": "getAllContacts",
      "type": "contacts.controller.ContactsController",
      "flags": "p",
      "display": "c.c.CC.getAllContacts",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "api/v1/contactservice/contacts",
      "bytecodeHash": "77604c5353051bdc1c00951ddb8d9b68696994f73402249dcc0798ff5db0e965",
      "microservice": "ts-contacts-service",
      "endpointMethod": true,
      "methodSignature": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.getAllContacts(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40583,
      "name": "findByAccountId",
      "type": "contacts.repository.ContactsRepository",
      "flags": "pa",
      "display": "c.r.CR.findByAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/java.util.ArrayList contacts.repository.ContactsRepository.findByAccountId(java.lang.String)"
    },
    {
      "id": 1928,
      "name": "getContactsByContactsId",
      "type": "contacts.controller.ContactsController",
      "flags": "p",
      "display": "c.c.CC.getContactsByContactsId",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "api/v1/contactservice/contacts/{id}",
      "bytecodeHash": "33bee2f99c9035825663c220bac5cc6328a87ae63cbdabc399297281d8c897fb",
      "microservice": "ts-contacts-service",
      "endpointMethod": true,
      "methodSignature": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.getContactsByContactsId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40584,
      "name": "getAllContacts",
      "type": "contacts.service.ContactsService",
      "flags": "pa",
      "display": "c.s.CS.getAllContacts",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsService.getAllContacts(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1929,
      "name": "home",
      "type": "contacts.controller.ContactsController",
      "flags": "p",
      "display": "c.c.CC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/java.lang.String contacts.controller.ContactsController.home(empty)"
    },
    {
      "id": 40585,
      "name": "findAll",
      "type": "contacts.repository.ContactsRepository",
      "flags": "pa",
      "display": "c.r.CR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/java.util.ArrayList contacts.repository.ContactsRepository.findAll(empty)"
    },
    {
      "id": 1930,
      "name": "modifyContacts",
      "type": "contacts.controller.ContactsController",
      "flags": "p",
      "display": "c.c.CC.modifyContacts",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "contacts.entity.Contacts",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "api/v1/contactservice/contacts",
      "bytecodeHash": "6a7619589a402c5869767407f8351c8815bfea3be2ccb7c4c657c923fb25f692",
      "microservice": "ts-contacts-service",
      "endpointMethod": true,
      "methodSignature": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.modifyContacts(contacts.entity.Contacts, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40586,
      "name": "findContactsById",
      "type": "contacts.service.ContactsService",
      "flags": "pa",
      "display": "c.s.CS.findContactsById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsService.findContactsById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1931,
      "name": "values",
      "type": "contacts.entity.DocumentType",
      "flags": "ps",
      "display": "c.e.DT.values",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "contacts.entity.DocumentType[]",
      "endpointURI": null,
      "bytecodeHash": "2d9fe4dae7793bb5addf4680279c3d124dee96726ae42caf7e673dc353d907cb",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/contacts.entity.DocumentType[] contacts.entity.DocumentType.values(empty)"
    },
    {
      "id": 40587,
      "name": "modify",
      "type": "contacts.service.ContactsService",
      "flags": "pa",
      "display": "c.s.CS.modify",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "contacts.entity.Contacts",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsService.modify(contacts.entity.Contacts, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1932,
      "name": "<clinit>",
      "type": "contacts.service.ContactsServiceImpl",
      "flags": "s",
      "display": "c.s.CSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "d4249991b316746f1dbcf6f21dc40bc7c6edaa4b62673e150c6249d3d32a6326",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/void contacts.service.ContactsServiceImpl.<clinit>(empty)"
    },
    {
      "id": 40588,
      "name": "getName",
      "type": "contacts.entity.Contacts",
      "flags": "p",
      "display": "c.e.C.getName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/java.lang.String contacts.entity.Contacts.getName(empty)"
    },
    {
      "id": 40589,
      "name": "setName",
      "type": "contacts.entity.Contacts",
      "flags": "p",
      "display": "c.e.C.setName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "52860e6fc7f9e5b84669354a8a23b2606c35569844d5e6f8dba8cb07e8b22955",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/void contacts.entity.Contacts.setName(java.lang.String)"
    },
    {
      "id": 40590,
      "name": "setDocumentType",
      "type": "contacts.entity.Contacts",
      "flags": "p",
      "display": "c.e.C.setDocumentType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "5c6246d262e6798a3a2066d91fafc53bded277ef9cf167ecd50af07f6482dda5",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/void contacts.entity.Contacts.setDocumentType(int)"
    },
    {
      "id": 40591,
      "name": "setDocumentNumber",
      "type": "contacts.entity.Contacts",
      "flags": "p",
      "display": "c.e.C.setDocumentNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1d639c8f9d43d88d1092bc7e304fe5af5f3947dc8cd8d30fe244a71c9d82d654",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/void contacts.entity.Contacts.setDocumentNumber(java.lang.String)"
    },
    {
      "id": 40592,
      "name": "getPhoneNumber",
      "type": "contacts.entity.Contacts",
      "flags": "p",
      "display": "c.e.C.getPhoneNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "b2e08cdc9daefc1804beba6325d79da5b11a0f54acbfd4dd233b1c223b1821c6",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/java.lang.String contacts.entity.Contacts.getPhoneNumber(empty)"
    },
    {
      "id": 40593,
      "name": "setPhoneNumber",
      "type": "contacts.entity.Contacts",
      "flags": "p",
      "display": "c.e.C.setPhoneNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "4b4a95718f47d6e120ea908206ec14d71a5ef30340520d38301caa02852d54b7",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/void contacts.entity.Contacts.setPhoneNumber(java.lang.String)"
    },
    {
      "id": 8152,
      "name": "create",
      "type": "contacts.service.ContactsServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "contacts.entity.Contacts",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "970ba6bd29bf64a7609ab885d156ce82b76c70cccb047455971a8da8845b1a40",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsServiceImpl.create(contacts.entity.Contacts, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8155,
      "name": "createContacts",
      "type": "contacts.service.ContactsServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.createContacts",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "contacts.entity.Contacts",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "b89a1d13a1277faaac03fda7aa9ecbb8329b9adc7e0017484512fba2e32692ef",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsServiceImpl.createContacts(contacts.entity.Contacts, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8156,
      "name": "delete",
      "type": "contacts.service.ContactsServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.delete",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "289d60303e2c67fd8e912cb1a4c104321848b0a572e041835bad4b616f33dcda",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsServiceImpl.delete(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8161,
      "name": "findContactsByAccountId",
      "type": "contacts.service.ContactsServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.findContactsByAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "24982ab7dcd2faef5e349a055bee514b91060d2c5faaaf68f6d062bb6ab511a4",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsServiceImpl.findContactsByAccountId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8162,
      "name": "getAllContacts",
      "type": "contacts.service.ContactsServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.getAllContacts",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "5635a8b5cda69f7c2d29a893d03aa135caea6bf45b1456682e46f1007b69019f",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsServiceImpl.getAllContacts(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8163,
      "name": "findContactsById",
      "type": "contacts.service.ContactsServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.findContactsById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "20ba86a86e45968e6fbff435b1ede7324241d963441acf6cda6fe6947533cc9f",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsServiceImpl.findContactsById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8164,
      "name": "modify",
      "type": "contacts.service.ContactsServiceImpl",
      "flags": "p",
      "display": "c.s.CSI.modify",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "contacts.entity.Contacts",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "558eba4c000d9c233eb793bce4ef2d0cd45e8d3cbfcfd1e79c9b4812287edb2e",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsServiceImpl.modify(contacts.entity.Contacts, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40566,
      "name": "create",
      "type": "contacts.service.ContactsService",
      "flags": "pa",
      "display": "c.s.CS.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "contacts.entity.Contacts",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsService.create(contacts.entity.Contacts, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40567,
      "name": "getAccountId",
      "type": "contacts.entity.Contacts",
      "flags": "p",
      "display": "c.e.C.getAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/java.lang.String contacts.entity.Contacts.getAccountId(empty)"
    },
    {
      "id": 40568,
      "name": "getDocumentNumber",
      "type": "contacts.entity.Contacts",
      "flags": "p",
      "display": "c.e.C.getDocumentNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "668501b084f2dc96265ceb4e39579391868136fffaeab12c3f93e3c91daee2e4",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/java.lang.String contacts.entity.Contacts.getDocumentNumber(empty)"
    },
    {
      "id": 40569,
      "name": "getDocumentType",
      "type": "contacts.entity.Contacts",
      "flags": "p",
      "display": "c.e.C.getDocumentType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "ed3b55cc5ceb92625108258378510b7804add7f1c8309b29defb1113950297fa",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/int contacts.entity.Contacts.getDocumentType(empty)"
    },
    {
      "id": 40570,
      "name": "findByAccountIdAndDocumentTypeAndDocumentType",
      "type": "contacts.repository.ContactsRepository",
      "flags": "pa",
      "display": "c.r.CR.findByAccountIdAndDocumentTypeAndDocumentType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String", "java.lang.String", "int"],
      "returnType": "contacts.entity.Contacts",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/contacts.entity.Contacts contacts.repository.ContactsRepository.findByAccountIdAndDocumentTypeAndDocumentType(java.lang.String, java.lang.String, int)"
    },
    {
      "id": 40571,
      "name": "getId",
      "type": "contacts.entity.Contacts",
      "flags": "p",
      "display": "c.e.C.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d0cf9f922ab010f8c80625ee6685ff3cb0a085a2217bde1a5d580997c5014bcb",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/java.lang.String contacts.entity.Contacts.getId(empty)"
    },
    {
      "id": 40573,
      "name": "save",
      "type": "contacts.repository.ContactsRepository",
      "flags": "pby",
      "display": "c.r.CR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "c3df3375939669ad8c7764a1a7f89be8524b100151913552b7a5c2ee9814f367",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/java.lang.Object contacts.repository.ContactsRepository.save(java.lang.Object)"
    },
    {
      "id": 40574,
      "name": "setId",
      "type": "contacts.entity.Contacts",
      "flags": "p",
      "display": "c.e.C.setId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "b5c6632fdead94e6cf5d078f9da49015f7742cbf1bf22678e79eecefc50ff91a",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/void contacts.entity.Contacts.setId(java.lang.String)"
    },
    {
      "id": 40575,
      "name": "createContacts",
      "type": "contacts.service.ContactsService",
      "flags": "pa",
      "display": "c.s.CS.createContacts",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "contacts.entity.Contacts",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-contacts-service",
      "endpointMethod": false,
      "methodSignature": "ts-contacts-service/edu.fudan.common.util.Response contacts.service.ContactsService.createContacts(contacts.entity.Contacts, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1958,
      "name": "<clinit>",
      "type": "delivery.mq.RabbitReceive",
      "flags": "s",
      "display": "d.m.RR.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1448385fefb3a6fbcfd8675342de1a9479df02825e64da1a3fd5692d8ca20cfe",
      "microservice": "ts-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-delivery-service/void delivery.mq.RabbitReceive.<clinit>(empty)"
    },
    {
      "id": 1921,
      "name": "<clinit>",
      "type": "execute.controller.ExecuteControlller",
      "flags": "s",
      "display": "e.c.EC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "ef6412b31a1d9db127a878539a4493ead955bab8b11aadf854d2db24a7792c51",
      "microservice": "ts-execute-service",
      "endpointMethod": false,
      "methodSignature": "ts-execute-service/void execute.controller.ExecuteControlller.<clinit>(empty)"
    },
    {
      "id": 1922,
      "name": "collectTicket",
      "type": "execute.controller.ExecuteControlller",
      "flags": "p",
      "display": "e.c.EC.collectTicket",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/executeservice/execute/collected/{orderId}",
      "bytecodeHash": "db8def337b50901b875612f7be3c151faac725697f4189aba1144e7cb02d8279",
      "microservice": "ts-execute-service",
      "endpointMethod": true,
      "methodSignature": "ts-execute-service/org.springframework.http.HttpEntity execute.controller.ExecuteControlller.collectTicket(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11650,
      "name": "executeOrder",
      "type": "execute.serivce.ExecuteServiceImpl",
      "flags": "P",
      "display": "e.s.ESI.executeOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "int",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "50b09a633ca3406964bae937970d3a4f0c57acb1b449d77c19a301bea891a92b",
      "microservice": "ts-execute-service",
      "endpointMethod": false,
      "methodSignature": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.executeOrder(java.lang.String, int, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1923,
      "name": "executeTicket",
      "type": "execute.controller.ExecuteControlller",
      "flags": "p",
      "display": "e.c.EC.executeTicket",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/executeservice/execute/execute/{orderId}",
      "bytecodeHash": "97e0b2e9c29341172cf29b09d94a4b3e830944adf57fbf0e739fc548ddf9d199",
      "microservice": "ts-execute-service",
      "endpointMethod": true,
      "methodSignature": "ts-execute-service/org.springframework.http.HttpEntity execute.controller.ExecuteControlller.executeTicket(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11651,
      "name": "getOrderByIdFromOrderOther",
      "type": "execute.serivce.ExecuteServiceImpl",
      "flags": "P",
      "display": "e.s.ESI.getOrderByIdFromOrderOther",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "fa00bbe9846cdd9aafffbd9bc9cb05898fcd0b5c5f91ce2efe5880d1b8e52a3b",
      "microservice": "ts-execute-service",
      "endpointMethod": false,
      "methodSignature": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrderOther(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1924,
      "name": "home",
      "type": "execute.controller.ExecuteControlller",
      "flags": "p",
      "display": "e.c.EC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "/api/v1/executeservice/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-execute-service",
      "endpointMethod": true,
      "methodSignature": "ts-execute-service/java.lang.String execute.controller.ExecuteControlller.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11652,
      "name": "executeOrderOther",
      "type": "execute.serivce.ExecuteServiceImpl",
      "flags": "P",
      "display": "e.s.ESI.executeOrderOther",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "int",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "8ca1f30825aa37fd312312e81bf5b49ece69090bbc84b2cd78d110db1e97737e",
      "microservice": "ts-execute-service",
      "endpointMethod": false,
      "methodSignature": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.executeOrderOther(java.lang.String, int, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1925,
      "name": "<clinit>",
      "type": "execute.serivce.ExecuteServiceImpl",
      "flags": "s",
      "display": "e.s.ESI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1610da8840e5dc0ece7b8ad66b5d076bb4b0b754f7fa1079ad316438fc90818a",
      "microservice": "ts-execute-service",
      "endpointMethod": false,
      "methodSignature": "ts-execute-service/void execute.serivce.ExecuteServiceImpl.<clinit>(empty)"
    },
    {
      "id": 14982,
      "name": "getServiceUrl",
      "type": "execute.serivce.ExecuteServiceImpl",
      "flags": "P",
      "display": "e.s.ESI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "1862b83a15032a72c4e8998e223103b0525d3d34c6fd44300541d9ebaf0ab264",
      "microservice": "ts-execute-service",
      "endpointMethod": false,
      "methodSignature": "ts-execute-service/java.lang.String execute.serivce.ExecuteServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 14983,
      "name": "<init>",
      "type": "execute.serivce.ExecuteServiceImpl$1",
      "flags": "",
      "display": "e.s.ESI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["execute.serivce.ExecuteServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-execute-service",
      "endpointMethod": false,
      "methodSignature": "ts-execute-service/void execute.serivce.ExecuteServiceImpl$1.<init>(execute.serivce.ExecuteServiceImpl)"
    },
    {
      "id": 14986,
      "name": "<init>",
      "type": "execute.serivce.ExecuteServiceImpl$2",
      "flags": "",
      "display": "e.s.ESI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["execute.serivce.ExecuteServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-execute-service",
      "endpointMethod": false,
      "methodSignature": "ts-execute-service/void execute.serivce.ExecuteServiceImpl$2.<init>(execute.serivce.ExecuteServiceImpl)"
    },
    {
      "id": 40491,
      "name": "ticketCollect",
      "type": "execute.serivce.ExecuteService",
      "flags": "pa",
      "display": "e.s.ES.ticketCollect",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-execute-service",
      "endpointMethod": false,
      "methodSignature": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteService.ticketCollect(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8080,
      "name": "ticketCollect",
      "type": "execute.serivce.ExecuteServiceImpl",
      "flags": "p",
      "display": "e.s.ESI.ticketCollect",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "30e3ac8aae71d0ccfdff38fab3a3be9b3b04a4f87f61b72031be9ac1c31e90fd",
      "microservice": "ts-execute-service",
      "endpointMethod": false,
      "methodSignature": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.ticketCollect(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8082,
      "name": "ticketExecute",
      "type": "execute.serivce.ExecuteServiceImpl",
      "flags": "p",
      "display": "e.s.ESI.ticketExecute",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "ea42dceab0ed703ef74e1c5e9951a50ec21e23c99474fcda0f7851ca5c4a06eb",
      "microservice": "ts-execute-service",
      "endpointMethod": false,
      "methodSignature": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.ticketExecute(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40498,
      "name": "ticketExecute",
      "type": "execute.serivce.ExecuteService",
      "flags": "pa",
      "display": "e.s.ES.ticketExecute",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-execute-service",
      "endpointMethod": false,
      "methodSignature": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteService.ticketExecute(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11645,
      "name": "getOrderByIdFromOrder",
      "type": "execute.serivce.ExecuteServiceImpl",
      "flags": "P",
      "display": "e.s.ESI.getOrderByIdFromOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "83859ae19c6e63884ba04e4f62a86db85a5b8697e7e833305d34d6187ce76fcd",
      "microservice": "ts-execute-service",
      "endpointMethod": false,
      "methodSignature": "ts-execute-service/edu.fudan.common.util.Response execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40576,
      "name": "setDeliveryTime",
      "type": "food_delivery.entity.FoodDeliveryOrder",
      "flags": "p",
      "display": "f.e.FDO.setDeliveryTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "48fb720aa2a9b68dfbb952c6e9e11d36348ceb48bf0fec91e3294ba5ac037a6d",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/void food_delivery.entity.FoodDeliveryOrder.setDeliveryTime(java.lang.String)"
    },
    {
      "id": 40578,
      "name": "updateSeatNo",
      "type": "food_delivery.service.FoodDeliveryService",
      "flags": "pa",
      "display": "f.s.FDS.updateSeatNo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "food_delivery.entity.SeatInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryService.updateSeatNo(food_delivery.entity.SeatInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1923,
      "name": "<clinit>",
      "type": "food_delivery.controller.FoodDeliveryController",
      "flags": "s",
      "display": "f.c.FDC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "66d95e034b6f741c3c396531f65ebe975240e5be41cc14e1b1435e717739a533",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/void food_delivery.controller.FoodDeliveryController.<clinit>(empty)"
    },
    {
      "id": 40579,
      "name": "getOrderId",
      "type": "food_delivery.entity.SeatInfo",
      "flags": "p",
      "display": "f.e.SI.getOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "804b3ae705e9e66161446b56a0c8ea320f025aad25a62dc23af37c7c98396f39",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.lang.String food_delivery.entity.SeatInfo.getOrderId(empty)"
    },
    {
      "id": 1924,
      "name": "createFoodDeliveryOrder",
      "type": "food_delivery.controller.FoodDeliveryController",
      "flags": "p",
      "display": "f.c.FDC.createFoodDeliveryOrder",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "food_delivery.entity.FoodDeliveryOrder",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/fooddeliveryservice/orders",
      "bytecodeHash": "bb117217354c3c140a4e15869869f8ad78bf4ea08bf3b8526f53e631dc2dad06",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": true,
      "methodSignature": "ts-food-delivery-service/org.springframework.http.HttpEntity food_delivery.controller.FoodDeliveryController.createFoodDeliveryOrder(food_delivery.entity.FoodDeliveryOrder, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40580,
      "name": "getSeatNo",
      "type": "food_delivery.entity.SeatInfo",
      "flags": "p",
      "display": "f.e.SI.getSeatNo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "9d5151d594e5413ba9d8d60f8eab5c37437fa4314a40019dd8ec798dae6b24e6",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/int food_delivery.entity.SeatInfo.getSeatNo(empty)"
    },
    {
      "id": 1925,
      "name": "deleteFoodDeliveryOrder",
      "type": "food_delivery.controller.FoodDeliveryController",
      "flags": "p",
      "display": "f.c.FDC.deleteFoodDeliveryOrder",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/fooddeliveryservice/orders/d/{orderId}",
      "bytecodeHash": "7270d386c8c7e17056bc74ab7e09c94432693272a8cd944c8f59f1be731e9660",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": true,
      "methodSignature": "ts-food-delivery-service/org.springframework.http.HttpEntity food_delivery.controller.FoodDeliveryController.deleteFoodDeliveryOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40581,
      "name": "setSeatNo",
      "type": "food_delivery.entity.FoodDeliveryOrder",
      "flags": "p",
      "display": "f.e.FDO.setSeatNo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "b3e47fd4f731e3841781a3d3b52ce0c6da61fa2723abf7f1372798b22e9cf810",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/void food_delivery.entity.FoodDeliveryOrder.setSeatNo(int)"
    },
    {
      "id": 1926,
      "name": "getAllFoodDeliveryOrders",
      "type": "food_delivery.controller.FoodDeliveryController",
      "flags": "p",
      "display": "f.c.FDC.getAllFoodDeliveryOrders",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/fooddeliveryservice/orders/all",
      "bytecodeHash": "c24808ed4b95c7ab558957da4da75d8afef526df74b3340523aeb62e05fe4a72",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": true,
      "methodSignature": "ts-food-delivery-service/org.springframework.http.HttpEntity food_delivery.controller.FoodDeliveryController.getAllFoodDeliveryOrders(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40582,
      "name": "updateTripId",
      "type": "food_delivery.service.FoodDeliveryService",
      "flags": "pa",
      "display": "f.s.FDS.updateTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "food_delivery.entity.TripOrderInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryService.updateTripId(food_delivery.entity.TripOrderInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1927,
      "name": "getFoodDeliveryOrderById",
      "type": "food_delivery.controller.FoodDeliveryController",
      "flags": "p",
      "display": "f.c.FDC.getFoodDeliveryOrderById",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/fooddeliveryservice/orders/{orderId}",
      "bytecodeHash": "17b0e3678b0ce77e4ec95dffda4acbc516b6905f910310055935fd636c3318b4",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": true,
      "methodSignature": "ts-food-delivery-service/org.springframework.http.HttpEntity food_delivery.controller.FoodDeliveryController.getFoodDeliveryOrderById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40583,
      "name": "getOrderId",
      "type": "food_delivery.entity.TripOrderInfo",
      "flags": "p",
      "display": "f.e.TOI.getOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "804b3ae705e9e66161446b56a0c8ea320f025aad25a62dc23af37c7c98396f39",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.lang.String food_delivery.entity.TripOrderInfo.getOrderId(empty)"
    },
    {
      "id": 1928,
      "name": "getFoodDeliveryOrderByStoreId",
      "type": "food_delivery.controller.FoodDeliveryController",
      "flags": "p",
      "display": "f.c.FDC.getFoodDeliveryOrderByStoreId",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/fooddeliveryservice/orders/store/{storeId}",
      "bytecodeHash": "2bdda3f50e315c100f8e6c8e3760579dd7b25a22bb27bddd270c259d3f17a8e8",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": true,
      "methodSignature": "ts-food-delivery-service/org.springframework.http.HttpEntity food_delivery.controller.FoodDeliveryController.getFoodDeliveryOrderByStoreId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40584,
      "name": "getTripId",
      "type": "food_delivery.entity.TripOrderInfo",
      "flags": "p",
      "display": "f.e.TOI.getTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.lang.String food_delivery.entity.TripOrderInfo.getTripId(empty)"
    },
    {
      "id": 1929,
      "name": "home",
      "type": "food_delivery.controller.FoodDeliveryController",
      "flags": "p",
      "display": "f.c.FDC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.lang.String food_delivery.controller.FoodDeliveryController.home(empty)"
    },
    {
      "id": 40585,
      "name": "setTripId",
      "type": "food_delivery.entity.FoodDeliveryOrder",
      "flags": "p",
      "display": "f.e.FDO.setTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "69e52eac317680e748fa698b13b4527c910f3cd3f7436b5eb79b7a10eba51484",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/void food_delivery.entity.FoodDeliveryOrder.setTripId(java.lang.String)"
    },
    {
      "id": 1930,
      "name": "updateDeliveryTime",
      "type": "food_delivery.controller.FoodDeliveryController",
      "flags": "p",
      "display": "f.c.FDC.updateDeliveryTime",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "food_delivery.entity.DeliveryInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/fooddeliveryservice/orders/dtime",
      "bytecodeHash": "192dd2dbbfcc14d5611b3f9eac9c9c47ad14ab44a13d8bae229df77896b6c93e",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": true,
      "methodSignature": "ts-food-delivery-service/org.springframework.http.HttpEntity food_delivery.controller.FoodDeliveryController.updateDeliveryTime(food_delivery.entity.DeliveryInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1931,
      "name": "updateSeatNo",
      "type": "food_delivery.controller.FoodDeliveryController",
      "flags": "p",
      "display": "f.c.FDC.updateSeatNo",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "food_delivery.entity.SeatInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/fooddeliveryservice/orders/seatno",
      "bytecodeHash": "b4394a819175e4737bf3764023ca701c02eb76d2e4a235d422737e2338f18301",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": true,
      "methodSignature": "ts-food-delivery-service/org.springframework.http.HttpEntity food_delivery.controller.FoodDeliveryController.updateSeatNo(food_delivery.entity.SeatInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1932,
      "name": "updateTripId",
      "type": "food_delivery.controller.FoodDeliveryController",
      "flags": "p",
      "display": "f.c.FDC.updateTripId",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "food_delivery.entity.TripOrderInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/fooddeliveryservice/orders/tripid",
      "bytecodeHash": "6cdd526e115ab840029ef27efd50b7b69acac9bf32707767c540a523ee0f8aee",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": true,
      "methodSignature": "ts-food-delivery-service/org.springframework.http.HttpEntity food_delivery.controller.FoodDeliveryController.updateTripId(food_delivery.entity.TripOrderInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1933,
      "name": "<clinit>",
      "type": "food_delivery.init.InitData",
      "flags": "s",
      "display": "f.i.ID.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "39fd32c9c2768f15a31f205fcdb5afb262e3674ddf6db4e3381185a0d5e0766a",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/void food_delivery.init.InitData.<clinit>(empty)"
    },
    {
      "id": 1934,
      "name": "<clinit>",
      "type": "food_delivery.service.FoodDeliveryServiceImpl",
      "flags": "s",
      "display": "f.s.FDSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "3a9092b78f9719543dfd926be02388717a50ad69e5170af4f58b12d9d40c8c3e",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/void food_delivery.service.FoodDeliveryServiceImpl.<clinit>(empty)"
    },
    {
      "id": 11694,
      "name": "getServiceUrl",
      "type": "food_delivery.service.FoodDeliveryServiceImpl",
      "flags": "P",
      "display": "f.s.FDSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4c9cdca9114d46d9b6782076a5fcdd786861a709d13bfd695ca633cdf0ab0f00",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.lang.String food_delivery.service.FoodDeliveryServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 11695,
      "name": "<init>",
      "type": "food_delivery.service.FoodDeliveryServiceImpl$1",
      "flags": "",
      "display": "f.s.FDSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["food_delivery.service.FoodDeliveryServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/void food_delivery.service.FoodDeliveryServiceImpl$1.<init>(food_delivery.service.FoodDeliveryServiceImpl)"
    },
    {
      "id": 8123,
      "name": "createFoodDeliveryOrder",
      "type": "food_delivery.service.FoodDeliveryServiceImpl",
      "flags": "p",
      "display": "f.s.FDSI.createFoodDeliveryOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "food_delivery.entity.FoodDeliveryOrder",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "e659f86ac5aea69df4751a35b8b4b80c29c7d3d0507f582b526b8cb4c7d32968",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.createFoodDeliveryOrder(food_delivery.entity.FoodDeliveryOrder, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8125,
      "name": "deleteFoodDeliveryOrder",
      "type": "food_delivery.service.FoodDeliveryServiceImpl",
      "flags": "p",
      "display": "f.s.FDSI.deleteFoodDeliveryOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "82068719b93eb8df767540540ac8ef8a8bf228093c87a1f9b127f90dfaed1639",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.deleteFoodDeliveryOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8126,
      "name": "getAllFoodDeliveryOrders",
      "type": "food_delivery.service.FoodDeliveryServiceImpl",
      "flags": "p",
      "display": "f.s.FDSI.getAllFoodDeliveryOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "6369c20ec9e4114a5fa33d7a649fc3bd1c86e38e6891905d82862b9050bc3c37",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.getAllFoodDeliveryOrders(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8127,
      "name": "getFoodDeliveryOrderById",
      "type": "food_delivery.service.FoodDeliveryServiceImpl",
      "flags": "p",
      "display": "f.s.FDSI.getFoodDeliveryOrderById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "bcc16c7f37f9b82e0847b094316dece91ed026b159deda9648bf1cd739f55f9a",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.getFoodDeliveryOrderById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8128,
      "name": "getFoodDeliveryOrderByStoreId",
      "type": "food_delivery.service.FoodDeliveryServiceImpl",
      "flags": "p",
      "display": "f.s.FDSI.getFoodDeliveryOrderByStoreId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "754a06e637876a68d094a1aa01ee2208a4fbd3a7e9037a1ae826529d3be1e909",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.getFoodDeliveryOrderByStoreId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8129,
      "name": "updateDeliveryTime",
      "type": "food_delivery.service.FoodDeliveryServiceImpl",
      "flags": "p",
      "display": "f.s.FDSI.updateDeliveryTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "food_delivery.entity.DeliveryInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "f01674ad244bd224e7b4a52bf5ea85264a29960915a1fffbf3500063d6034666",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.updateDeliveryTime(food_delivery.entity.DeliveryInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8130,
      "name": "updateSeatNo",
      "type": "food_delivery.service.FoodDeliveryServiceImpl",
      "flags": "p",
      "display": "f.s.FDSI.updateSeatNo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "food_delivery.entity.SeatInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "c13571465c8a298368bb6cdd3e9c44622d4930b444b98d6ca7e9db36faa66176",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.updateSeatNo(food_delivery.entity.SeatInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8131,
      "name": "updateTripId",
      "type": "food_delivery.service.FoodDeliveryServiceImpl",
      "flags": "p",
      "display": "f.s.FDSI.updateTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "food_delivery.entity.TripOrderInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "30c559fc5fbaf50e96aa6ca84462366cf13ec5fe475b0d6abea31833606fadca",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryServiceImpl.updateTripId(food_delivery.entity.TripOrderInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 15953,
      "name": "apply",
      "type": "food_delivery.service.FoodDeliveryServiceImpl$$Lambda/0x443c7d12509f1d07dc720ced6adfbed0",
      "flags": "p",
      "display": "f.s.FDSIL.apply",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "46b8e3a72edfbe154e351a8ebaf31b256d83ba8cec53bd1362b8c6f3f4ef6e97",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.lang.Object food_delivery.service.FoodDeliveryServiceImpl$$Lambda/0x443c7d12509f1d07dc720ced6adfbed0.apply(java.lang.Object)"
    },
    {
      "id": 15954,
      "name": "apply",
      "type": "food_delivery.service.FoodDeliveryServiceImpl$$Lambda/0xfa43fd1cb0f8cff3439f777c7297d8240",
      "flags": "p",
      "display": "f.s.FDSIL.apply",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "e2e16a4cefea9b0395b67343657883ad3e9e1bdd1274ad5da1bb0bf9ccc87cfc",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.lang.Object food_delivery.service.FoodDeliveryServiceImpl$$Lambda/0xfa43fd1cb0f8cff3439f777c7297d8240.apply(java.lang.Object)"
    },
    {
      "id": 40550,
      "name": "createFoodDeliveryOrder",
      "type": "food_delivery.service.FoodDeliveryService",
      "flags": "pa",
      "display": "f.s.FDS.createFoodDeliveryOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "food_delivery.entity.FoodDeliveryOrder",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryService.createFoodDeliveryOrder(food_delivery.entity.FoodDeliveryOrder, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40551,
      "name": "getStationFoodStoreId",
      "type": "food_delivery.entity.FoodDeliveryOrder",
      "flags": "p",
      "display": "f.e.FDO.getStationFoodStoreId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.lang.String food_delivery.entity.FoodDeliveryOrder.getStationFoodStoreId(empty)"
    },
    {
      "id": 40553,
      "name": "getFoodList",
      "type": "food_delivery.entity.StationFoodStoreInfo",
      "flags": "p",
      "display": "f.e.SFSI.getFoodList",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.util.List food_delivery.entity.StationFoodStoreInfo.getFoodList(empty)"
    },
    {
      "id": 40554,
      "name": "getFoodList",
      "type": "food_delivery.entity.FoodDeliveryOrder",
      "flags": "p",
      "display": "f.e.FDO.getFoodList",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.util.List food_delivery.entity.FoodDeliveryOrder.getFoodList(empty)"
    },
    {
      "id": 40556,
      "name": "getStoreName",
      "type": "food_delivery.entity.StationFoodStoreInfo",
      "flags": "p",
      "display": "f.e.SFSI.getStoreName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.lang.String food_delivery.entity.StationFoodStoreInfo.getStoreName(empty)"
    },
    {
      "id": 40558,
      "name": "getDeliveryFee",
      "type": "food_delivery.entity.StationFoodStoreInfo",
      "flags": "p",
      "display": "f.e.SFSI.getDeliveryFee",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "double",
      "endpointURI": null,
      "bytecodeHash": "7cb397cd266479a99b83f7bec4befae5853aec2b7fcb1765d4d236caa5c08604",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/double food_delivery.entity.StationFoodStoreInfo.getDeliveryFee(empty)"
    },
    {
      "id": 40559,
      "name": "setDeliveryFee",
      "type": "food_delivery.entity.FoodDeliveryOrder",
      "flags": "p",
      "display": "f.e.FDO.setDeliveryFee",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["double"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bef0afc1595537293420c619720a42e4843dabd48d13b2d7a9b207d929fb91ec",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/void food_delivery.entity.FoodDeliveryOrder.setDeliveryFee(double)"
    },
    {
      "id": 40560,
      "name": "save",
      "type": "food_delivery.repository.FoodDeliveryOrderRepository",
      "flags": "pby",
      "display": "f.r.FDOR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "c560241d6b150f58add354ac59f293a308b9227955dd661bb9f995b35777ce5b",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.lang.Object food_delivery.repository.FoodDeliveryOrderRepository.save(java.lang.Object)"
    },
    {
      "id": 40562,
      "name": "deleteFoodDeliveryOrder",
      "type": "food_delivery.service.FoodDeliveryService",
      "flags": "pa",
      "display": "f.s.FDS.deleteFoodDeliveryOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryService.deleteFoodDeliveryOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40563,
      "name": "findById",
      "type": "food_delivery.repository.FoodDeliveryOrderRepository",
      "flags": "pby",
      "display": "f.r.FDOR.findById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.util.Optional",
      "endpointURI": null,
      "bytecodeHash": "657aa42125b9976beff839d41e07ee69267c373dccd8d8a63a319ecf7bf44a27",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.util.Optional food_delivery.repository.FoodDeliveryOrderRepository.findById(java.lang.Object)"
    },
    {
      "id": 40565,
      "name": "deleteById",
      "type": "food_delivery.repository.FoodDeliveryOrderRepository",
      "flags": "pby",
      "display": "f.r.FDOR.deleteById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "2e15aae722798eef2efa202fa7877436b97a595992672a28c2471cf39b4809c2",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/void food_delivery.repository.FoodDeliveryOrderRepository.deleteById(java.lang.Object)"
    },
    {
      "id": 40567,
      "name": "getAllFoodDeliveryOrders",
      "type": "food_delivery.service.FoodDeliveryService",
      "flags": "pa",
      "display": "f.s.FDS.getAllFoodDeliveryOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryService.getAllFoodDeliveryOrders(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40568,
      "name": "findAll",
      "type": "food_delivery.repository.FoodDeliveryOrderRepository",
      "flags": "pa",
      "display": "f.r.FDOR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.util.List food_delivery.repository.FoodDeliveryOrderRepository.findAll(empty)"
    },
    {
      "id": 40570,
      "name": "getFoodDeliveryOrderById",
      "type": "food_delivery.service.FoodDeliveryService",
      "flags": "pa",
      "display": "f.s.FDS.getFoodDeliveryOrderById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryService.getFoodDeliveryOrderById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40571,
      "name": "getFoodDeliveryOrderByStoreId",
      "type": "food_delivery.service.FoodDeliveryService",
      "flags": "pa",
      "display": "f.s.FDS.getFoodDeliveryOrderByStoreId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryService.getFoodDeliveryOrderByStoreId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40572,
      "name": "findByStationFoodStoreId",
      "type": "food_delivery.repository.FoodDeliveryOrderRepository",
      "flags": "pa",
      "display": "f.r.FDOR.findByStationFoodStoreId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.util.List food_delivery.repository.FoodDeliveryOrderRepository.findByStationFoodStoreId(java.lang.String)"
    },
    {
      "id": 40573,
      "name": "updateDeliveryTime",
      "type": "food_delivery.service.FoodDeliveryService",
      "flags": "pa",
      "display": "f.s.FDS.updateDeliveryTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "food_delivery.entity.DeliveryInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/edu.fudan.common.util.Response food_delivery.service.FoodDeliveryService.updateDeliveryTime(food_delivery.entity.DeliveryInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40574,
      "name": "getOrderId",
      "type": "food_delivery.entity.DeliveryInfo",
      "flags": "p",
      "display": "f.e.DI.getOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "804b3ae705e9e66161446b56a0c8ea320f025aad25a62dc23af37c7c98396f39",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.lang.String food_delivery.entity.DeliveryInfo.getOrderId(empty)"
    },
    {
      "id": 40575,
      "name": "getDeliveryTime",
      "type": "food_delivery.entity.DeliveryInfo",
      "flags": "p",
      "display": "f.e.DI.getDeliveryTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-food-delivery-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-delivery-service/java.lang.String food_delivery.entity.DeliveryInfo.getDeliveryTime(empty)"
    },
    {
      "id": 8449,
      "name": "createFoodOrdersInBatch",
      "type": "foodsearch.service.FoodServiceImpl",
      "flags": "p",
      "display": "f.s.FSI.createFoodOrdersInBatch",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "c2db57b8ba9d401fb0d6757c87f57499651688651ead8f0d3bc863273b989a2a",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 43010,
      "name": "createFoodOrdersInBatch",
      "type": "foodsearch.service.FoodService",
      "flags": "pa",
      "display": "f.s.FS.createFoodOrdersInBatch",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodService.createFoodOrdersInBatch(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8451,
      "name": "createFoodOrder",
      "type": "foodsearch.service.FoodServiceImpl",
      "flags": "p",
      "display": "f.s.FSI.createFoodOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "foodsearch.entity.FoodOrder",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "e51228f7ddf65c618f91742862d452cd08d66aacb9feb92880183e20a1f52b9d",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 43011,
      "name": "findByOrderId",
      "type": "foodsearch.repository.FoodOrderRepository",
      "flags": "pa",
      "display": "f.r.FOR.findByOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "foodsearch.entity.FoodOrder",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/foodsearch.entity.FoodOrder foodsearch.repository.FoodOrderRepository.findByOrderId(java.lang.String)"
    },
    {
      "id": 8452,
      "name": "deleteFoodOrder",
      "type": "foodsearch.service.FoodServiceImpl",
      "flags": "p",
      "display": "f.s.FSI.deleteFoodOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "6946c73c5d5c54f9c6e4a95252689131e7bfd12a1ee802d1bd16c1ecda56ef49",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.deleteFoodOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8453,
      "name": "findAllFoodOrder",
      "type": "foodsearch.service.FoodServiceImpl",
      "flags": "p",
      "display": "f.s.FSI.findAllFoodOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "c9d8bd1a1e8a910deb58216ccea4f1ab3755e45002189e489e31aa4f9d25fa3b",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.findAllFoodOrder(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 43013,
      "name": "save",
      "type": "foodsearch.repository.FoodOrderRepository",
      "flags": "pby",
      "display": "f.r.FOR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "c1f8b52f4462e7d64fe99fc6048dcf35ab2209463fc0de16d8d1f12943bb61f5",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.lang.Object foodsearch.repository.FoodOrderRepository.save(java.lang.Object)"
    },
    {
      "id": 43016,
      "name": "send",
      "type": "foodsearch.mq.RabbitSend",
      "flags": "p",
      "display": "f.m.RS.send",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "0eb6b1114ff28cb16bfa1bd1527ab48390104bc9f28fa0ecf5faaa1e1e3295b8",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/void foodsearch.mq.RabbitSend.send(java.lang.String)"
    },
    {
      "id": 8457,
      "name": "findByOrderId",
      "type": "foodsearch.service.FoodServiceImpl",
      "flags": "p",
      "display": "f.s.FSI.findByOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "00488d3da020aed1b0d899fac1e7fa4a4561e5b4d7fc534b27d1544f8f6de396",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.findByOrderId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8458,
      "name": "getAllFood",
      "type": "foodsearch.service.FoodServiceImpl",
      "flags": "p",
      "display": "f.s.FSI.getAllFood",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "30ab0ef4d2c52a4aa67aaf321b94a79d774e14ec89f629ffa8e496e7e57204fb",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.getAllFood(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 43018,
      "name": "createFoodOrder",
      "type": "foodsearch.service.FoodService",
      "flags": "pa",
      "display": "f.s.FS.createFoodOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "foodsearch.entity.FoodOrder",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodService.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 43019,
      "name": "deleteFoodOrder",
      "type": "foodsearch.service.FoodService",
      "flags": "pa",
      "display": "f.s.FS.deleteFoodOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodService.deleteFoodOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 43020,
      "name": "deleteFoodOrderByOrderId",
      "type": "foodsearch.repository.FoodOrderRepository",
      "flags": "pa",
      "display": "f.r.FOR.deleteFoodOrderByOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/void foodsearch.repository.FoodOrderRepository.deleteFoodOrderByOrderId(java.lang.String)"
    },
    {
      "id": 8461,
      "name": "updateFoodOrder",
      "type": "foodsearch.service.FoodServiceImpl",
      "flags": "p",
      "display": "f.s.FSI.updateFoodOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "foodsearch.entity.FoodOrder",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "07ac26b4fefdcb27e8f1a47140de0ecfb64218b665a872c970f032029f8cffdc",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodServiceImpl.updateFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 43021,
      "name": "findAllFoodOrder",
      "type": "foodsearch.service.FoodService",
      "flags": "pa",
      "display": "f.s.FS.findAllFoodOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodService.findAllFoodOrder(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8462,
      "name": "canEqual",
      "type": "foodsearch.entity.AllTripFood",
      "flags": "d",
      "display": "f.e.ATF.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/boolean foodsearch.entity.AllTripFood.canEqual(java.lang.Object)"
    },
    {
      "id": 43022,
      "name": "findAll",
      "type": "foodsearch.repository.FoodOrderRepository",
      "flags": "pa",
      "display": "f.r.FOR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.util.List foodsearch.repository.FoodOrderRepository.findAll(empty)"
    },
    {
      "id": 8463,
      "name": "getTrainFoodList",
      "type": "foodsearch.entity.AllTripFood",
      "flags": "p",
      "display": "f.e.ATF.getTrainFoodList",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.util.List foodsearch.entity.AllTripFood.getTrainFoodList(empty)"
    },
    {
      "id": 43023,
      "name": "findByOrderId",
      "type": "foodsearch.service.FoodService",
      "flags": "pa",
      "display": "f.s.FS.findByOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodService.findByOrderId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8464,
      "name": "getFoodStoreListMap",
      "type": "foodsearch.entity.AllTripFood",
      "flags": "p",
      "display": "f.e.ATF.getFoodStoreListMap",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.Map",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.util.Map foodsearch.entity.AllTripFood.getFoodStoreListMap(empty)"
    },
    {
      "id": 8465,
      "name": "canEqual",
      "type": "foodsearch.entity.Delivery",
      "flags": "d",
      "display": "f.e.D.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/boolean foodsearch.entity.Delivery.canEqual(java.lang.Object)"
    },
    {
      "id": 43025,
      "name": "getAllFood",
      "type": "foodsearch.service.FoodService",
      "flags": "pa",
      "display": "f.s.FS.getAllFood",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodService.getAllFood(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8466,
      "name": "getOrderId",
      "type": "foodsearch.entity.Delivery",
      "flags": "p",
      "display": "f.e.D.getOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.UUID",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.util.UUID foodsearch.entity.Delivery.getOrderId(empty)"
    },
    {
      "id": 8467,
      "name": "getFoodName",
      "type": "foodsearch.entity.Delivery",
      "flags": "p",
      "display": "f.e.D.getFoodName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.lang.String foodsearch.entity.Delivery.getFoodName(empty)"
    },
    {
      "id": 8468,
      "name": "getStoreName",
      "type": "foodsearch.entity.Delivery",
      "flags": "p",
      "display": "f.e.D.getStoreName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.lang.String foodsearch.entity.Delivery.getStoreName(empty)"
    },
    {
      "id": 8469,
      "name": "getStationName",
      "type": "foodsearch.entity.Delivery",
      "flags": "p",
      "display": "f.e.D.getStationName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.lang.String foodsearch.entity.Delivery.getStationName(empty)"
    },
    {
      "id": 8470,
      "name": "canEqual",
      "type": "foodsearch.entity.FoodOrder",
      "flags": "d",
      "display": "f.e.FO.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/boolean foodsearch.entity.FoodOrder.canEqual(java.lang.Object)"
    },
    {
      "id": 8471,
      "name": "getFoodType",
      "type": "foodsearch.entity.FoodOrder",
      "flags": "p",
      "display": "f.e.FO.getFoodType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "17d2088447ccf826ece32e30a3768849a386734ae9eaa8712655f75cd4c67385",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/int foodsearch.entity.FoodOrder.getFoodType(empty)"
    },
    {
      "id": 8472,
      "name": "getPrice",
      "type": "foodsearch.entity.FoodOrder",
      "flags": "p",
      "display": "f.e.FO.getPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "double",
      "endpointURI": null,
      "bytecodeHash": "34c25fc3e412c3dfa25329217331cbc31c623afa2225c914914ba0c77944499c",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/double foodsearch.entity.FoodOrder.getPrice(empty)"
    },
    {
      "id": 8474,
      "name": "getId",
      "type": "foodsearch.entity.FoodOrder",
      "flags": "p",
      "display": "f.e.FO.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getId(empty)"
    },
    {
      "id": 8475,
      "name": "getOrderId",
      "type": "foodsearch.entity.FoodOrder",
      "flags": "p",
      "display": "f.e.FO.getOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getOrderId(empty)"
    },
    {
      "id": 8476,
      "name": "getStationName",
      "type": "foodsearch.entity.FoodOrder",
      "flags": "p",
      "display": "f.e.FO.getStationName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStationName(empty)"
    },
    {
      "id": 8477,
      "name": "getStoreName",
      "type": "foodsearch.entity.FoodOrder",
      "flags": "p",
      "display": "f.e.FO.getStoreName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getStoreName(empty)"
    },
    {
      "id": 8478,
      "name": "getFoodName",
      "type": "foodsearch.entity.FoodOrder",
      "flags": "p",
      "display": "f.e.FO.getFoodName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.getFoodName(empty)"
    },
    {
      "id": 2098,
      "name": "<clinit>",
      "type": "foodsearch.controller.FoodController",
      "flags": "s",
      "display": "f.c.FC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "de19fdcf8aca59683301ccf067d11d868d8259f9bca26140e8aebb57701348ff",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/void foodsearch.controller.FoodController.<clinit>(empty)"
    },
    {
      "id": 2099,
      "name": "createFoodBatches",
      "type": "foodsearch.controller.FoodController",
      "flags": "p",
      "display": "f.c.FC.createFoodBatches",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": null,
      "bytecodeHash": "ed0a88a1fcd7b0a6175706521c7cd0e279f0a3ec28a2ae4120feb3cf16f057d5",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.createFoodBatches(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2100,
      "name": "createFoodOrder",
      "type": "foodsearch.controller.FoodController",
      "flags": "p",
      "display": "f.c.FC.createFoodOrder",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "foodsearch.entity.FoodOrder",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/foodservice/orders",
      "bytecodeHash": "0b4709cd9e94b027b1d562f6e0c4ac3a75d1d8e051bfa944feaa45feccb1f000",
      "microservice": "ts-food-service",
      "endpointMethod": true,
      "methodSignature": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2101,
      "name": "deleteFoodOrder",
      "type": "foodsearch.controller.FoodController",
      "flags": "p",
      "display": "f.c.FC.deleteFoodOrder",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/foodservice/orders/{orderId}",
      "bytecodeHash": "6414628f252159efad25b32a19bf1b376b5aa0daea29356fad2fd958b28b6b02",
      "microservice": "ts-food-service",
      "endpointMethod": true,
      "methodSignature": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.deleteFoodOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2102,
      "name": "findAllFoodOrder",
      "type": "foodsearch.controller.FoodController",
      "flags": "p",
      "display": "f.c.FC.findAllFoodOrder",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/foodservice/orders",
      "bytecodeHash": "fe83cde81302a80ee4350c4d790d24fded65462531136cebb11647054dcd85b5",
      "microservice": "ts-food-service",
      "endpointMethod": true,
      "methodSignature": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.findAllFoodOrder(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2103,
      "name": "findFoodOrderByOrderId",
      "type": "foodsearch.controller.FoodController",
      "flags": "p",
      "display": "f.c.FC.findFoodOrderByOrderId",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/foodservice/orders/{orderId}",
      "bytecodeHash": "32593657e24feb4ac29f1c6a72a2f0c8cae984acada0a66981945e5dab16e6d8",
      "microservice": "ts-food-service",
      "endpointMethod": true,
      "methodSignature": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.findFoodOrderByOrderId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2104,
      "name": "getAllFood",
      "type": "foodsearch.controller.FoodController",
      "flags": "p",
      "display": "f.c.FC.getAllFood",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/foodservice/foods/{date}/{startStation}/{endStation}/{tripId}",
      "bytecodeHash": "0bea602d2dded0c3cb2fff45b97e8163744e6f963e7427cbfe1bbeeddd52e0be",
      "microservice": "ts-food-service",
      "endpointMethod": true,
      "methodSignature": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.getAllFood(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2105,
      "name": "home",
      "type": "foodsearch.controller.FoodController",
      "flags": "p",
      "display": "f.c.FC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.lang.String foodsearch.controller.FoodController.home(empty)"
    },
    {
      "id": 2106,
      "name": "test_send_delivery",
      "type": "foodsearch.controller.FoodController",
      "flags": "p",
      "display": "f.c.FC.test_send_delivery",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "2b59239203d522fe2e96b03d8ed3fd0d2baad9ac450f867351abb939aed577a8",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/boolean foodsearch.controller.FoodController.test_send_delivery(empty)"
    },
    {
      "id": 2107,
      "name": "updateFoodOrder",
      "type": "foodsearch.controller.FoodController",
      "flags": "p",
      "display": "f.c.FC.updateFoodOrder",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "foodsearch.entity.FoodOrder",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/foodservice/orders",
      "bytecodeHash": "e94df8bb1272750a04229655c0f0c0b35b23757044a3c9464658ad8c71547a9a",
      "microservice": "ts-food-service",
      "endpointMethod": true,
      "methodSignature": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.updateFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 2108,
      "name": "equals",
      "type": "foodsearch.entity.AllTripFood",
      "flags": "p",
      "display": "f.e.ATF.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "b30466fa0cd8051ec668680f41a90f13cdde067e5f23e70a6f51f308980603b2",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/boolean foodsearch.entity.AllTripFood.equals(java.lang.Object)"
    },
    {
      "id": 2109,
      "name": "hashCode",
      "type": "foodsearch.entity.AllTripFood",
      "flags": "p",
      "display": "f.e.ATF.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "e14c77f74340b3b22da2bffa21e44bf1d6cedd8f448f6396e4f2c313c285a5df",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/int foodsearch.entity.AllTripFood.hashCode(empty)"
    },
    {
      "id": 2110,
      "name": "toString",
      "type": "foodsearch.entity.AllTripFood",
      "flags": "p",
      "display": "f.e.ATF.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8a47460edcb85032dce3ad9f57fbba71d960259d1c017ae9ab2fef8ca789eaf9",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.lang.String foodsearch.entity.AllTripFood.toString(empty)"
    },
    {
      "id": 2111,
      "name": "equals",
      "type": "foodsearch.entity.Delivery",
      "flags": "p",
      "display": "f.e.D.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "a9b4d5b90d7f0bbe8d107e7c95739d8bd9986a9c254d8619705d3bd128badc4b",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/boolean foodsearch.entity.Delivery.equals(java.lang.Object)"
    },
    {
      "id": 2112,
      "name": "hashCode",
      "type": "foodsearch.entity.Delivery",
      "flags": "p",
      "display": "f.e.D.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "863eaebf4aa8dcffabcdbde9f1fb066fcfaf2204787efa05866318da4abcb7e7",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/int foodsearch.entity.Delivery.hashCode(empty)"
    },
    {
      "id": 2113,
      "name": "toString",
      "type": "foodsearch.entity.Delivery",
      "flags": "p",
      "display": "f.e.D.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "84451b95e99153ae9d827c3520640478c0ea2fb046f6016fe3bbf1d8b9cae0a5",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.lang.String foodsearch.entity.Delivery.toString(empty)"
    },
    {
      "id": 2114,
      "name": "equals",
      "type": "foodsearch.entity.FoodOrder",
      "flags": "p",
      "display": "f.e.FO.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "653f5e42493c60f65e3d1174d1c197008235f2562ecff701cedce9b137ad3623",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/boolean foodsearch.entity.FoodOrder.equals(java.lang.Object)"
    },
    {
      "id": 2115,
      "name": "hashCode",
      "type": "foodsearch.entity.FoodOrder",
      "flags": "p",
      "display": "f.e.FO.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "983709c17c3af3a791b886822e15948e1512868c803935dd69ac329c5ed2ec9b",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/int foodsearch.entity.FoodOrder.hashCode(empty)"
    },
    {
      "id": 2116,
      "name": "toString",
      "type": "foodsearch.entity.FoodOrder",
      "flags": "p",
      "display": "f.e.FO.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "97d9a9cc22dbf14e8bd907ccc46a505d224b66fa9353bd3ffb801b8cfd7334c5",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.lang.String foodsearch.entity.FoodOrder.toString(empty)"
    },
    {
      "id": 2117,
      "name": "<clinit>",
      "type": "foodsearch.mq.RabbitSend",
      "flags": "s",
      "display": "f.m.RS.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "5ed93b7bfe7646299f400d634a5e350f135e5e7cf238b5bd9511b50b5bbc77fb",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/void foodsearch.mq.RabbitSend.<clinit>(empty)"
    },
    {
      "id": 2118,
      "name": "<clinit>",
      "type": "foodsearch.service.FoodServiceImpl",
      "flags": "s",
      "display": "f.s.FSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "54f726d4f40751efc3df2b036e0e33fdc50dad783a17e2c10854221052e8e887",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/void foodsearch.service.FoodServiceImpl.<clinit>(empty)"
    },
    {
      "id": 12132,
      "name": "getServiceUrl",
      "type": "foodsearch.service.FoodServiceImpl",
      "flags": "P",
      "display": "f.s.FSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c1b0f9c62ce4cf4f7c981f6ed811047ff2978f44917a1c007e883fbad1129bce",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.lang.String foodsearch.service.FoodServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 12133,
      "name": "<init>",
      "type": "foodsearch.service.FoodServiceImpl$1",
      "flags": "",
      "display": "f.s.FSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["foodsearch.service.FoodServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/void foodsearch.service.FoodServiceImpl$1.<init>(foodsearch.service.FoodServiceImpl)"
    },
    {
      "id": 12134,
      "name": "<init>",
      "type": "foodsearch.service.FoodServiceImpl$2",
      "flags": "",
      "display": "f.s.FSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["foodsearch.service.FoodServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/void foodsearch.service.FoodServiceImpl$2.<init>(foodsearch.service.FoodServiceImpl)"
    },
    {
      "id": 12135,
      "name": "<init>",
      "type": "foodsearch.service.FoodServiceImpl$3",
      "flags": "",
      "display": "f.s.FSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["foodsearch.service.FoodServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/void foodsearch.service.FoodServiceImpl$3.<init>(foodsearch.service.FoodServiceImpl)"
    },
    {
      "id": 12136,
      "name": "<init>",
      "type": "foodsearch.service.FoodServiceImpl$$Lambda/0x1ab9a427c7721c1aececd88d5f692370",
      "flags": "P",
      "display": "f.s.FSIL.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "b61614a49eb6fbdc074ab289d16b7266d15e8d830461056c92959d0def2dc144",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/void foodsearch.service.FoodServiceImpl$$Lambda/0x1ab9a427c7721c1aececd88d5f692370.<init>(java.lang.String)"
    },
    {
      "id": 43385,
      "name": "updateFoodOrder",
      "type": "foodsearch.service.FoodService",
      "flags": "pa",
      "display": "f.s.FS.updateFoodOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "foodsearch.entity.FoodOrder",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/edu.fudan.common.util.Response foodsearch.service.FoodService.updateFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 43386,
      "name": "findById",
      "type": "foodsearch.repository.FoodOrderRepository",
      "flags": "pa",
      "display": "f.r.FOR.findById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.Optional",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/java.util.Optional foodsearch.repository.FoodOrderRepository.findById(java.lang.String)"
    },
    {
      "id": 43387,
      "name": "setFoodType",
      "type": "foodsearch.entity.FoodOrder",
      "flags": "p",
      "display": "f.e.FO.setFoodType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "ffe0dd8353d5c4cf83655aa30381afe84b399c95445346c2334402a834f6a1ba",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/void foodsearch.entity.FoodOrder.setFoodType(int)"
    },
    {
      "id": 43388,
      "name": "setStationName",
      "type": "foodsearch.entity.FoodOrder",
      "flags": "p",
      "display": "f.e.FO.setStationName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1c059b5fe325fde7d43b063306b8ea508a338bafb0f3efc8a9c0b94e3f6e422c",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/void foodsearch.entity.FoodOrder.setStationName(java.lang.String)"
    },
    {
      "id": 43389,
      "name": "setStoreName",
      "type": "foodsearch.entity.FoodOrder",
      "flags": "p",
      "display": "f.e.FO.setStoreName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "935836f6468fbbdce3aa550163b41db4acc66eaba962e885841470780dddd4d2",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/void foodsearch.entity.FoodOrder.setStoreName(java.lang.String)"
    },
    {
      "id": 43390,
      "name": "setFoodName",
      "type": "foodsearch.entity.FoodOrder",
      "flags": "p",
      "display": "f.e.FO.setFoodName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "48fb720aa2a9b68dfbb952c6e9e11d36348ceb48bf0fec91e3294ba5ac037a6d",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/void foodsearch.entity.FoodOrder.setFoodName(java.lang.String)"
    },
    {
      "id": 43391,
      "name": "setPrice",
      "type": "foodsearch.entity.FoodOrder",
      "flags": "p",
      "display": "f.e.FO.setPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["double"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bef0afc1595537293420c619720a42e4843dabd48d13b2d7a9b207d929fb91ec",
      "microservice": "ts-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-food-service/void foodsearch.entity.FoodOrder.setPrice(double)"
    },
    {
      "id": 1925,
      "name": "<clinit>",
      "type": "inside_payment.async.AsyncTask",
      "flags": "s",
      "display": "i.a.AT.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "cffb6018ca7386b37ea949d28cf1bf296f15a405faa96532c42ac4feb21a66ec",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/void inside_payment.async.AsyncTask.<clinit>(empty)"
    },
    {
      "id": 1926,
      "name": "<clinit>",
      "type": "inside_payment.controller.InsidePaymentController",
      "flags": "s",
      "display": "i.c.IPC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "ae1e58630356ddac510494ebc6eda8ca1cc071891390f3ad61f26aeecb1ae05e",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/void inside_payment.controller.InsidePaymentController.<clinit>(empty)"
    },
    {
      "id": 1927,
      "name": "addMoney",
      "type": "inside_payment.controller.InsidePaymentController",
      "flags": "p",
      "display": "i.c.IPC.addMoney",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/inside_pay_service/inside_payment/{userId}/{money}",
      "bytecodeHash": "d71fa2a47a9eb8465f8c945f336d2822d739a51b2ef339e4db522ce8b59959c3",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": true,
      "methodSignature": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.addMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1928,
      "name": "createAccount",
      "type": "inside_payment.controller.InsidePaymentController",
      "flags": "p",
      "display": "i.c.IPC.createAccount",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "inside_payment.entity.AccountInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/inside_pay_service/inside_payment/account",
      "bytecodeHash": "38238be77cd07b43587f82b9c3ab21f06aacbd34b2d04339a0e73164bd4213a9",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": true,
      "methodSignature": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.createAccount(inside_payment.entity.AccountInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1929,
      "name": "drawBack",
      "type": "inside_payment.controller.InsidePaymentController",
      "flags": "p",
      "display": "i.c.IPC.drawBack",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/inside_pay_service/inside_payment/drawback/{userId}/{money}",
      "bytecodeHash": "94391a1fe1cfb2ce569189f351b09da1003d14e89186a7d6228d12fce9f3faab",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": true,
      "methodSignature": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.drawBack(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1930,
      "name": "home",
      "type": "inside_payment.controller.InsidePaymentController",
      "flags": "p",
      "display": "i.c.IPC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.controller.InsidePaymentController.home(empty)"
    },
    {
      "id": 1931,
      "name": "pay",
      "type": "inside_payment.controller.InsidePaymentController",
      "flags": "p",
      "display": "i.c.IPC.pay",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "inside_payment.entity.PaymentInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/inside_pay_service/inside_payment",
      "bytecodeHash": "f16537ac16a9cc82d66849439346c04970f962b83993f67edf7c192ac7345553",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": true,
      "methodSignature": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.pay(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1932,
      "name": "payDifference",
      "type": "inside_payment.controller.InsidePaymentController",
      "flags": "p",
      "display": "i.c.IPC.payDifference",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "inside_payment.entity.PaymentInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/inside_pay_service/inside_payment/difference",
      "bytecodeHash": "2ef82980fb7bae7e5ea9522f4fdd3c4fd51925d087a73797518f19df4c3383c2",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": true,
      "methodSignature": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.payDifference(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1933,
      "name": "queryAccount",
      "type": "inside_payment.controller.InsidePaymentController",
      "flags": "p",
      "display": "i.c.IPC.queryAccount",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/inside_pay_service/inside_payment/account",
      "bytecodeHash": "c7e32d1d8c7c23e76a9506fd0f6dd11e244704c256d6cd73f3bd71a32d33e003",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": true,
      "methodSignature": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.queryAccount(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1934,
      "name": "queryAddMoney",
      "type": "inside_payment.controller.InsidePaymentController",
      "flags": "p",
      "display": "i.c.IPC.queryAddMoney",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/inside_pay_service/inside_payment/money",
      "bytecodeHash": "d9a4b0546e17fa3e5cbe063a5c85ea5ff9800cedbdef8601245d176b3fa5c044",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": true,
      "methodSignature": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.queryAddMoney(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1935,
      "name": "queryPayment",
      "type": "inside_payment.controller.InsidePaymentController",
      "flags": "p",
      "display": "i.c.IPC.queryPayment",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/inside_pay_service/inside_payment/payment",
      "bytecodeHash": "d5676007203f15ef2e895649967bd2439d8a37c6938f94f67848b91c3d80421a",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": true,
      "methodSignature": "ts-inside-payment-service/org.springframework.http.HttpEntity inside_payment.controller.InsidePaymentController.queryPayment(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1936,
      "name": "equals",
      "type": "inside_payment.entity.Balance",
      "flags": "p",
      "display": "i.e.B.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "98f729328514860f1a8251c027ffb113c9141dd69cc1dec0e87715c9fe3e95d6",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/boolean inside_payment.entity.Balance.equals(java.lang.Object)"
    },
    {
      "id": 1937,
      "name": "hashCode",
      "type": "inside_payment.entity.Balance",
      "flags": "p",
      "display": "i.e.B.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "e14c77f74340b3b22da2bffa21e44bf1d6cedd8f448f6396e4f2c313c285a5df",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/int inside_payment.entity.Balance.hashCode(empty)"
    },
    {
      "id": 1938,
      "name": "toString",
      "type": "inside_payment.entity.Balance",
      "flags": "p",
      "display": "i.e.B.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "2847c2cbee7fe62d3671376bdbfe8ca4720d59bebdee7a6d1e051a8b80b24474",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.Balance.toString(empty)"
    },
    {
      "id": 1939,
      "name": "equals",
      "type": "inside_payment.entity.Money",
      "flags": "p",
      "display": "i.e.M.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "6709d7bcdff971cbcb1f0e64a3d8fea39b072d0adf1671ec25a93ca919d6ac4d",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/boolean inside_payment.entity.Money.equals(java.lang.Object)"
    },
    {
      "id": 1940,
      "name": "hashCode",
      "type": "inside_payment.entity.Money",
      "flags": "p",
      "display": "i.e.M.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "863eaebf4aa8dcffabcdbde9f1fb066fcfaf2204787efa05866318da4abcb7e7",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/int inside_payment.entity.Money.hashCode(empty)"
    },
    {
      "id": 1941,
      "name": "toString",
      "type": "inside_payment.entity.Money",
      "flags": "p",
      "display": "i.e.M.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "886ba25e39bd696174c9a6baeda5268d5daaca013be8f8f8d4bce2c2ecd67bc0",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.toString(empty)"
    },
    {
      "id": 1942,
      "name": "values",
      "type": "inside_payment.entity.MoneyType",
      "flags": "ps",
      "display": "i.e.MT.values",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "inside_payment.entity.MoneyType[]",
      "endpointURI": null,
      "bytecodeHash": "ef1add85a1bde33b510a99d4239c24e4c20d3e7c7fe0258adddab6e2834b3669",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/inside_payment.entity.MoneyType[] inside_payment.entity.MoneyType.values(empty)"
    },
    {
      "id": 1943,
      "name": "equals",
      "type": "inside_payment.entity.Payment",
      "flags": "p",
      "display": "i.e.P.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "6dc11a9795938464e5b02ef0ff1da0c6c2f30939e4803648037f08a9c4527186",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/boolean inside_payment.entity.Payment.equals(java.lang.Object)"
    },
    {
      "id": 1944,
      "name": "hashCode",
      "type": "inside_payment.entity.Payment",
      "flags": "p",
      "display": "i.e.P.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "8b6abdc790d891abe4f6ea5d5339de79f89ffebec46143491a4404288186cbaa",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/int inside_payment.entity.Payment.hashCode(empty)"
    },
    {
      "id": 1945,
      "name": "toString",
      "type": "inside_payment.entity.Payment",
      "flags": "p",
      "display": "i.e.P.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "577f90827244e2399bfafab347e7f095f4908cb869c2fbc88168ce2ba305d39f",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.toString(empty)"
    },
    {
      "id": 1946,
      "name": "values",
      "type": "inside_payment.entity.PaymentType",
      "flags": "ps",
      "display": "i.e.PT.values",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "inside_payment.entity.PaymentType[]",
      "endpointURI": null,
      "bytecodeHash": "2d9fe4dae7793bb5addf4680279c3d124dee96726ae42caf7e673dc353d907cb",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/inside_payment.entity.PaymentType[] inside_payment.entity.PaymentType.values(empty)"
    },
    {
      "id": 1947,
      "name": "<clinit>",
      "type": "inside_payment.service.InsidePaymentServiceImpl",
      "flags": "s",
      "display": "i.s.IPSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "d873dff449578dec254b960737883e030b916509f73abd6f60295b84fa06352b",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/void inside_payment.service.InsidePaymentServiceImpl.<clinit>(empty)"
    },
    {
      "id": 40604,
      "name": "addMoney",
      "type": "inside_payment.service.InsidePaymentService",
      "flags": "pa",
      "display": "i.s.IPS.addMoney",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentService.addMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40605,
      "name": "findByUserId",
      "type": "inside_payment.repository.AddMoneyRepository",
      "flags": "pa",
      "display": "i.r.AMR.findByUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.util.List inside_payment.repository.AddMoneyRepository.findByUserId(java.lang.String)"
    },
    {
      "id": 40606,
      "name": "save",
      "type": "inside_payment.repository.AddMoneyRepository",
      "flags": "pby",
      "display": "i.r.AMR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "c560241d6b150f58add354ac59f293a308b9227955dd661bb9f995b35777ce5b",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.Object inside_payment.repository.AddMoneyRepository.save(java.lang.Object)"
    },
    {
      "id": 40610,
      "name": "createAccount",
      "type": "inside_payment.service.InsidePaymentService",
      "flags": "pa",
      "display": "i.s.IPS.createAccount",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "inside_payment.entity.AccountInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentService.createAccount(inside_payment.entity.AccountInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40611,
      "name": "getUserId",
      "type": "inside_payment.entity.AccountInfo",
      "flags": "p",
      "display": "i.e.AI.getUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.AccountInfo.getUserId(empty)"
    },
    {
      "id": 40612,
      "name": "getMoney",
      "type": "inside_payment.entity.AccountInfo",
      "flags": "p",
      "display": "i.e.AI.getMoney",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.AccountInfo.getMoney(empty)"
    },
    {
      "id": 40613,
      "name": "drawBack",
      "type": "inside_payment.service.InsidePaymentService",
      "flags": "pa",
      "display": "i.s.IPS.drawBack",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentService.drawBack(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40614,
      "name": "getOrderId",
      "type": "inside_payment.entity.PaymentInfo",
      "flags": "p",
      "display": "i.e.PI.getOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.PaymentInfo.getOrderId(empty)"
    },
    {
      "id": 40615,
      "name": "pay",
      "type": "inside_payment.service.InsidePaymentService",
      "flags": "pa",
      "display": "i.s.IPS.pay",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "inside_payment.entity.PaymentInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentService.pay(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40616,
      "name": "getUserId",
      "type": "inside_payment.entity.PaymentInfo",
      "flags": "p",
      "display": "i.e.PI.getUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.PaymentInfo.getUserId(empty)"
    },
    {
      "id": 40617,
      "name": "getTripId",
      "type": "inside_payment.entity.PaymentInfo",
      "flags": "p",
      "display": "i.e.PI.getTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.PaymentInfo.getTripId(empty)"
    },
    {
      "id": 40622,
      "name": "findByUserId",
      "type": "inside_payment.repository.PaymentRepository",
      "flags": "pa",
      "display": "i.r.PR.findByUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.util.List inside_payment.repository.PaymentRepository.findByUserId(java.lang.String)"
    },
    {
      "id": 40625,
      "name": "save",
      "type": "inside_payment.repository.PaymentRepository",
      "flags": "pby",
      "display": "i.r.PR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "5b89d8f0d15890aa7b874678d98616567d438e3f1e520229acc123f22d7d8f5e",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.Object inside_payment.repository.PaymentRepository.save(java.lang.Object)"
    },
    {
      "id": 40627,
      "name": "payDifference",
      "type": "inside_payment.service.InsidePaymentService",
      "flags": "pa",
      "display": "i.s.IPS.payDifference",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "inside_payment.entity.PaymentInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentService.payDifference(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40628,
      "name": "getPrice",
      "type": "inside_payment.entity.PaymentInfo",
      "flags": "p",
      "display": "i.e.PI.getPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.PaymentInfo.getPrice(empty)"
    },
    {
      "id": 40629,
      "name": "queryAccount",
      "type": "inside_payment.service.InsidePaymentService",
      "flags": "pa",
      "display": "i.s.IPS.queryAccount",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentService.queryAccount(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40630,
      "name": "findAll",
      "type": "inside_payment.repository.AddMoneyRepository",
      "flags": "pa",
      "display": "i.r.AMR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.util.List inside_payment.repository.AddMoneyRepository.findAll(empty)"
    },
    {
      "id": 40631,
      "name": "queryAddMoney",
      "type": "inside_payment.service.InsidePaymentService",
      "flags": "pa",
      "display": "i.s.IPS.queryAddMoney",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentService.queryAddMoney(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40633,
      "name": "queryPayment",
      "type": "inside_payment.service.InsidePaymentService",
      "flags": "pa",
      "display": "i.s.IPS.queryPayment",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentService.queryPayment(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40634,
      "name": "findAll",
      "type": "inside_payment.repository.PaymentRepository",
      "flags": "pa",
      "display": "i.r.PR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.util.List inside_payment.repository.PaymentRepository.findAll(empty)"
    },
    {
      "id": 8157,
      "name": "addMoney",
      "type": "inside_payment.service.InsidePaymentServiceImpl",
      "flags": "p",
      "display": "i.s.IPSI.addMoney",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "7aa74175aba453d35b8cda1966e3d56b456f5813e1bfb60665381337ed5cf959",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.addMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8162,
      "name": "createAccount",
      "type": "inside_payment.service.InsidePaymentServiceImpl",
      "flags": "p",
      "display": "i.s.IPSI.createAccount",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "inside_payment.entity.AccountInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "12e254c78e9f22dce68b8482db9d87c6af6c6d6ea1a02577ccbef2cb97ce4be2",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.createAccount(inside_payment.entity.AccountInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8163,
      "name": "drawBack",
      "type": "inside_payment.service.InsidePaymentServiceImpl",
      "flags": "p",
      "display": "i.s.IPSI.drawBack",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "3457b3a50a147bde7e0ca143360e42d8c37c8eb98f16ee5d89ba9cb701887f35",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.drawBack(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8164,
      "name": "pay",
      "type": "inside_payment.service.InsidePaymentServiceImpl",
      "flags": "p",
      "display": "i.s.IPSI.pay",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "inside_payment.entity.PaymentInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "f5ba9519cd835568c50fab5bbf3ab2cd341e262c6e0f7138e07f9c067bd3febe",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.pay(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11750,
      "name": "<init>",
      "type": "inside_payment.entity.Money",
      "flags": "p",
      "display": "i.e.M.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "46638dd8c0fb0c4adfbb093750043977b1c834d8bf570aa17801d234b3eb6f39",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/void inside_payment.entity.Money.<init>(empty)"
    },
    {
      "id": 8168,
      "name": "payDifference",
      "type": "inside_payment.service.InsidePaymentServiceImpl",
      "flags": "p",
      "display": "i.s.IPSI.payDifference",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "inside_payment.entity.PaymentInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "a3742bc0bc7e0f3f9b581ea0e662bc8f7b6b412fbb6d8aa31dfb0fe176c05994",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.payDifference(inside_payment.entity.PaymentInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8169,
      "name": "queryAccount",
      "type": "inside_payment.service.InsidePaymentServiceImpl",
      "flags": "p",
      "display": "i.s.IPSI.queryAccount",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "a3d951208df70ddf0d4c751b73b522666477c6b2c8800893d7b2096671358f25",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.queryAccount(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8170,
      "name": "queryAddMoney",
      "type": "inside_payment.service.InsidePaymentServiceImpl",
      "flags": "p",
      "display": "i.s.IPSI.queryAddMoney",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "5e386c9236930edf1931658daf6081151c5aa9d73858b1edbd531972235c58e8",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.queryAddMoney(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8171,
      "name": "queryPayment",
      "type": "inside_payment.service.InsidePaymentServiceImpl",
      "flags": "p",
      "display": "i.s.IPSI.queryPayment",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "8e0b5e3822ebe553455675d2b58ff103a305f4301f8e8cba479c7e991390dd93",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.queryPayment(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8172,
      "name": "canEqual",
      "type": "inside_payment.entity.Balance",
      "flags": "d",
      "display": "i.e.B.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "71fde991d4816f8c723b072930331723ecd9a4f661c8f4317d57b676fb65167a",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/boolean inside_payment.entity.Balance.canEqual(java.lang.Object)"
    },
    {
      "id": 8173,
      "name": "getUserId",
      "type": "inside_payment.entity.Balance",
      "flags": "p",
      "display": "i.e.B.getUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.Balance.getUserId(empty)"
    },
    {
      "id": 8174,
      "name": "getBalance",
      "type": "inside_payment.entity.Balance",
      "flags": "p",
      "display": "i.e.B.getBalance",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.Balance.getBalance(empty)"
    },
    {
      "id": 8175,
      "name": "canEqual",
      "type": "inside_payment.entity.Money",
      "flags": "d",
      "display": "i.e.M.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "71fde991d4816f8c723b072930331723ecd9a4f661c8f4317d57b676fb65167a",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/boolean inside_payment.entity.Money.canEqual(java.lang.Object)"
    },
    {
      "id": 11759,
      "name": "getServiceUrl",
      "type": "inside_payment.service.InsidePaymentServiceImpl",
      "flags": "P",
      "display": "i.s.IPSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4c9cdca9114d46d9b6782076a5fcdd786861a709d13bfd695ca633cdf0ab0f00",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.service.InsidePaymentServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 8176,
      "name": "getId",
      "type": "inside_payment.entity.Money",
      "flags": "p",
      "display": "i.e.M.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.getId(empty)"
    },
    {
      "id": 11760,
      "name": "<init>",
      "type": "inside_payment.service.InsidePaymentServiceImpl$1",
      "flags": "",
      "display": "i.s.IPSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["inside_payment.service.InsidePaymentServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/void inside_payment.service.InsidePaymentServiceImpl$1.<init>(inside_payment.service.InsidePaymentServiceImpl)"
    },
    {
      "id": 8177,
      "name": "getUserId",
      "type": "inside_payment.entity.Money",
      "flags": "p",
      "display": "i.e.M.getUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.getUserId(empty)"
    },
    {
      "id": 8178,
      "name": "getMoney",
      "type": "inside_payment.entity.Money",
      "flags": "p",
      "display": "i.e.M.getMoney",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.Money.getMoney(empty)"
    },
    {
      "id": 8179,
      "name": "getType",
      "type": "inside_payment.entity.Money",
      "flags": "p",
      "display": "i.e.M.getType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "inside_payment.entity.MoneyType",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/inside_payment.entity.MoneyType inside_payment.entity.Money.getType(empty)"
    },
    {
      "id": 8180,
      "name": "canEqual",
      "type": "inside_payment.entity.Payment",
      "flags": "d",
      "display": "i.e.P.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "71fde991d4816f8c723b072930331723ecd9a4f661c8f4317d57b676fb65167a",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/boolean inside_payment.entity.Payment.canEqual(java.lang.Object)"
    },
    {
      "id": 11764,
      "name": "<init>",
      "type": "inside_payment.entity.Payment",
      "flags": "p",
      "display": "i.e.P.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "8145ef7cd90620e5b837a9efc827fac7ae64ad643dc41b28297ab553af3bebc3",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/void inside_payment.entity.Payment.<init>(empty)"
    },
    {
      "id": 8181,
      "name": "getId",
      "type": "inside_payment.entity.Payment",
      "flags": "p",
      "display": "i.e.P.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getId(empty)"
    },
    {
      "id": 8182,
      "name": "getOrderId",
      "type": "inside_payment.entity.Payment",
      "flags": "p",
      "display": "i.e.P.getOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getOrderId(empty)"
    },
    {
      "id": 8183,
      "name": "getUserId",
      "type": "inside_payment.entity.Payment",
      "flags": "p",
      "display": "i.e.P.getUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getUserId(empty)"
    },
    {
      "id": 8184,
      "name": "getPrice",
      "type": "inside_payment.entity.Payment",
      "flags": "p",
      "display": "i.e.P.getPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/java.lang.String inside_payment.entity.Payment.getPrice(empty)"
    },
    {
      "id": 11768,
      "name": "setOrderStatus",
      "type": "inside_payment.service.InsidePaymentServiceImpl",
      "flags": "P",
      "display": "i.s.IPSI.setOrderStatus",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "d29dc79f8136fee6d22e966d1dbdd26ed65620794510502ca3e1dd29c8adc600",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/edu.fudan.common.util.Response inside_payment.service.InsidePaymentServiceImpl.setOrderStatus(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8185,
      "name": "getType",
      "type": "inside_payment.entity.Payment",
      "flags": "p",
      "display": "i.e.P.getType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "inside_payment.entity.PaymentType",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/inside_payment.entity.PaymentType inside_payment.entity.Payment.getType(empty)"
    },
    {
      "id": 11772,
      "name": "<init>",
      "type": "inside_payment.entity.Balance",
      "flags": "p",
      "display": "i.e.B.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "46638dd8c0fb0c4adfbb093750043977b1c834d8bf570aa17801d234b3eb6f39",
      "microservice": "ts-inside-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-inside-payment-service/void inside_payment.entity.Balance.<init>(empty)"
    },
    {
      "id": 9600,
      "name": "getMailCc",
      "type": "notification.entity.Mail",
      "flags": "p",
      "display": "n.e.M.getMailCc",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.Mail.getMailCc(empty)"
    },
    {
      "id": 9601,
      "name": "getMailBcc",
      "type": "notification.entity.Mail",
      "flags": "p",
      "display": "n.e.M.getMailBcc",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.Mail.getMailBcc(empty)"
    },
    {
      "id": 9602,
      "name": "getMailSubject",
      "type": "notification.entity.Mail",
      "flags": "p",
      "display": "n.e.M.getMailSubject",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.Mail.getMailSubject(empty)"
    },
    {
      "id": 9603,
      "name": "getMailContent",
      "type": "notification.entity.Mail",
      "flags": "p",
      "display": "n.e.M.getMailContent",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "668501b084f2dc96265ceb4e39579391868136fffaeab12c3f93e3c91daee2e4",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.Mail.getMailContent(empty)"
    },
    {
      "id": 9604,
      "name": "getContentType",
      "type": "notification.entity.Mail",
      "flags": "p",
      "display": "n.e.M.getContentType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.Mail.getContentType(empty)"
    },
    {
      "id": 9605,
      "name": "getAttachments",
      "type": "notification.entity.Mail",
      "flags": "p",
      "display": "n.e.M.getAttachments",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "5fa52bee8d9ecaf9cc0dbb511c90d8e27e9656598177b730ca11725ba9764f76",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.util.List notification.entity.Mail.getAttachments(empty)"
    },
    {
      "id": 9606,
      "name": "getModel",
      "type": "notification.entity.Mail",
      "flags": "p",
      "display": "n.e.M.getModel",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.Map",
      "endpointURI": null,
      "bytecodeHash": "b2e08cdc9daefc1804beba6325d79da5b11a0f54acbfd4dd233b1c223b1821c6",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.util.Map notification.entity.Mail.getModel(empty)"
    },
    {
      "id": 9607,
      "name": "canEqual",
      "type": "notification.entity.NotifyInfo",
      "flags": "d",
      "display": "n.e.NI.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/boolean notification.entity.NotifyInfo.canEqual(java.lang.Object)"
    },
    {
      "id": 9608,
      "name": "getSendStatus",
      "type": "notification.entity.NotifyInfo",
      "flags": "p",
      "display": "n.e.NI.getSendStatus",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.Boolean",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.Boolean notification.entity.NotifyInfo.getSendStatus(empty)"
    },
    {
      "id": 9609,
      "name": "getId",
      "type": "notification.entity.NotifyInfo",
      "flags": "p",
      "display": "n.e.NI.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getId(empty)"
    },
    {
      "id": 9610,
      "name": "getEmail",
      "type": "notification.entity.NotifyInfo",
      "flags": "p",
      "display": "n.e.NI.getEmail",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEmail(empty)"
    },
    {
      "id": 9611,
      "name": "getOrderNumber",
      "type": "notification.entity.NotifyInfo",
      "flags": "p",
      "display": "n.e.NI.getOrderNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getOrderNumber(empty)"
    },
    {
      "id": 9612,
      "name": "getUsername",
      "type": "notification.entity.NotifyInfo",
      "flags": "p",
      "display": "n.e.NI.getUsername",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getUsername(empty)"
    },
    {
      "id": 9613,
      "name": "getStartPlace",
      "type": "notification.entity.NotifyInfo",
      "flags": "p",
      "display": "n.e.NI.getStartPlace",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getStartPlace(empty)"
    },
    {
      "id": 9614,
      "name": "getEndPlace",
      "type": "notification.entity.NotifyInfo",
      "flags": "p",
      "display": "n.e.NI.getEndPlace",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "668501b084f2dc96265ceb4e39579391868136fffaeab12c3f93e3c91daee2e4",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getEndPlace(empty)"
    },
    {
      "id": 9615,
      "name": "getStartTime",
      "type": "notification.entity.NotifyInfo",
      "flags": "p",
      "display": "n.e.NI.getStartTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "5fa52bee8d9ecaf9cc0dbb511c90d8e27e9656598177b730ca11725ba9764f76",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getStartTime(empty)"
    },
    {
      "id": 9616,
      "name": "getDate",
      "type": "notification.entity.NotifyInfo",
      "flags": "p",
      "display": "n.e.NI.getDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "b2e08cdc9daefc1804beba6325d79da5b11a0f54acbfd4dd233b1c223b1821c6",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getDate(empty)"
    },
    {
      "id": 9617,
      "name": "getSeatClass",
      "type": "notification.entity.NotifyInfo",
      "flags": "p",
      "display": "n.e.NI.getSeatClass",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "82ee7056b04c640a38c7cc175235331dde4a32bc219c075e81f79d2aaa90b4db",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getSeatClass(empty)"
    },
    {
      "id": 9618,
      "name": "getSeatNumber",
      "type": "notification.entity.NotifyInfo",
      "flags": "p",
      "display": "n.e.NI.getSeatNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8147cff25932a21b9f3fd88c09486c0907181365574bf2fabbe0ffbdb9e6a923",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getSeatNumber(empty)"
    },
    {
      "id": 9619,
      "name": "getPrice",
      "type": "notification.entity.NotifyInfo",
      "flags": "p",
      "display": "n.e.NI.getPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "0282736b001c184934bad7b700477e9fe30eb3584aa4b9c01483e925173a877c",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.getPrice(empty)"
    },
    {
      "id": 41110,
      "name": "orderChangedSuccess",
      "type": "notification.service.NotificationService",
      "flags": "pa",
      "display": "n.s.NS.orderChangedSuccess",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "notification.entity.NotifyInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/boolean notification.service.NotificationService.orderChangedSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41111,
      "name": "orderCreateSuccess",
      "type": "notification.service.NotificationService",
      "flags": "pa",
      "display": "n.s.NS.orderCreateSuccess",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "notification.entity.NotifyInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/boolean notification.service.NotificationService.orderCreateSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41112,
      "name": "preserveSuccess",
      "type": "notification.service.NotificationService",
      "flags": "pa",
      "display": "n.s.NS.preserveSuccess",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "notification.entity.NotifyInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/boolean notification.service.NotificationService.preserveSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41113,
      "name": "send",
      "type": "notification.mq.RabbitSend",
      "flags": "p",
      "display": "n.m.RS.send",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "0eb6b1114ff28cb16bfa1bd1527ab48390104bc9f28fa0ecf5faaa1e1e3295b8",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/void notification.mq.RabbitSend.send(java.lang.String)"
    },
    {
      "id": 4773,
      "name": "home",
      "type": "notification.controller.NotificationController",
      "flags": "p",
      "display": "n.c.NC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.controller.NotificationController.home(empty)"
    },
    {
      "id": 4774,
      "name": "order_cancel_success",
      "type": "notification.controller.NotificationController",
      "flags": "p",
      "display": "n.c.NC.order_cancel_success",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "notification.entity.NotifyInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": "/api/v1/notifyservice/notification/order_cancel_success",
      "bytecodeHash": "7f88f2f15960437f20467fc342cdcb9a2d9ee298e02397e8e7a322331200d7cd",
      "microservice": "ts-notification-service",
      "endpointMethod": true,
      "methodSignature": "ts-notification-service/boolean notification.controller.NotificationController.order_cancel_success(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4775,
      "name": "order_changed_success",
      "type": "notification.controller.NotificationController",
      "flags": "p",
      "display": "n.c.NC.order_changed_success",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "notification.entity.NotifyInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": "/api/v1/notifyservice/notification/order_changed_success",
      "bytecodeHash": "445f2e41c4795e7d5b24e5eb4eb9c786f61281d8d2ea2e8d451398563680e883",
      "microservice": "ts-notification-service",
      "endpointMethod": true,
      "methodSignature": "ts-notification-service/boolean notification.controller.NotificationController.order_changed_success(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4776,
      "name": "order_create_success",
      "type": "notification.controller.NotificationController",
      "flags": "p",
      "display": "n.c.NC.order_create_success",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "notification.entity.NotifyInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": "/api/v1/notifyservice/notification/order_create_success",
      "bytecodeHash": "2e698a05c15ba3b01b60a63c1101a08d6f095c95523f25fc01732ad72e9321ac",
      "microservice": "ts-notification-service",
      "endpointMethod": true,
      "methodSignature": "ts-notification-service/boolean notification.controller.NotificationController.order_create_success(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4777,
      "name": "preserve_success",
      "type": "notification.controller.NotificationController",
      "flags": "p",
      "display": "n.c.NC.preserve_success",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "notification.entity.NotifyInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": "/api/v1/notifyservice/notification/preserve_success",
      "bytecodeHash": "347358d213b4758212b5e3cae6ed6880ef480f3d4f3e3e0dfa261edab8d60107",
      "microservice": "ts-notification-service",
      "endpointMethod": true,
      "methodSignature": "ts-notification-service/boolean notification.controller.NotificationController.preserve_success(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4778,
      "name": "test_send",
      "type": "notification.controller.NotificationController",
      "flags": "p",
      "display": "n.c.NC.test_send",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "6958a9c79f034549f59d213107524a05bf4acda1b3a7ea2cf698080ef468dbf8",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/boolean notification.controller.NotificationController.test_send(empty)"
    },
    {
      "id": 4779,
      "name": "test_send_mail",
      "type": "notification.controller.NotificationController",
      "flags": "p",
      "display": "n.c.NC.test_send_mail",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "c1b53fab57fea59dfa0b6e8524b896b1d65d0eb3aff7a4e7f9c5528e582b40e2",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/boolean notification.controller.NotificationController.test_send_mail(empty)"
    },
    {
      "id": 4780,
      "name": "equals",
      "type": "notification.entity.Mail",
      "flags": "p",
      "display": "n.e.M.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "ab3563b368f62c2bd98f0d83b73b1335caac3a851bf083351c0e9fe70d246e01",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/boolean notification.entity.Mail.equals(java.lang.Object)"
    },
    {
      "id": 4781,
      "name": "hashCode",
      "type": "notification.entity.Mail",
      "flags": "p",
      "display": "n.e.M.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "91d3c0f50874869238c58d0c1aa21cf2a7c2ff76fd9e78c1bf2714c0903c7125",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/int notification.entity.Mail.hashCode(empty)"
    },
    {
      "id": 4782,
      "name": "toString",
      "type": "notification.entity.Mail",
      "flags": "p",
      "display": "n.e.M.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d2482a65c6099e67d43f4484c3e403e09975b978011ea3f80e6c25a0692c8ff2",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.Mail.toString(empty)"
    },
    {
      "id": 4783,
      "name": "equals",
      "type": "notification.entity.NotifyInfo",
      "flags": "p",
      "display": "n.e.NI.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "fdb4c60eeeda0e3c3b3b975e8058f2c5e9cacb4c2944daeb45b9ce06c4bdc36d",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/boolean notification.entity.NotifyInfo.equals(java.lang.Object)"
    },
    {
      "id": 4784,
      "name": "hashCode",
      "type": "notification.entity.NotifyInfo",
      "flags": "p",
      "display": "n.e.NI.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "a828d87392aafbbefce8a897e330a9807ed56162c5ba10eb436c053d3ab4099f",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/int notification.entity.NotifyInfo.hashCode(empty)"
    },
    {
      "id": 4785,
      "name": "toString",
      "type": "notification.entity.NotifyInfo",
      "flags": "p",
      "display": "n.e.NI.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "b3ee0c9a8805e06f5a42a63843260ff50981c36ca30b77b28a7aed4dd16af059",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.NotifyInfo.toString(empty)"
    },
    {
      "id": 4786,
      "name": "<clinit>",
      "type": "notification.mq.RabbitReceive",
      "flags": "s",
      "display": "n.m.RR.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "97cf04d655c1131022a0cadcabe5951db22b2b2ed32adbb486605437d59f4936",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/void notification.mq.RabbitReceive.<clinit>(empty)"
    },
    {
      "id": 4787,
      "name": "<clinit>",
      "type": "notification.mq.RabbitSend",
      "flags": "s",
      "display": "n.m.RS.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "5ed93b7bfe7646299f400d634a5e350f135e5e7cf238b5bd9511b50b5bbc77fb",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/void notification.mq.RabbitSend.<clinit>(empty)"
    },
    {
      "id": 4788,
      "name": "<clinit>",
      "type": "notification.service.NotificationServiceImpl",
      "flags": "s",
      "display": "n.s.NSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "cf00a2f469b7b1caa3af89c8ac436612011a0b864c33568529e3871805017653",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/void notification.service.NotificationServiceImpl.<clinit>(empty)"
    },
    {
      "id": 9593,
      "name": "orderCancelSuccess",
      "type": "notification.service.NotificationServiceImpl",
      "flags": "p",
      "display": "n.s.NSI.orderCancelSuccess",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "notification.entity.NotifyInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "a449781b01742ae243ae042c0a4ae4ee5f77594e989c26c75db7a760688fd76d",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderCancelSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 9594,
      "name": "orderChangedSuccess",
      "type": "notification.service.NotificationServiceImpl",
      "flags": "p",
      "display": "n.s.NSI.orderChangedSuccess",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "notification.entity.NotifyInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "6088cada10a4d515ea818cc0acafb68ef0ed1598814dd71b974740b2ebd56636",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderChangedSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 9595,
      "name": "orderCreateSuccess",
      "type": "notification.service.NotificationServiceImpl",
      "flags": "p",
      "display": "n.s.NSI.orderCreateSuccess",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "notification.entity.NotifyInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "ed3f4b15c865498e712fa3aacf500e98da77f2eda0e3b2436a4fd314defbcfe3",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/boolean notification.service.NotificationServiceImpl.orderCreateSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 9596,
      "name": "preserveSuccess",
      "type": "notification.service.NotificationServiceImpl",
      "flags": "p",
      "display": "n.s.NSI.preserveSuccess",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "notification.entity.NotifyInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "954bd6d4e118d232c331388b8f41955ae20672f7ad37a25ed57de9b9aa4c208e",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/boolean notification.service.NotificationServiceImpl.preserveSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41084,
      "name": "orderCancelSuccess",
      "type": "notification.service.NotificationService",
      "flags": "pa",
      "display": "n.s.NS.orderCancelSuccess",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "notification.entity.NotifyInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/boolean notification.service.NotificationService.orderCancelSuccess(notification.entity.NotifyInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 9597,
      "name": "canEqual",
      "type": "notification.entity.Mail",
      "flags": "d",
      "display": "n.e.M.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "71fde991d4816f8c723b072930331723ecd9a4f661c8f4317d57b676fb65167a",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/boolean notification.entity.Mail.canEqual(java.lang.Object)"
    },
    {
      "id": 41085,
      "name": "sendEmail",
      "type": "notification.service.MailService",
      "flags": "p",
      "display": "n.s.MS.sendEmail",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["notification.entity.Mail", "java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "38ab31284f0bf675213f2274839580548b6d1195fa630d3c2d71ebc4d4e4f98f",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/void notification.service.MailService.sendEmail(notification.entity.Mail, java.lang.String)"
    },
    {
      "id": 9598,
      "name": "getMailFrom",
      "type": "notification.entity.Mail",
      "flags": "p",
      "display": "n.e.M.getMailFrom",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.Mail.getMailFrom(empty)"
    },
    {
      "id": 9599,
      "name": "getMailTo",
      "type": "notification.entity.Mail",
      "flags": "p",
      "display": "n.e.M.getMailTo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-notification-service",
      "endpointMethod": false,
      "methodSignature": "ts-notification-service/java.lang.String notification.entity.Mail.getMailTo(empty)"
    },
    {
      "id": 42240,
      "name": "findByAccountId",
      "type": "other.repository.OrderOtherRepository",
      "flags": "pa",
      "display": "o.r.OOR.findByAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.util.ArrayList other.repository.OrderOtherRepository.findByAccountId(java.lang.String)"
    },
    {
      "id": 42242,
      "name": "setId",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.setId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "0718bdd09ca177d9675fe89d4eb72c4983a83155bc703e3b4b87b2f1a3784fbb",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.entity.Order.setId(java.lang.String)"
    },
    {
      "id": 42243,
      "name": "save",
      "type": "other.repository.OrderOtherRepository",
      "flags": "pby",
      "display": "o.r.OOR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "0cc8b3987b55efab526c214afccf37f6be777b02f3cacbc901dd4acf8747f5f0",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.Object other.repository.OrderOtherRepository.save(java.lang.Object)"
    },
    {
      "id": 42244,
      "name": "getPrice",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.getPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "81c401d3b165002f08397c47f28abed78c3b534f9c49837b7bc8614c63222be8",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.Order.getPrice(empty)"
    },
    {
      "id": 42252,
      "name": "queryAlreadySoldOrders",
      "type": "other.service.OrderOtherService",
      "flags": "pa",
      "display": "o.s.OOS.queryAlreadySoldOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.Date",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherService.queryAlreadySoldOrders(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42253,
      "name": "findByTravelDateAndTrainNumber",
      "type": "other.repository.OrderOtherRepository",
      "flags": "pa",
      "display": "o.r.OOR.findByTravelDateAndTrainNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String", "java.lang.String"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.util.ArrayList other.repository.OrderOtherRepository.findByTravelDateAndTrainNumber(java.lang.String, java.lang.String)"
    },
    {
      "id": 42254,
      "name": "getStatus",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.getStatus",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "e88f57acb743f9814252b0b6da76241e43852e726e8114d0947084449c5d49e9",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/int other.entity.Order.getStatus(empty)"
    },
    {
      "id": 42255,
      "name": "getSeatClass",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.getSeatClass",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "4fce3ac993307fea4f13f3b8101b4f9d26d1d5dcb8688de8f4b6d40580c02414",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/int other.entity.Order.getSeatClass(empty)"
    },
    {
      "id": 42256,
      "name": "getFrom",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.getFrom",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "0282736b001c184934bad7b700477e9fe30eb3584aa4b9c01483e925173a877c",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.Order.getFrom(empty)"
    },
    {
      "id": 6545,
      "name": "<clinit>",
      "type": "other.controller.OrderOtherController",
      "flags": "s",
      "display": "o.c.OOC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd644066246de131eb8bee812f2ace80f49d71bafe3d92fade0edd3c214420e7",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.controller.OrderOtherController.<clinit>(empty)"
    },
    {
      "id": 42257,
      "name": "getTo",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.getTo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d0cf9f922ab010f8c80625ee6685ff3cb0a085a2217bde1a5d580997c5014bcb",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.Order.getTo(empty)"
    },
    {
      "id": 6546,
      "name": "addcreateNewOrder",
      "type": "other.controller.OrderOtherController",
      "flags": "p",
      "display": "o.c.OOC.addcreateNewOrder",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "other.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderOtherService/orderOther/admin",
      "bytecodeHash": "194c6954a1293b9ac275a2c6b14e435a0308c6ed3f81d89734b261dfe2d76bed",
      "microservice": "ts-order-other-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.addcreateNewOrder(other.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42258,
      "name": "getTravelDate",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.getTravelDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.Order.getTravelDate(empty)"
    },
    {
      "id": 6547,
      "name": "calculateSoldTicket",
      "type": "other.controller.OrderOtherController",
      "flags": "p",
      "display": "o.c.OOC.calculateSoldTicket",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderOtherService/orderOther/{travelDate}/{trainNumber}",
      "bytecodeHash": "72daf91971d0a05260307348f9accd7b6470bec735509b2dd87d0a1e4181f47b",
      "microservice": "ts-order-other-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.calculateSoldTicket(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6548,
      "name": "createNewOrder",
      "type": "other.controller.OrderOtherController",
      "flags": "p",
      "display": "o.c.OOC.createNewOrder",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "other.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderOtherService/orderOther",
      "bytecodeHash": "fe276bf75216f3ecaa5889e1aa0640aa5e92a535657f9740a4ec5f9e025b7b80",
      "microservice": "ts-order-other-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.createNewOrder(other.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42260,
      "name": "create",
      "type": "other.service.OrderOtherService",
      "flags": "pa",
      "display": "o.s.OOS.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "other.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherService.create(other.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6549,
      "name": "deleteOrder",
      "type": "other.controller.OrderOtherController",
      "flags": "p",
      "display": "o.c.OOC.deleteOrder",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderOtherService/orderOther/{orderId}",
      "bytecodeHash": "70b9d570af2e9f4c7d23bb820ac48b777b1b2ccafb51b72588b86b33ba9d09c3",
      "microservice": "ts-order-other-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.deleteOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42261,
      "name": "deleteOrder",
      "type": "other.service.OrderOtherService",
      "flags": "pa",
      "display": "o.s.OOS.deleteOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherService.deleteOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6550,
      "name": "findAllOrder",
      "type": "other.controller.OrderOtherController",
      "flags": "p",
      "display": "o.c.OOC.findAllOrder",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderOtherService/orderOther",
      "bytecodeHash": "c93554f787dc5ce8958faaa83205bebf64f701d5d62ce2738eff852e0c10aa2d",
      "microservice": "ts-order-other-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.findAllOrder(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42262,
      "name": "findById",
      "type": "other.repository.OrderOtherRepository",
      "flags": "pa",
      "display": "o.r.OOR.findById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.Optional",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.util.Optional other.repository.OrderOtherRepository.findById(java.lang.String)"
    },
    {
      "id": 6551,
      "name": "getOrderById",
      "type": "other.controller.OrderOtherController",
      "flags": "p",
      "display": "o.c.OOC.getOrderById",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderOtherService/orderOther/{orderId}",
      "bytecodeHash": "dc6e997041c9362b4533b2f1e96191ee00149405a1e47caea720f769d3696c33",
      "microservice": "ts-order-other-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.getOrderById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42263,
      "name": "deleteById",
      "type": "other.repository.OrderOtherRepository",
      "flags": "pa",
      "display": "o.r.OOR.deleteById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.repository.OrderOtherRepository.deleteById(java.lang.String)"
    },
    {
      "id": 6552,
      "name": "getOrderPrice",
      "type": "other.controller.OrderOtherController",
      "flags": "p",
      "display": "o.c.OOC.getOrderPrice",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderOtherService/orderOther/price/{orderId}",
      "bytecodeHash": "ece75fdd003e394ad181ec32c1531c207f881a9a638bf0dbd963b51fbc875cc2",
      "microservice": "ts-order-other-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.getOrderPrice(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42264,
      "name": "getAllOrders",
      "type": "other.service.OrderOtherService",
      "flags": "pa",
      "display": "o.s.OOS.getAllOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherService.getAllOrders(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6553,
      "name": "getTicketListByDateAndTripId",
      "type": "other.controller.OrderOtherController",
      "flags": "p",
      "display": "o.c.OOC.getTicketListByDateAndTripId",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.Seat",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderOtherService/orderOther/tickets",
      "bytecodeHash": "6fbcc27593f69e9c5a19975b5825af6c2bf3368d6e69bc9ad05d5fd0d54e09d0",
      "microservice": "ts-order-other-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.getTicketListByDateAndTripId(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42265,
      "name": "findAll",
      "type": "other.repository.OrderOtherRepository",
      "flags": "pa",
      "display": "o.r.OOR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.util.ArrayList other.repository.OrderOtherRepository.findAll(empty)"
    },
    {
      "id": 6554,
      "name": "home",
      "type": "other.controller.OrderOtherController",
      "flags": "p",
      "display": "o.c.OOC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.controller.OrderOtherController.home(empty)"
    },
    {
      "id": 6555,
      "name": "modifyOrder",
      "type": "other.controller.OrderOtherController",
      "flags": "p",
      "display": "o.c.OOC.modifyOrder",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "int",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderOtherService/orderOther/status/{orderId}/{status}",
      "bytecodeHash": "49f7becf819acfac35f3b5f8615e4107c888bd85bc8cc872695d54ff76a0ce37",
      "microservice": "ts-order-other-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.modifyOrder(java.lang.String, int, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42267,
      "name": "getOrderById",
      "type": "other.service.OrderOtherService",
      "flags": "pa",
      "display": "o.s.OOS.getOrderById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherService.getOrderById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6556,
      "name": "payOrder",
      "type": "other.controller.OrderOtherController",
      "flags": "p",
      "display": "o.c.OOC.payOrder",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderOtherService/orderOther/orderPay/{orderId}",
      "bytecodeHash": "2595cc5684210933db8f968925c75a377ad59491508c90e191c2845c81c1d635",
      "microservice": "ts-order-other-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.payOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42268,
      "name": "getOrderPrice",
      "type": "other.service.OrderOtherService",
      "flags": "pa",
      "display": "o.s.OOS.getOrderPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherService.getOrderPrice(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6557,
      "name": "queryOrders",
      "type": "other.controller.OrderOtherController",
      "flags": "p",
      "display": "o.c.OOC.queryOrders",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "other.entity.QueryInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderOtherService/orderOther/query",
      "bytecodeHash": "d22139a2cb16248f99ca9eec1a4c996dd0c7f638c88cf415c9eb5c972d8a2277",
      "microservice": "ts-order-other-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.queryOrders(other.entity.QueryInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6558,
      "name": "queryOrdersForRefresh",
      "type": "other.controller.OrderOtherController",
      "flags": "p",
      "display": "o.c.OOC.queryOrdersForRefresh",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "other.entity.QueryInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderOtherService/orderOther/refresh",
      "bytecodeHash": "56c9c23ee3e4c80a60afceabfd01b97e03ed72e34ed769f8ce93f313026830c3",
      "microservice": "ts-order-other-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.queryOrdersForRefresh(other.entity.QueryInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42270,
      "name": "getSoldTickets",
      "type": "other.service.OrderOtherService",
      "flags": "pa",
      "display": "o.s.OOS.getSoldTickets",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Seat",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherService.getSoldTickets(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6559,
      "name": "saveOrderInfo",
      "type": "other.controller.OrderOtherController",
      "flags": "p",
      "display": "o.c.OOC.saveOrderInfo",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "other.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderOtherService/orderOther",
      "bytecodeHash": "3c062dc0f4fee4ace3506e8fe4e24d366158d0beac001643a391b8d076d39094",
      "microservice": "ts-order-other-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.saveOrderInfo(other.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6560,
      "name": "securityInfoCheck",
      "type": "other.controller.OrderOtherController",
      "flags": "p",
      "display": "o.c.OOC.securityInfoCheck",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderOtherService/orderOther/security/{checkDate}/{accountId}",
      "bytecodeHash": "4fbcf88937d6da5534f86f70c02d5419de9104fe88cd6382eb9d5d11d0fa4c22",
      "microservice": "ts-order-other-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.securityInfoCheck(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42272,
      "name": "getSeatNumber",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.getSeatNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8147cff25932a21b9f3fd88c09486c0907181365574bf2fabbe0ffbdb9e6a923",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.Order.getSeatNumber(empty)"
    },
    {
      "id": 6561,
      "name": "updateOrder",
      "type": "other.controller.OrderOtherController",
      "flags": "p",
      "display": "o.c.OOC.updateOrder",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "other.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderOtherService/orderOther/admin",
      "bytecodeHash": "19005299995e0fd8979d1d2d9c51cbe0ffbdc047d92cd22c04c547e423a57bc3",
      "microservice": "ts-order-other-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-other-service/org.springframework.http.HttpEntity other.controller.OrderOtherController.updateOrder(other.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6562,
      "name": "<clinit>",
      "type": "other.service.OrderOtherServiceImpl",
      "flags": "s",
      "display": "o.s.OOSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "3efd091cdd2d96cd55cb36611a9e2e7804d7a075fab505c484b4fdd47febf447",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.service.OrderOtherServiceImpl.<clinit>(empty)"
    },
    {
      "id": 42274,
      "name": "modifyOrder",
      "type": "other.service.OrderOtherService",
      "flags": "pa",
      "display": "o.s.OOS.modifyOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "int",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherService.modifyOrder(java.lang.String, int, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42275,
      "name": "setStatus",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.setStatus",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "a090c9f259dbb29e5de86248c5fcc724cb33fd7b8180414584fc289e0c599b27",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.entity.Order.setStatus(int)"
    },
    {
      "id": 42276,
      "name": "payOrder",
      "type": "other.service.OrderOtherService",
      "flags": "pa",
      "display": "o.s.OOS.payOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherService.payOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42277,
      "name": "getLoginId",
      "type": "other.entity.QueryInfo",
      "flags": "p",
      "display": "o.e.QI.getLoginId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "b2e08cdc9daefc1804beba6325d79da5b11a0f54acbfd4dd233b1c223b1821c6",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.QueryInfo.getLoginId(empty)"
    },
    {
      "id": 42278,
      "name": "queryOrders",
      "type": "other.service.OrderOtherService",
      "flags": "pa",
      "display": "o.s.OOS.queryOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "other.entity.QueryInfo",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherService.queryOrders(other.entity.QueryInfo, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42279,
      "name": "isEnableStateQuery",
      "type": "other.entity.QueryInfo",
      "flags": "p",
      "display": "o.e.QI.isEnableStateQuery",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "55c3aec14ab0022b0eee6c40b7da6cc9e9eefbc1127e154a35a5ad79427fd854",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/boolean other.entity.QueryInfo.isEnableStateQuery(empty)"
    },
    {
      "id": 42280,
      "name": "isEnableBoughtDateQuery",
      "type": "other.entity.QueryInfo",
      "flags": "p",
      "display": "o.e.QI.isEnableBoughtDateQuery",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "4dd1035ec1cdb196745dea2916d5c6e3af003ec14aa125cf9edf87088b1251af",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/boolean other.entity.QueryInfo.isEnableBoughtDateQuery(empty)"
    },
    {
      "id": 42281,
      "name": "isEnableTravelDateQuery",
      "type": "other.entity.QueryInfo",
      "flags": "p",
      "display": "o.e.QI.isEnableTravelDateQuery",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "9d5151d594e5413ba9d8d60f8eab5c37437fa4314a40019dd8ec798dae6b24e6",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/boolean other.entity.QueryInfo.isEnableTravelDateQuery(empty)"
    },
    {
      "id": 42282,
      "name": "getState",
      "type": "other.entity.QueryInfo",
      "flags": "p",
      "display": "o.e.QI.getState",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "a28e7b692c91b70e79af8e400c2e9b52bdbb4dceb93b8402f699cef2a52cf3aa",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/int other.entity.QueryInfo.getState(empty)"
    },
    {
      "id": 42283,
      "name": "getBoughtDate",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.getBoughtDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.Order.getBoughtDate(empty)"
    },
    {
      "id": 42284,
      "name": "getTravelDateEnd",
      "type": "other.entity.QueryInfo",
      "flags": "p",
      "display": "o.e.QI.getTravelDateEnd",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.QueryInfo.getTravelDateEnd(empty)"
    },
    {
      "id": 42285,
      "name": "getBoughtDateStart",
      "type": "other.entity.QueryInfo",
      "flags": "p",
      "display": "o.e.QI.getBoughtDateStart",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.QueryInfo.getBoughtDateStart(empty)"
    },
    {
      "id": 42286,
      "name": "getBoughtDateEnd",
      "type": "other.entity.QueryInfo",
      "flags": "p",
      "display": "o.e.QI.getBoughtDateEnd",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.QueryInfo.getBoughtDateEnd(empty)"
    },
    {
      "id": 42287,
      "name": "queryOrdersForRefresh",
      "type": "other.service.OrderOtherService",
      "flags": "pa",
      "display": "o.s.OOS.queryOrdersForRefresh",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "other.entity.QueryInfo",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherService.queryOrdersForRefresh(other.entity.QueryInfo, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42288,
      "name": "setFrom",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.setFrom",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "351e4151526ca3f9a50a82cb2419ff6265804f4471b94c2b05ef40c1aeda7b22",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.entity.Order.setFrom(java.lang.String)"
    },
    {
      "id": 42289,
      "name": "setTo",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.setTo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "b5c6632fdead94e6cf5d078f9da49015f7742cbf1bf22678e79eecefc50ff91a",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.entity.Order.setTo(java.lang.String)"
    },
    {
      "id": 42290,
      "name": "saveChanges",
      "type": "other.service.OrderOtherService",
      "flags": "pa",
      "display": "o.s.OOS.saveChanges",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "other.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherService.saveChanges(other.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42291,
      "name": "setAccountId",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.setAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "426ae263500f080b5cc781296359ccd73b815bb336a838d6718d26512d4563e5",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.entity.Order.setAccountId(java.lang.String)"
    },
    {
      "id": 42292,
      "name": "setBoughtDate",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.setBoughtDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1c059b5fe325fde7d43b063306b8ea508a338bafb0f3efc8a9c0b94e3f6e422c",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.entity.Order.setBoughtDate(java.lang.String)"
    },
    {
      "id": 42293,
      "name": "setTravelDate",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.setTravelDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "935836f6468fbbdce3aa550163b41db4acc66eaba962e885841470780dddd4d2",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.entity.Order.setTravelDate(java.lang.String)"
    },
    {
      "id": 42294,
      "name": "getTravelTime",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.getTravelTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "bc149cd245ca2c98020664c7cf3a3b0f9c0927b50df6a56a8d67de1a7e037964",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.Order.getTravelTime(empty)"
    },
    {
      "id": 42295,
      "name": "setTravelTime",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.setTravelTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "b12f88a7b7ff52e9ab9006d6e84a8337b222b27c05dd112598234076ab823e5d",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.entity.Order.setTravelTime(java.lang.String)"
    },
    {
      "id": 42296,
      "name": "setSeatClass",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.setSeatClass",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "e07b26bc84cb04399f939d9b1dcecf2d6e991d8f9d2200e8f6be20389f064821",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.entity.Order.setSeatClass(int)"
    },
    {
      "id": 42297,
      "name": "getCoachNumber",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.getCoachNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "55c3aec14ab0022b0eee6c40b7da6cc9e9eefbc1127e154a35a5ad79427fd854",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/int other.entity.Order.getCoachNumber(empty)"
    },
    {
      "id": 10298,
      "name": "addNewOrder",
      "type": "other.service.OrderOtherServiceImpl",
      "flags": "p",
      "display": "o.s.OOSI.addNewOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "other.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "9f4f79f9bef5441271a51d47e53e8b66e8037f5ee0b8b93d33a56864ed4807c1",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.addNewOrder(other.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42298,
      "name": "setCoachNumber",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.setCoachNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "dbf6b3f1c183e9edd237770d4eb6df9ed7c18a85984a7c8323f77292ccfa9f6f",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.entity.Order.setCoachNumber(int)"
    },
    {
      "id": 42299,
      "name": "setSeatNumber",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.setSeatNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "31aaee38ace5ee5e60a16dfda67e573c0bac2df9b69a2a5567cd9fdf37b96d9f",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.entity.Order.setSeatNumber(java.lang.String)"
    },
    {
      "id": 42300,
      "name": "getTrainNumber",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.getTrainNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.Order.getTrainNumber(empty)"
    },
    {
      "id": 42301,
      "name": "setTrainNumber",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.setTrainNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "48fb720aa2a9b68dfbb952c6e9e11d36348ceb48bf0fec91e3294ba5ac037a6d",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.entity.Order.setTrainNumber(java.lang.String)"
    },
    {
      "id": 42302,
      "name": "setPrice",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.setPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "9362ae82f726bdabf3d267cc2057ab90a0eeeaab22f188b80b0deaa0b102e602",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.entity.Order.setPrice(java.lang.String)"
    },
    {
      "id": 42303,
      "name": "getContactsName",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.getContactsName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "6cba6d2f6e2925f8e14d21afb10699d04d863cd842458a9c097cb81bd8339e3c",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.Order.getContactsName(empty)"
    },
    {
      "id": 10304,
      "name": "queryAlreadySoldOrders",
      "type": "other.service.OrderOtherServiceImpl",
      "flags": "p",
      "display": "o.s.OOSI.queryAlreadySoldOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.Date",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "026e198a78cbdff570d60848ea4fb5e62a59d2033f42ac42a150d6c30aa7fdc2",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.queryAlreadySoldOrders(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42304,
      "name": "setContactsName",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.setContactsName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "dfb2510a46310a07b2b85cca8155c7f5f427b719b005efe7d9cc5a60007db820",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.entity.Order.setContactsName(java.lang.String)"
    },
    {
      "id": 42305,
      "name": "getDocumentType",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.getDocumentType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "98f08abfaa5e29d510b4b9008b2c8103533d7c2b5ef5634014c88fff93542cf3",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/int other.entity.Order.getDocumentType(empty)"
    },
    {
      "id": 42306,
      "name": "setDocumentType",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.setDocumentType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "d58b1ae4635faa9a7e07d3613e91e9b19a6cdb1ccf078afc7a6c54e8336cd0db",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.entity.Order.setDocumentType(int)"
    },
    {
      "id": 42307,
      "name": "getContactsDocumentNumber",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.getContactsDocumentNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "b6c5333413de275b83a306f8cdb0edd20ab382691933972a56c5ec0d5d37d064",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.Order.getContactsDocumentNumber(empty)"
    },
    {
      "id": 10308,
      "name": "create",
      "type": "other.service.OrderOtherServiceImpl",
      "flags": "p",
      "display": "o.s.OOSI.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "other.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "24444a332ef9ea5fd0222d062f5f577aa64fff78ac6e1d7e7158f49a29d203d0",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.create(other.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42308,
      "name": "setContactsDocumentNumber",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.setContactsDocumentNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "b7b05e723824cfb5f3fdd117d4663e555274dd26e333a233a6967d5a6fc8e6ed",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/void other.entity.Order.setContactsDocumentNumber(java.lang.String)"
    },
    {
      "id": 10309,
      "name": "deleteOrder",
      "type": "other.service.OrderOtherServiceImpl",
      "flags": "p",
      "display": "o.s.OOSI.deleteOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "826225e032d303c078d5d39a82da678b1c9834fc6c9a7fa9b9d4f5233cf8dfb2",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.deleteOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42309,
      "name": "checkSecurityAboutOrder",
      "type": "other.service.OrderOtherService",
      "flags": "pa",
      "display": "o.s.OOS.checkSecurityAboutOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.Date",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherService.checkSecurityAboutOrder(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42311,
      "name": "updateOrder",
      "type": "other.service.OrderOtherService",
      "flags": "pa",
      "display": "o.s.OOS.updateOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "other.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherService.updateOrder(other.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42312,
      "name": "toString",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "afc61e0ac7ed17a103f7013e364c213548a09d13c0dfb092a3d636487d5edeb5",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.Order.toString(empty)"
    },
    {
      "id": 10313,
      "name": "getAllOrders",
      "type": "other.service.OrderOtherServiceImpl",
      "flags": "p",
      "display": "o.s.OOSI.getAllOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "1c208242e5044d3ef7247e9409b6d5ba173ae1076955455dd0ad618a6a973a26",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.getAllOrders(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10314,
      "name": "getOrderById",
      "type": "other.service.OrderOtherServiceImpl",
      "flags": "p",
      "display": "o.s.OOSI.getOrderById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "4de13edd8aa0c3b6ebbb59ef53db7bb4af801df043d4d02c5c95fec081c39bb2",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.getOrderById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10315,
      "name": "getOrderPrice",
      "type": "other.service.OrderOtherServiceImpl",
      "flags": "p",
      "display": "o.s.OOSI.getOrderPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "7b926c1c04d31f8dfe08fac1515f3cea180a875e0bf86dafbff1cfc8b77f2a21",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.getOrderPrice(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10316,
      "name": "getSoldTickets",
      "type": "other.service.OrderOtherServiceImpl",
      "flags": "p",
      "display": "o.s.OOSI.getSoldTickets",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Seat",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "49d8df30710e296f200bcee53ae61b67265f04229c47d677a880e825daef6fe4",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.getSoldTickets(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10317,
      "name": "modifyOrder",
      "type": "other.service.OrderOtherServiceImpl",
      "flags": "p",
      "display": "o.s.OOSI.modifyOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "int",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "f9db88576094ff085d5700518e485b70157d1725fe193213f83e2f5571c4ba32",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.modifyOrder(java.lang.String, int, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10318,
      "name": "payOrder",
      "type": "other.service.OrderOtherServiceImpl",
      "flags": "p",
      "display": "o.s.OOSI.payOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "d911f9ac02e926eec34705e1ff82886485212fa0c775598853310724c3fba837",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.payOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10319,
      "name": "queryOrders",
      "type": "other.service.OrderOtherServiceImpl",
      "flags": "p",
      "display": "o.s.OOSI.queryOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "other.entity.QueryInfo",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "b5297d327c70d3eb397d24fc4e3c9ffc8cb4f450f5b689f8eecc7af095fa9c0a",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.queryOrders(other.entity.QueryInfo, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10320,
      "name": "queryOrdersForRefresh",
      "type": "other.service.OrderOtherServiceImpl",
      "flags": "p",
      "display": "o.s.OOSI.queryOrdersForRefresh",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "other.entity.QueryInfo",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "3cee0095cf6a61fbeadb8960442e5856a57104e5e3e062abdf7c95250cfaf6cf",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.queryOrdersForRefresh(other.entity.QueryInfo, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10321,
      "name": "saveChanges",
      "type": "other.service.OrderOtherServiceImpl",
      "flags": "p",
      "display": "o.s.OOSI.saveChanges",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "other.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "f1047fc7c3ea4290ff4c8f795a349cb79c9e81d8e0124422b440607eabd362cd",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.saveChanges(other.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10322,
      "name": "checkSecurityAboutOrder",
      "type": "other.service.OrderOtherServiceImpl",
      "flags": "p",
      "display": "o.s.OOSI.checkSecurityAboutOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.Date",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "a7c3ee3fbe0f12f2eaeac56efdb66f59a923ab5a1f52e911a2a9fcb9c3c64d1c",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.checkSecurityAboutOrder(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10323,
      "name": "updateOrder",
      "type": "other.service.OrderOtherServiceImpl",
      "flags": "p",
      "display": "o.s.OOSI.updateOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "other.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "d4e3fa6b89019a70062d77cb46c21431a1e46e2c6e02ad3cbf22f5c06426677b",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherServiceImpl.updateOrder(other.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42224,
      "name": "getId",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "99ee2c946de8deff46ea17ef2200f200bb9e2c92f3460cbd065b5438043c4f2f",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.Order.getId(empty)"
    },
    {
      "id": 42237,
      "name": "addNewOrder",
      "type": "other.service.OrderOtherService",
      "flags": "pa",
      "display": "o.s.OOS.addNewOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "other.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/edu.fudan.common.util.Response other.service.OrderOtherService.addNewOrder(other.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42239,
      "name": "getAccountId",
      "type": "other.entity.Order",
      "flags": "p",
      "display": "o.e.O.getAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d2aec6788db2b05a70890264c04f2cdb831396ab355947b95b7e2e0e5946927",
      "microservice": "ts-order-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-other-service/java.lang.String other.entity.Order.getAccountId(empty)"
    },
    {
      "id": 41472,
      "name": "setSeatClass",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.setSeatClass",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "e07b26bc84cb04399f939d9b1dcecf2d6e991d8f9d2200e8f6be20389f064821",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.entity.Order.setSeatClass(int)"
    },
    {
      "id": 41473,
      "name": "setSeatNumber",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.setSeatNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "31aaee38ace5ee5e60a16dfda67e573c0bac2df9b69a2a5567cd9fdf37b96d9f",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.entity.Order.setSeatNumber(java.lang.String)"
    },
    {
      "id": 41474,
      "name": "getTrainNumber",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.getTrainNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.Order.getTrainNumber(empty)"
    },
    {
      "id": 41475,
      "name": "setTrainNumber",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.setTrainNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "48fb720aa2a9b68dfbb952c6e9e11d36348ceb48bf0fec91e3294ba5ac037a6d",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.entity.Order.setTrainNumber(java.lang.String)"
    },
    {
      "id": 41476,
      "name": "setPrice",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.setPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "9362ae82f726bdabf3d267cc2057ab90a0eeeaab22f188b80b0deaa0b102e602",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.entity.Order.setPrice(java.lang.String)"
    },
    {
      "id": 41477,
      "name": "getContactsName",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.getContactsName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "6cba6d2f6e2925f8e14d21afb10699d04d863cd842458a9c097cb81bd8339e3c",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.Order.getContactsName(empty)"
    },
    {
      "id": 41478,
      "name": "setContactsName",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.setContactsName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "dfb2510a46310a07b2b85cca8155c7f5f427b719b005efe7d9cc5a60007db820",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.entity.Order.setContactsName(java.lang.String)"
    },
    {
      "id": 41479,
      "name": "getContactsDocumentNumber",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.getContactsDocumentNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "b6c5333413de275b83a306f8cdb0edd20ab382691933972a56c5ec0d5d37d064",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.Order.getContactsDocumentNumber(empty)"
    },
    {
      "id": 41480,
      "name": "setContactsDocumentNumber",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.setContactsDocumentNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "b7b05e723824cfb5f3fdd117d4663e555274dd26e333a233a6967d5a6fc8e6ed",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.entity.Order.setContactsDocumentNumber(java.lang.String)"
    },
    {
      "id": 41481,
      "name": "getDocumentType",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.getDocumentType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "98f08abfaa5e29d510b4b9008b2c8103533d7c2b5ef5634014c88fff93542cf3",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/int order.entity.Order.getDocumentType(empty)"
    },
    {
      "id": 41482,
      "name": "setDocumentType",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.setDocumentType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "d58b1ae4635faa9a7e07d3613e91e9b19a6cdb1ccf078afc7a6c54e8336cd0db",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.entity.Order.setDocumentType(int)"
    },
    {
      "id": 41483,
      "name": "checkSecurityAboutOrder",
      "type": "order.service.OrderService",
      "flags": "pa",
      "display": "o.s.OS.checkSecurityAboutOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.Date",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderService.checkSecurityAboutOrder(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41485,
      "name": "updateOrder",
      "type": "order.service.OrderService",
      "flags": "pa",
      "display": "o.s.OS.updateOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "order.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderService.updateOrder(order.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41486,
      "name": "toString",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "afc61e0ac7ed17a103f7013e364c213548a09d13c0dfb092a3d636487d5edeb5",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.Order.toString(empty)"
    },
    {
      "id": 9634,
      "name": "addNewOrder",
      "type": "order.service.OrderServiceImpl",
      "flags": "p",
      "display": "o.s.OSI.addNewOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "order.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "7c1f10d2ca2b5f8e02ad6a00d374cd569741793fd8a5ca8230c11ce4736d0ba7",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.addNewOrder(order.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41381,
      "name": "addNewOrder",
      "type": "order.service.OrderService",
      "flags": "pa",
      "display": "o.s.OS.addNewOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "order.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderService.addNewOrder(order.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41383,
      "name": "getAccountId",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.getAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d2aec6788db2b05a70890264c04f2cdb831396ab355947b95b7e2e0e5946927",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.Order.getAccountId(empty)"
    },
    {
      "id": 9640,
      "name": "queryAlreadySoldOrders",
      "type": "order.service.OrderServiceImpl",
      "flags": "p",
      "display": "o.s.OSI.queryAlreadySoldOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.Date",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "713cf578ee016c1105812a87bd8d51986545eae70e0a3dffaf2b3b8054583ab9",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.queryAlreadySoldOrders(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41384,
      "name": "findByAccountId",
      "type": "order.repository.OrderRepository",
      "flags": "pa",
      "display": "o.r.OR.findByAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.util.ArrayList order.repository.OrderRepository.findByAccountId(java.lang.String)"
    },
    {
      "id": 41385,
      "name": "getId",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "99ee2c946de8deff46ea17ef2200f200bb9e2c92f3460cbd065b5438043c4f2f",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.Order.getId(empty)"
    },
    {
      "id": 41387,
      "name": "setId",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.setId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "0718bdd09ca177d9675fe89d4eb72c4983a83155bc703e3b4b87b2f1a3784fbb",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.entity.Order.setId(java.lang.String)"
    },
    {
      "id": 9644,
      "name": "create",
      "type": "order.service.OrderServiceImpl",
      "flags": "p",
      "display": "o.s.OSI.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "order.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "e81b00779b6b19bafd0fbd89bb256ebab7ffd0d1f420218344d20b81abf4e405",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.create(order.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41388,
      "name": "save",
      "type": "order.repository.OrderRepository",
      "flags": "pby",
      "display": "o.r.OR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "9c92ea28693ac3727c7be2de48763b446b9722c446dca113c8b7f5d3666f5df6",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.Object order.repository.OrderRepository.save(java.lang.Object)"
    },
    {
      "id": 41389,
      "name": "getPrice",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.getPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "81c401d3b165002f08397c47f28abed78c3b534f9c49837b7bc8614c63222be8",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.Order.getPrice(empty)"
    },
    {
      "id": 9648,
      "name": "deleteOrder",
      "type": "order.service.OrderServiceImpl",
      "flags": "p",
      "display": "o.s.OSI.deleteOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "6402fee975a61cdd5e3315fa505c47a2170d43abd75b143233c33c9dc441cb21",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.deleteOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 9652,
      "name": "getAllOrders",
      "type": "order.service.OrderServiceImpl",
      "flags": "p",
      "display": "o.s.OSI.getAllOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "03da0a32accf9b53a9cd0ed2603658173bf4d6e4bd4c033ab3b114d5b1c67fec",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.getAllOrders(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 9653,
      "name": "getOrderById",
      "type": "order.service.OrderServiceImpl",
      "flags": "p",
      "display": "o.s.OSI.getOrderById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "26e28f2c59c8067e9ac9ab5f8f4ff18483c2141a4feb3bedf886ba44b6b6d8a8",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.getOrderById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 9654,
      "name": "getOrderPrice",
      "type": "order.service.OrderServiceImpl",
      "flags": "p",
      "display": "o.s.OSI.getOrderPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "0f507202fb48769490f1d024265e3a333d6ba9fefdec0f5e34334e0e6c489dd6",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.getOrderPrice(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 9655,
      "name": "getSoldTickets",
      "type": "order.service.OrderServiceImpl",
      "flags": "p",
      "display": "o.s.OSI.getSoldTickets",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Seat",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "00012aa98a1ed581dc2f8332c4de16b1e6eeef816d103dfd31dc6cb79e72ca23",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.getSoldTickets(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 9656,
      "name": "modifyOrder",
      "type": "order.service.OrderServiceImpl",
      "flags": "p",
      "display": "o.s.OSI.modifyOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "int",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "309e42edded6104324a2aabe52bc2b09a02301ce65a2d2e6cd97ad0134f2b1a5",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.modifyOrder(java.lang.String, int, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 9657,
      "name": "payOrder",
      "type": "order.service.OrderServiceImpl",
      "flags": "p",
      "display": "o.s.OSI.payOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "5cd2339f263a30ed74a454abe9a8dd31c324b624588f01e744cd0193233a4c1a",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.payOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 9658,
      "name": "queryOrders",
      "type": "order.service.OrderServiceImpl",
      "flags": "p",
      "display": "o.s.OSI.queryOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "order.entity.OrderInfo",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "a8530a9be4cf4bbd467e5f34f2bf9d8cd10596acf81a52466d45df81131cd666",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.queryOrders(order.entity.OrderInfo, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 9659,
      "name": "queryOrdersForRefresh",
      "type": "order.service.OrderServiceImpl",
      "flags": "p",
      "display": "o.s.OSI.queryOrdersForRefresh",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "order.entity.OrderInfo",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "4caf8c6c40111be8bcfcf773d0320f8e5947e6210ea9c0f13f832a12b89312f8",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.queryOrdersForRefresh(order.entity.OrderInfo, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 9660,
      "name": "saveChanges",
      "type": "order.service.OrderServiceImpl",
      "flags": "p",
      "display": "o.s.OSI.saveChanges",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "order.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "33e43357adb5442c8535f5cfdfb7e55cd537c7af0eee9fd3fb1e4c74bfb0236d",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.saveChanges(order.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4797,
      "name": "<clinit>",
      "type": "order.controller.OrderController",
      "flags": "s",
      "display": "o.c.OC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd644066246de131eb8bee812f2ace80f49d71bafe3d92fade0edd3c214420e7",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.controller.OrderController.<clinit>(empty)"
    },
    {
      "id": 9661,
      "name": "checkSecurityAboutOrder",
      "type": "order.service.OrderServiceImpl",
      "flags": "p",
      "display": "o.s.OSI.checkSecurityAboutOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.Date",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "09204e569a04517a47090878208e8986be061f457a3077a161b667bd582cdb6c",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.checkSecurityAboutOrder(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4798,
      "name": "addcreateNewOrder",
      "type": "order.controller.OrderController",
      "flags": "p",
      "display": "o.c.OC.addcreateNewOrder",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "order.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderservice/order/admin",
      "bytecodeHash": "c195a7df1a18ea23cb3dc6dd6f183d6a06322295e7fe2a42aadf728066abdac9",
      "microservice": "ts-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.addcreateNewOrder(order.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 9662,
      "name": "updateOrder",
      "type": "order.service.OrderServiceImpl",
      "flags": "p",
      "display": "o.s.OSI.updateOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "order.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "a0b4dffc647797925d6d2c8c49cdd7aaa27c3df18b0bafa6b79e92fc9de48bad",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderServiceImpl.updateOrder(order.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4799,
      "name": "calculateSoldTicket",
      "type": "order.controller.OrderController",
      "flags": "p",
      "display": "o.c.OC.calculateSoldTicket",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderservice/order/{travelDate}/{trainNumber}",
      "bytecodeHash": "3cebddd353610a3bc7479e32e27c794b09521e79dcdd0a6ee58f214b784aea53",
      "microservice": "ts-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.calculateSoldTicket(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4800,
      "name": "createNewOrder",
      "type": "order.controller.OrderController",
      "flags": "p",
      "display": "o.c.OC.createNewOrder",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "order.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderservice/order",
      "bytecodeHash": "fe276bf75216f3ecaa5889e1aa0640aa5e92a535657f9740a4ec5f9e025b7b80",
      "microservice": "ts-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.createNewOrder(order.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4801,
      "name": "deleteOrder",
      "type": "order.controller.OrderController",
      "flags": "p",
      "display": "o.c.OC.deleteOrder",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderservice/order/{orderId}",
      "bytecodeHash": "498bf31e7f08f9883877b6ec3a96db16b9217bc75af7b4930cf54f1e71a9b4b3",
      "microservice": "ts-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.deleteOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4802,
      "name": "findAllOrder",
      "type": "order.controller.OrderController",
      "flags": "p",
      "display": "o.c.OC.findAllOrder",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderservice/order",
      "bytecodeHash": "e7747afaf401895cc6cb6f9541a5f4cbea7ca2c941b4b83e368646b4b82a3bff",
      "microservice": "ts-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.findAllOrder(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4803,
      "name": "getOrderById",
      "type": "order.controller.OrderController",
      "flags": "p",
      "display": "o.c.OC.getOrderById",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderservice/order/{orderId}",
      "bytecodeHash": "2595cc5684210933db8f968925c75a377ad59491508c90e191c2845c81c1d635",
      "microservice": "ts-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.getOrderById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4804,
      "name": "getOrderPrice",
      "type": "order.controller.OrderController",
      "flags": "p",
      "display": "o.c.OC.getOrderPrice",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderservice/order/price/{orderId}",
      "bytecodeHash": "94d6767a9df7ac06410b05535a543d7d0e6543f7a4c4d1dc09ed886b53133053",
      "microservice": "ts-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.getOrderPrice(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4805,
      "name": "getTicketListByDateAndTripId",
      "type": "order.controller.OrderController",
      "flags": "p",
      "display": "o.c.OC.getTicketListByDateAndTripId",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.Seat",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderservice/order/tickets",
      "bytecodeHash": "6fbcc27593f69e9c5a19975b5825af6c2bf3368d6e69bc9ad05d5fd0d54e09d0",
      "microservice": "ts-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.getTicketListByDateAndTripId(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4806,
      "name": "home",
      "type": "order.controller.OrderController",
      "flags": "p",
      "display": "o.c.OC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.controller.OrderController.home(empty)"
    },
    {
      "id": 4807,
      "name": "modifyOrder",
      "type": "order.controller.OrderController",
      "flags": "p",
      "display": "o.c.OC.modifyOrder",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "int",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderservice/order/status/{orderId}/{status}",
      "bytecodeHash": "0aa276d658015f6fb8fda42bb3acec7a9eda11c8bff2611c6309e25efdd2147a",
      "microservice": "ts-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.modifyOrder(java.lang.String, int, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4808,
      "name": "payOrder",
      "type": "order.controller.OrderController",
      "flags": "p",
      "display": "o.c.OC.payOrder",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderservice/order/orderPay/{orderId}",
      "bytecodeHash": "784858be9dbdd0dafe4eefd1a9db3bbd3065b4bc74faaa9c34044caedf400b3c",
      "microservice": "ts-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.payOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4809,
      "name": "queryOrders",
      "type": "order.controller.OrderController",
      "flags": "p",
      "display": "o.c.OC.queryOrders",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "order.entity.OrderInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderservice/order/query",
      "bytecodeHash": "078c6b25e555290251dc7887b2d74363e7e4491cd08b2095a18d080da58a1ba4",
      "microservice": "ts-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.queryOrders(order.entity.OrderInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4810,
      "name": "queryOrdersForRefresh",
      "type": "order.controller.OrderController",
      "flags": "p",
      "display": "o.c.OC.queryOrdersForRefresh",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "order.entity.OrderInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderservice/order/refresh",
      "bytecodeHash": "e144b68f4eefb43f4323005b73475091a0ca3a9cc8d457412ecd9b3188c3dd2f",
      "microservice": "ts-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.queryOrdersForRefresh(order.entity.OrderInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4811,
      "name": "saveOrderInfo",
      "type": "order.controller.OrderController",
      "flags": "p",
      "display": "o.c.OC.saveOrderInfo",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "order.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderservice/order",
      "bytecodeHash": "1e378b8ee99a8dc2df74c98c9a0a1b0e9b42768736c118af9d70ce6668cebd35",
      "microservice": "ts-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.saveOrderInfo(order.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4812,
      "name": "securityInfoCheck",
      "type": "order.controller.OrderController",
      "flags": "p",
      "display": "o.c.OC.securityInfoCheck",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderservice/order/security/{checkDate}/{accountId}",
      "bytecodeHash": "fb9f7e6450524e01bef97e3f197e8c56313cb35b8c18ceddac382140f0ae2c90",
      "microservice": "ts-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.securityInfoCheck(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4813,
      "name": "updateOrder",
      "type": "order.controller.OrderController",
      "flags": "p",
      "display": "o.c.OC.updateOrder",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "order.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/orderservice/order/admin",
      "bytecodeHash": "2afacbc5f35360288968b1c0a1ac608be6fba68598e10a0ba27a344b72cc8197",
      "microservice": "ts-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.updateOrder(order.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 4814,
      "name": "<clinit>",
      "type": "order.service.OrderServiceImpl",
      "flags": "s",
      "display": "o.s.OSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "16ddfc1a08a564c532cb7c39cc20cb2726a3b5c92aa412423121628462eca7ab",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.service.OrderServiceImpl.<clinit>(empty)"
    },
    {
      "id": 41425,
      "name": "queryAlreadySoldOrders",
      "type": "order.service.OrderService",
      "flags": "pa",
      "display": "o.s.OS.queryAlreadySoldOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.Date",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderService.queryAlreadySoldOrders(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41426,
      "name": "findByTravelDateAndTrainNumber",
      "type": "order.repository.OrderRepository",
      "flags": "pa",
      "display": "o.r.OR.findByTravelDateAndTrainNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String", "java.lang.String"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.util.ArrayList order.repository.OrderRepository.findByTravelDateAndTrainNumber(java.lang.String, java.lang.String)"
    },
    {
      "id": 41428,
      "name": "getStatus",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.getStatus",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "e88f57acb743f9814252b0b6da76241e43852e726e8114d0947084449c5d49e9",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/int order.entity.Order.getStatus(empty)"
    },
    {
      "id": 41429,
      "name": "getSeatClass",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.getSeatClass",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "4fce3ac993307fea4f13f3b8101b4f9d26d1d5dcb8688de8f4b6d40580c02414",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/int order.entity.Order.getSeatClass(empty)"
    },
    {
      "id": 41430,
      "name": "getFrom",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.getFrom",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "0282736b001c184934bad7b700477e9fe30eb3584aa4b9c01483e925173a877c",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.Order.getFrom(empty)"
    },
    {
      "id": 41431,
      "name": "getTo",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.getTo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d0cf9f922ab010f8c80625ee6685ff3cb0a085a2217bde1a5d580997c5014bcb",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.Order.getTo(empty)"
    },
    {
      "id": 41432,
      "name": "getTravelDate",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.getTravelDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.Order.getTravelDate(empty)"
    },
    {
      "id": 41434,
      "name": "create",
      "type": "order.service.OrderService",
      "flags": "pa",
      "display": "o.s.OS.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "order.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderService.create(order.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41435,
      "name": "deleteOrder",
      "type": "order.service.OrderService",
      "flags": "pa",
      "display": "o.s.OS.deleteOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderService.deleteOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41436,
      "name": "findById",
      "type": "order.repository.OrderRepository",
      "flags": "pa",
      "display": "o.r.OR.findById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.Optional",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.util.Optional order.repository.OrderRepository.findById(java.lang.String)"
    },
    {
      "id": 41437,
      "name": "deleteById",
      "type": "order.repository.OrderRepository",
      "flags": "pa",
      "display": "o.r.OR.deleteById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.repository.OrderRepository.deleteById(java.lang.String)"
    },
    {
      "id": 41438,
      "name": "getAllOrders",
      "type": "order.service.OrderService",
      "flags": "pa",
      "display": "o.s.OS.getAllOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderService.getAllOrders(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41439,
      "name": "findAll",
      "type": "order.repository.OrderRepository",
      "flags": "pa",
      "display": "o.r.OR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.util.ArrayList order.repository.OrderRepository.findAll(empty)"
    },
    {
      "id": 41441,
      "name": "getOrderById",
      "type": "order.service.OrderService",
      "flags": "pa",
      "display": "o.s.OS.getOrderById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderService.getOrderById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41442,
      "name": "getOrderPrice",
      "type": "order.service.OrderService",
      "flags": "pa",
      "display": "o.s.OS.getOrderPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderService.getOrderPrice(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41444,
      "name": "getSoldTickets",
      "type": "order.service.OrderService",
      "flags": "pa",
      "display": "o.s.OS.getSoldTickets",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Seat",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderService.getSoldTickets(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41446,
      "name": "getSeatNumber",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.getSeatNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8147cff25932a21b9f3fd88c09486c0907181365574bf2fabbe0ffbdb9e6a923",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.Order.getSeatNumber(empty)"
    },
    {
      "id": 41448,
      "name": "modifyOrder",
      "type": "order.service.OrderService",
      "flags": "pa",
      "display": "o.s.OS.modifyOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "int",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderService.modifyOrder(java.lang.String, int, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41449,
      "name": "setStatus",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.setStatus",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "a090c9f259dbb29e5de86248c5fcc724cb33fd7b8180414584fc289e0c599b27",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.entity.Order.setStatus(int)"
    },
    {
      "id": 41450,
      "name": "payOrder",
      "type": "order.service.OrderService",
      "flags": "pa",
      "display": "o.s.OS.payOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderService.payOrder(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41451,
      "name": "getLoginId",
      "type": "order.entity.OrderInfo",
      "flags": "p",
      "display": "o.e.OI.getLoginId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.OrderInfo.getLoginId(empty)"
    },
    {
      "id": 41452,
      "name": "queryOrders",
      "type": "order.service.OrderService",
      "flags": "pa",
      "display": "o.s.OS.queryOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "order.entity.OrderInfo",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderService.queryOrders(order.entity.OrderInfo, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41453,
      "name": "isEnableStateQuery",
      "type": "order.entity.OrderInfo",
      "flags": "p",
      "display": "o.e.OI.isEnableStateQuery",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "c87f96dbb49f50d33ea5ae1c87f642b0f834951625df3f77894f3f2d7265b108",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/boolean order.entity.OrderInfo.isEnableStateQuery(empty)"
    },
    {
      "id": 41454,
      "name": "isEnableBoughtDateQuery",
      "type": "order.entity.OrderInfo",
      "flags": "p",
      "display": "o.e.OI.isEnableBoughtDateQuery",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "d03bff06aea6fbfedf180457f4b392f70eb91875e68a3f00828aa68dcd339072",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/boolean order.entity.OrderInfo.isEnableBoughtDateQuery(empty)"
    },
    {
      "id": 41455,
      "name": "isEnableTravelDateQuery",
      "type": "order.entity.OrderInfo",
      "flags": "p",
      "display": "o.e.OI.isEnableTravelDateQuery",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "17d2088447ccf826ece32e30a3768849a386734ae9eaa8712655f75cd4c67385",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/boolean order.entity.OrderInfo.isEnableTravelDateQuery(empty)"
    },
    {
      "id": 41456,
      "name": "getState",
      "type": "order.entity.OrderInfo",
      "flags": "p",
      "display": "o.e.OI.getState",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "03413414f76d87055da213e92a79728041e6e47e1b1c52781787269c57cba44d",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/int order.entity.OrderInfo.getState(empty)"
    },
    {
      "id": 41457,
      "name": "getBoughtDate",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.getBoughtDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.Order.getBoughtDate(empty)"
    },
    {
      "id": 41458,
      "name": "getTravelDateEnd",
      "type": "order.entity.OrderInfo",
      "flags": "p",
      "display": "o.e.OI.getTravelDateEnd",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.OrderInfo.getTravelDateEnd(empty)"
    },
    {
      "id": 41459,
      "name": "getBoughtDateStart",
      "type": "order.entity.OrderInfo",
      "flags": "p",
      "display": "o.e.OI.getBoughtDateStart",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "668501b084f2dc96265ceb4e39579391868136fffaeab12c3f93e3c91daee2e4",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.OrderInfo.getBoughtDateStart(empty)"
    },
    {
      "id": 41460,
      "name": "getBoughtDateEnd",
      "type": "order.entity.OrderInfo",
      "flags": "p",
      "display": "o.e.OI.getBoughtDateEnd",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "5fa52bee8d9ecaf9cc0dbb511c90d8e27e9656598177b730ca11725ba9764f76",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.OrderInfo.getBoughtDateEnd(empty)"
    },
    {
      "id": 41461,
      "name": "queryOrdersForRefresh",
      "type": "order.service.OrderService",
      "flags": "pa",
      "display": "o.s.OS.queryOrdersForRefresh",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "order.entity.OrderInfo",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderService.queryOrdersForRefresh(order.entity.OrderInfo, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41462,
      "name": "setFrom",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.setFrom",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "351e4151526ca3f9a50a82cb2419ff6265804f4471b94c2b05ef40c1aeda7b22",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.entity.Order.setFrom(java.lang.String)"
    },
    {
      "id": 41463,
      "name": "setTo",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.setTo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "b5c6632fdead94e6cf5d078f9da49015f7742cbf1bf22678e79eecefc50ff91a",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.entity.Order.setTo(java.lang.String)"
    },
    {
      "id": 41464,
      "name": "saveChanges",
      "type": "order.service.OrderService",
      "flags": "pa",
      "display": "o.s.OS.saveChanges",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "order.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/edu.fudan.common.util.Response order.service.OrderService.saveChanges(order.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 41465,
      "name": "setAccountId",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.setAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "426ae263500f080b5cc781296359ccd73b815bb336a838d6718d26512d4563e5",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.entity.Order.setAccountId(java.lang.String)"
    },
    {
      "id": 41466,
      "name": "setBoughtDate",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.setBoughtDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1c059b5fe325fde7d43b063306b8ea508a338bafb0f3efc8a9c0b94e3f6e422c",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.entity.Order.setBoughtDate(java.lang.String)"
    },
    {
      "id": 41467,
      "name": "setTravelDate",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.setTravelDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "935836f6468fbbdce3aa550163b41db4acc66eaba962e885841470780dddd4d2",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.entity.Order.setTravelDate(java.lang.String)"
    },
    {
      "id": 41468,
      "name": "getTravelTime",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.getTravelTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "bc149cd245ca2c98020664c7cf3a3b0f9c0927b50df6a56a8d67de1a7e037964",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/java.lang.String order.entity.Order.getTravelTime(empty)"
    },
    {
      "id": 41469,
      "name": "setTravelTime",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.setTravelTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "b12f88a7b7ff52e9ab9006d6e84a8337b222b27c05dd112598234076ab823e5d",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.entity.Order.setTravelTime(java.lang.String)"
    },
    {
      "id": 41470,
      "name": "getCoachNumber",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.getCoachNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "55c3aec14ab0022b0eee6c40b7da6cc9e9eefbc1127e154a35a5ad79427fd854",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/int order.entity.Order.getCoachNumber(empty)"
    },
    {
      "id": 41471,
      "name": "setCoachNumber",
      "type": "order.entity.Order",
      "flags": "p",
      "display": "o.e.O.setCoachNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "dbf6b3f1c183e9edd237770d4eb6df9ed7c18a85984a7c8323f77292ccfa9f6f",
      "microservice": "ts-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-order-service/void order.entity.Order.setCoachNumber(int)"
    },
    {
      "id": 1920,
      "name": "home",
      "type": "com.trainticket.controller.PaymentController",
      "flags": "p",
      "display": "c.t.c.PC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/java.lang.String com.trainticket.controller.PaymentController.home(empty)"
    },
    {
      "id": 1921,
      "name": "pay",
      "type": "com.trainticket.controller.PaymentController",
      "flags": "p",
      "display": "c.t.c.PC.pay",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "com.trainticket.entity.Payment",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/paymentservice/payment",
      "bytecodeHash": "f16537ac16a9cc82d66849439346c04970f962b83993f67edf7c192ac7345553",
      "microservice": "ts-payment-service",
      "endpointMethod": true,
      "methodSignature": "ts-payment-service/org.springframework.http.HttpEntity com.trainticket.controller.PaymentController.pay(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1922,
      "name": "query",
      "type": "com.trainticket.controller.PaymentController",
      "flags": "p",
      "display": "c.t.c.PC.query",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/paymentservice/payment",
      "bytecodeHash": "846fdc13666d73360d24dd957112bc1ce13ff920c3dc5f389c4f2d817210cb98",
      "microservice": "ts-payment-service",
      "endpointMethod": true,
      "methodSignature": "ts-payment-service/org.springframework.http.HttpEntity com.trainticket.controller.PaymentController.query(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1923,
      "name": "equals",
      "type": "com.trainticket.entity.Money",
      "flags": "p",
      "display": "c.t.e.M.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "4eb7dc286c860a83803d27d799a06c5e51d240dc04f70e49cc100d9e393ed23d",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/boolean com.trainticket.entity.Money.equals(java.lang.Object)"
    },
    {
      "id": 40515,
      "name": "addMoney",
      "type": "com.trainticket.service.PaymentService",
      "flags": "pa",
      "display": "c.t.s.PS.addMoney",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "com.trainticket.entity.Payment",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentService.addMoney(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1924,
      "name": "hashCode",
      "type": "com.trainticket.entity.Money",
      "flags": "p",
      "display": "c.t.e.M.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "ec376e708f7b38b75cfee853945dfde018d57afdc388eb2d5cbd01d13a3fb2db",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/int com.trainticket.entity.Money.hashCode(empty)"
    },
    {
      "id": 1925,
      "name": "toString",
      "type": "com.trainticket.entity.Money",
      "flags": "p",
      "display": "c.t.e.M.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "6f3d84e32a2999b2f7db4a8c7562c3a9f8e999c05942badb8fdbd71ddf892e60",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/java.lang.String com.trainticket.entity.Money.toString(empty)"
    },
    {
      "id": 1926,
      "name": "equals",
      "type": "com.trainticket.entity.Payment",
      "flags": "p",
      "display": "c.t.e.P.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "3d94ad6a84feb092bbf49207ad679feb206fae93e472f4406f86c70411428080",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/boolean com.trainticket.entity.Payment.equals(java.lang.Object)"
    },
    {
      "id": 40518,
      "name": "pay",
      "type": "com.trainticket.service.PaymentService",
      "flags": "pa",
      "display": "c.t.s.PS.pay",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "com.trainticket.entity.Payment",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentService.pay(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1927,
      "name": "hashCode",
      "type": "com.trainticket.entity.Payment",
      "flags": "p",
      "display": "c.t.e.P.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "918e13ee23eabbdd8d5260803230c01b0acae532d02228f624c80ca452f57b80",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/int com.trainticket.entity.Payment.hashCode(empty)"
    },
    {
      "id": 40519,
      "name": "findByOrderId",
      "type": "com.trainticket.repository.PaymentRepository",
      "flags": "pa",
      "display": "c.t.r.PR.findByOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "com.trainticket.entity.Payment",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/com.trainticket.entity.Payment com.trainticket.repository.PaymentRepository.findByOrderId(java.lang.String)"
    },
    {
      "id": 1928,
      "name": "toString",
      "type": "com.trainticket.entity.Payment",
      "flags": "p",
      "display": "c.t.e.P.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "f730f4286ef7a3f7a5206c83a69173aa1492fe104c209b9f403e2ab694719338",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.toString(empty)"
    },
    {
      "id": 40520,
      "name": "save",
      "type": "com.trainticket.repository.PaymentRepository",
      "flags": "pby",
      "display": "c.t.r.PR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "cca36f0556828b165de9eca3808d06572cf88badf2edeea5bf321d0c81ad969f",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/java.lang.Object com.trainticket.repository.PaymentRepository.save(java.lang.Object)"
    },
    {
      "id": 1929,
      "name": "<clinit>",
      "type": "com.trainticket.service.PaymentServiceImpl",
      "flags": "s",
      "display": "c.t.s.PSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "4392dc98d949af2086ea83cc791ccc3c4a9a7e4f86994cf6abe84d7d6b364354",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/void com.trainticket.service.PaymentServiceImpl.<clinit>(empty)"
    },
    {
      "id": 40523,
      "name": "query",
      "type": "com.trainticket.service.PaymentService",
      "flags": "pa",
      "display": "c.t.s.PS.query",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentService.query(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40524,
      "name": "findAll",
      "type": "com.trainticket.repository.PaymentRepository",
      "flags": "pa",
      "display": "c.t.r.PR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/java.util.List com.trainticket.repository.PaymentRepository.findAll(empty)"
    },
    {
      "id": 8090,
      "name": "getId",
      "type": "com.trainticket.entity.Payment",
      "flags": "p",
      "display": "c.t.e.P.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getId(empty)"
    },
    {
      "id": 8094,
      "name": "addMoney",
      "type": "com.trainticket.service.PaymentServiceImpl",
      "flags": "p",
      "display": "c.t.s.PSI.addMoney",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "com.trainticket.entity.Payment",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "7761b41e7a49878a12980c90a5f53ee58e8a5dd6ee220aa4d9c91abd3803457b",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentServiceImpl.addMoney(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11679,
      "name": "<init>",
      "type": "com.trainticket.entity.Payment",
      "flags": "p",
      "display": "c.t.e.P.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "36eee7783184efd0621cf277e1c631a43de891c6a96b358c67dd9cae1755a29f",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/void com.trainticket.entity.Payment.<init>(empty)"
    },
    {
      "id": 8096,
      "name": "pay",
      "type": "com.trainticket.service.PaymentServiceImpl",
      "flags": "p",
      "display": "c.t.s.PSI.pay",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "com.trainticket.entity.Payment",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "bfa33d977ff6a82ff3594d3fb99e9bdc9e226425e1e032a77c61ef844da3f11d",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentServiceImpl.pay(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8100,
      "name": "query",
      "type": "com.trainticket.service.PaymentServiceImpl",
      "flags": "p",
      "display": "c.t.s.PSI.query",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "dc1b8e4c7b49952103145b13795eb78d9197a31a39eaaf1c2bd43ecdf90b2473",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/edu.fudan.common.util.Response com.trainticket.service.PaymentServiceImpl.query(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8101,
      "name": "canEqual",
      "type": "com.trainticket.entity.Money",
      "flags": "d",
      "display": "c.t.e.M.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "464ff6a84daa34b8bb846d28cbb7defc4d56ec77d19a49dd72dd81d83c156c5a",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/boolean com.trainticket.entity.Money.canEqual(java.lang.Object)"
    },
    {
      "id": 8102,
      "name": "getId",
      "type": "com.trainticket.entity.Money",
      "flags": "p",
      "display": "c.t.e.M.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "804b3ae705e9e66161446b56a0c8ea320f025aad25a62dc23af37c7c98396f39",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/java.lang.String com.trainticket.entity.Money.getId(empty)"
    },
    {
      "id": 8103,
      "name": "getUserId",
      "type": "com.trainticket.entity.Money",
      "flags": "p",
      "display": "c.t.e.M.getUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/java.lang.String com.trainticket.entity.Money.getUserId(empty)"
    },
    {
      "id": 8104,
      "name": "getMoney",
      "type": "com.trainticket.entity.Money",
      "flags": "p",
      "display": "c.t.e.M.getMoney",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/java.lang.String com.trainticket.entity.Money.getMoney(empty)"
    },
    {
      "id": 8105,
      "name": "canEqual",
      "type": "com.trainticket.entity.Payment",
      "flags": "d",
      "display": "c.t.e.P.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "a68dc653e04e3320436802d4e774643da76551bbd07cf806c855cbfc1096e4e1",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/boolean com.trainticket.entity.Payment.canEqual(java.lang.Object)"
    },
    {
      "id": 8106,
      "name": "getOrderId",
      "type": "com.trainticket.entity.Payment",
      "flags": "p",
      "display": "c.t.e.P.getOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getOrderId(empty)"
    },
    {
      "id": 8107,
      "name": "getUserId",
      "type": "com.trainticket.entity.Payment",
      "flags": "p",
      "display": "c.t.e.P.getUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getUserId(empty)"
    },
    {
      "id": 8108,
      "name": "getPrice",
      "type": "com.trainticket.entity.Payment",
      "flags": "p",
      "display": "c.t.e.P.getPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/java.lang.String com.trainticket.entity.Payment.getPrice(empty)"
    },
    {
      "id": 1918,
      "name": "<clinit>",
      "type": "com.trainticket.controller.PaymentController",
      "flags": "s",
      "display": "c.t.c.PC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "dc021f7606cc72a29d0560a8931de78703248b6e4c0e4fc1fc1a9e03a2ba72dd",
      "microservice": "ts-payment-service",
      "endpointMethod": false,
      "methodSignature": "ts-payment-service/void com.trainticket.controller.PaymentController.<clinit>(empty)"
    },
    {
      "id": 1919,
      "name": "addMoney",
      "type": "com.trainticket.controller.PaymentController",
      "flags": "p",
      "display": "c.t.c.PC.addMoney",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "com.trainticket.entity.Payment",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/paymentservice/payment/money",
      "bytecodeHash": "2696cce47b30c1b5261efcc189b0f0dbc907aa2e8e8f18d9c2762584672c0e14",
      "microservice": "ts-payment-service",
      "endpointMethod": true,
      "methodSignature": "ts-payment-service/org.springframework.http.HttpEntity com.trainticket.controller.PaymentController.addMoney(com.trainticket.entity.Payment, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13857,
      "name": "createFoodOrder",
      "type": "preserveOther.service.PreserveOtherServiceImpl",
      "flags": "P",
      "display": "pO.s.POSI.createFoodOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.FoodOrder",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "016fdff0a53b0cb55d82d2f7e019764f7a9162e3f16dcec53d8c91caf5d7d84a",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.createFoodOrder(edu.fudan.common.entity.FoodOrder, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17569,
      "name": "<init>",
      "type": "preserveOther.service.PreserveOtherServiceImpl$3",
      "flags": "",
      "display": "pO.s.POSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["preserveOther.service.PreserveOtherServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/void preserveOther.service.PreserveOtherServiceImpl$3.<init>(preserveOther.service.PreserveOtherServiceImpl)"
    },
    {
      "id": 10403,
      "name": "preserve",
      "type": "preserveOther.service.PreserveOtherServiceImpl",
      "flags": "p",
      "display": "pO.s.POSI.preserve",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.OrderTicketsInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "94e9351b3ca6dd1f32aede0d7b37bbca51b861e72786e6813ea528a606d10052",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13859,
      "name": "createConsign",
      "type": "preserveOther.service.PreserveOtherServiceImpl",
      "flags": "P",
      "display": "pO.s.POSI.createConsign",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Consign",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "8f11e583694c4d1f87742f4283a62653bc2ecb20c0d233021436d9e520202d72",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.createConsign(edu.fudan.common.entity.Consign, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13860,
      "name": "getAccount",
      "type": "preserveOther.service.PreserveOtherServiceImpl",
      "flags": "p",
      "display": "pO.s.POSI.getAccount",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.User",
      "endpointURI": null,
      "bytecodeHash": "10dac39eb2fe3948c55d082045705fb4031486d72f52f1b8f3cb16e7e260822d",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/edu.fudan.common.entity.User preserveOther.service.PreserveOtherServiceImpl.getAccount(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13829,
      "name": "checkSecurity",
      "type": "preserveOther.service.PreserveOtherServiceImpl",
      "flags": "P",
      "display": "pO.s.POSI.checkSecurity",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "7a9f3ac715d4822f22e7df04b5a91dcfa727b7448c482edac8b464b1ce9f4c60",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.checkSecurity(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6569,
      "name": "<clinit>",
      "type": "preserveOther.controller.PreserveOtherController",
      "flags": "s",
      "display": "pO.c.POC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "3964062702a866c637c63d909461428888c0d1cad03e0c82dbbaa2ad151d6ef5",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/void preserveOther.controller.PreserveOtherController.<clinit>(empty)"
    },
    {
      "id": 6570,
      "name": "home",
      "type": "preserveOther.controller.PreserveOtherController",
      "flags": "p",
      "display": "pO.c.POC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/java.lang.String preserveOther.controller.PreserveOtherController.home(empty)"
    },
    {
      "id": 6571,
      "name": "preserve",
      "type": "preserveOther.controller.PreserveOtherController",
      "flags": "p",
      "display": "pO.c.POC.preserve",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.OrderTicketsInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/preserveotherservice/preserveOther",
      "bytecodeHash": "cb46d3044bed21893080fe3f2ab39ad324684fb3956d96709b2ed890e578335c",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": true,
      "methodSignature": "ts-preserve-other-service/org.springframework.http.HttpEntity preserveOther.controller.PreserveOtherController.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6572,
      "name": "<clinit>",
      "type": "preserveOther.mq.RabbitSend",
      "flags": "s",
      "display": "pO.m.RS.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "5ed93b7bfe7646299f400d634a5e350f135e5e7cf238b5bd9511b50b5bbc77fb",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/void preserveOther.mq.RabbitSend.<clinit>(empty)"
    },
    {
      "id": 6573,
      "name": "<clinit>",
      "type": "preserveOther.service.PreserveOtherServiceImpl",
      "flags": "s",
      "display": "pO.s.POSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "d87d3b2f2aae9e40ebe1618fbf97e87a620aec189b07426cd767f17572575119",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/void preserveOther.service.PreserveOtherServiceImpl.<clinit>(empty)"
    },
    {
      "id": 13837,
      "name": "getContactsById",
      "type": "preserveOther.service.PreserveOtherServiceImpl",
      "flags": "P",
      "display": "pO.s.POSI.getContactsById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "0398876b2097f7f05054824c13fb89b2644db6087e22163b0c74bef000eaf3a4",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.getContactsById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13841,
      "name": "getTripAllDetailInformation",
      "type": "preserveOther.service.PreserveOtherServiceImpl",
      "flags": "P",
      "display": "pO.s.POSI.getTripAllDetailInformation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripAllDetailInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "ffe891f150612498e24b5d4899659d93b16a075c7a9be69481757ae38cd75e01",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17557,
      "name": "<init>",
      "type": "preserveOther.service.PreserveOtherServiceImpl$7",
      "flags": "",
      "display": "pO.s.POSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["preserveOther.service.PreserveOtherServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/void preserveOther.service.PreserveOtherServiceImpl$7.<init>(preserveOther.service.PreserveOtherServiceImpl)"
    },
    {
      "id": 42422,
      "name": "preserve",
      "type": "preserveOther.service.PreserveOtherService",
      "flags": "pa",
      "display": "pO.s.POS.preserve",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.OrderTicketsInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherService.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17560,
      "name": "<init>",
      "type": "preserveOther.service.PreserveOtherServiceImpl$6",
      "flags": "",
      "display": "pO.s.POSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["preserveOther.service.PreserveOtherServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/void preserveOther.service.PreserveOtherServiceImpl$6.<init>(preserveOther.service.PreserveOtherServiceImpl)"
    },
    {
      "id": 13849,
      "name": "getServiceUrl",
      "type": "preserveOther.service.PreserveOtherServiceImpl",
      "flags": "P",
      "display": "pO.s.POSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4c9cdca9114d46d9b6782076a5fcdd786861a709d13bfd695ca633cdf0ab0f00",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/java.lang.String preserveOther.service.PreserveOtherServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 13850,
      "name": "<init>",
      "type": "preserveOther.service.PreserveOtherServiceImpl$1",
      "flags": "",
      "display": "pO.s.POSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["preserveOther.service.PreserveOtherServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/void preserveOther.service.PreserveOtherServiceImpl$1.<init>(preserveOther.service.PreserveOtherServiceImpl)"
    },
    {
      "id": 13851,
      "name": "dipatchSeat",
      "type": "preserveOther.service.PreserveOtherServiceImpl",
      "flags": "p",
      "display": "pO.s.POSI.dipatchSeat",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "int",
        "int",
        "java.util.List",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.Ticket",
      "endpointURI": null,
      "bytecodeHash": "03ce74171705f9e2f0595cf7fffbd0f3750b0c9317de7f16cd277598952239c4",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/edu.fudan.common.entity.Ticket preserveOther.service.PreserveOtherServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13852,
      "name": "createOrder",
      "type": "preserveOther.service.PreserveOtherServiceImpl",
      "flags": "P",
      "display": "pO.s.POSI.createOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "f301d0b56f61d9c0c7688740676d41f0abe0895aa3ccc192b61d6656e4045bd7",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.createOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13853,
      "name": "addAssuranceForOrder",
      "type": "preserveOther.service.PreserveOtherServiceImpl",
      "flags": "P",
      "display": "pO.s.POSI.addAssuranceForOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "int",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "2ac1f4bece17a68f7f902eaed11c5ba4740e6a7f6faf0d85ced72bcccbf6ae57",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/edu.fudan.common.util.Response preserveOther.service.PreserveOtherServiceImpl.addAssuranceForOrder(int, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17565,
      "name": "<init>",
      "type": "preserveOther.service.PreserveOtherServiceImpl$2",
      "flags": "",
      "display": "pO.s.POSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["preserveOther.service.PreserveOtherServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/void preserveOther.service.PreserveOtherServiceImpl$2.<init>(preserveOther.service.PreserveOtherServiceImpl)"
    },
    {
      "id": 17566,
      "name": "<init>",
      "type": "preserveOther.service.PreserveOtherServiceImpl$8",
      "flags": "",
      "display": "pO.s.POSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["preserveOther.service.PreserveOtherServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/void preserveOther.service.PreserveOtherServiceImpl$8.<init>(preserveOther.service.PreserveOtherServiceImpl)"
    },
    {
      "id": 17567,
      "name": "<init>",
      "type": "preserveOther.service.PreserveOtherServiceImpl$4",
      "flags": "",
      "display": "pO.s.POSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["preserveOther.service.PreserveOtherServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-preserve-other-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-other-service/void preserveOther.service.PreserveOtherServiceImpl$4.<init>(preserveOther.service.PreserveOtherServiceImpl)"
    },
    {
      "id": 17568,
      "name": "<init>",
      "type": "preserve.service.PreserveServiceImpl$3",
      "flags": "",
      "display": "p.s.PSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["preserve.service.PreserveServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/void preserve.service.PreserveServiceImpl$3.<init>(preserve.service.PreserveServiceImpl)"
    },
    {
      "id": 13857,
      "name": "createFoodOrder",
      "type": "preserve.service.PreserveServiceImpl",
      "flags": "P",
      "display": "p.s.PSI.createFoodOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.FoodOrder",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "2d627c07a346cd50c4b3436d0fd8c5324b832217d185e028f22c03ab09a71f32",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.createFoodOrder(edu.fudan.common.entity.FoodOrder, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13826,
      "name": "checkSecurity",
      "type": "preserve.service.PreserveServiceImpl",
      "flags": "P",
      "display": "p.s.PSI.checkSecurity",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "fa18d4b97c19f29ef470d3a19a883cfa60d313c741ddc2b906f2f22e832bf9a4",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.checkSecurity(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10403,
      "name": "preserve",
      "type": "preserve.service.PreserveServiceImpl",
      "flags": "p",
      "display": "p.s.PSI.preserve",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.OrderTicketsInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "f45f2ab449acfcbf82f5be886a92f710edfe7a8fc89181c2c6a00a3fc8a94913",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13859,
      "name": "createConsign",
      "type": "preserve.service.PreserveServiceImpl",
      "flags": "P",
      "display": "p.s.PSI.createConsign",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Consign",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "7e8b1384db70b67a62ede590af2428a7a2312032ae3c4c895460e27c97ccdf67",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.createConsign(edu.fudan.common.entity.Consign, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13860,
      "name": "getAccount",
      "type": "preserve.service.PreserveServiceImpl",
      "flags": "p",
      "display": "p.s.PSI.getAccount",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.User",
      "endpointURI": null,
      "bytecodeHash": "a98e79ec0ee176b5d038337c013771cdf63c39620894384232d08d662862df4d",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/edu.fudan.common.entity.User preserve.service.PreserveServiceImpl.getAccount(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6569,
      "name": "<clinit>",
      "type": "preserve.controller.PreserveController",
      "flags": "s",
      "display": "p.c.PC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "3964062702a866c637c63d909461428888c0d1cad03e0c82dbbaa2ad151d6ef5",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/void preserve.controller.PreserveController.<clinit>(empty)"
    },
    {
      "id": 6570,
      "name": "home",
      "type": "preserve.controller.PreserveController",
      "flags": "p",
      "display": "p.c.PC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/java.lang.String preserve.controller.PreserveController.home(empty)"
    },
    {
      "id": 13834,
      "name": "getContactsById",
      "type": "preserve.service.PreserveServiceImpl",
      "flags": "P",
      "display": "p.s.PSI.getContactsById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "4b0634298942c5de8128592770e4285daeb49bd9f4db3cbd3d0dc97403503454",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.getContactsById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6571,
      "name": "preserve",
      "type": "preserve.controller.PreserveController",
      "flags": "p",
      "display": "p.c.PC.preserve",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.OrderTicketsInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/preserveservice/preserve",
      "bytecodeHash": "cb46d3044bed21893080fe3f2ab39ad324684fb3956d96709b2ed890e578335c",
      "microservice": "ts-preserve-service",
      "endpointMethod": true,
      "methodSignature": "ts-preserve-service/org.springframework.http.HttpEntity preserve.controller.PreserveController.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6572,
      "name": "<clinit>",
      "type": "preserve.mq.RabbitSend",
      "flags": "s",
      "display": "p.m.RS.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "5ed93b7bfe7646299f400d634a5e350f135e5e7cf238b5bd9511b50b5bbc77fb",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/void preserve.mq.RabbitSend.<clinit>(empty)"
    },
    {
      "id": 6573,
      "name": "<clinit>",
      "type": "preserve.service.PreserveServiceImpl",
      "flags": "s",
      "display": "p.s.PSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "92030397a8f25947134ef378ee414d40870ee22f08fa35f9f5cc107fba7f3d48",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/void preserve.service.PreserveServiceImpl.<clinit>(empty)"
    },
    {
      "id": 13838,
      "name": "getTripAllDetailInformation",
      "type": "preserve.service.PreserveServiceImpl",
      "flags": "P",
      "display": "p.s.PSI.getTripAllDetailInformation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripAllDetailInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "43b089b1f1f3ad7405a6b18b9d2e5038da4cc7f4aaaa84c47abdffa6be300f01",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17556,
      "name": "<init>",
      "type": "preserve.service.PreserveServiceImpl$6",
      "flags": "",
      "display": "p.s.PSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["preserve.service.PreserveServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/void preserve.service.PreserveServiceImpl$6.<init>(preserve.service.PreserveServiceImpl)"
    },
    {
      "id": 42421,
      "name": "preserve",
      "type": "preserve.service.PreserveService",
      "flags": "pa",
      "display": "p.s.PS.preserve",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.OrderTicketsInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveService.preserve(edu.fudan.common.entity.OrderTicketsInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17559,
      "name": "<init>",
      "type": "preserve.service.PreserveServiceImpl$5",
      "flags": "",
      "display": "p.s.PSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["preserve.service.PreserveServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/void preserve.service.PreserveServiceImpl$5.<init>(preserve.service.PreserveServiceImpl)"
    },
    {
      "id": 13849,
      "name": "getServiceUrl",
      "type": "preserve.service.PreserveServiceImpl",
      "flags": "P",
      "display": "p.s.PSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4c9cdca9114d46d9b6782076a5fcdd786861a709d13bfd695ca633cdf0ab0f00",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/java.lang.String preserve.service.PreserveServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 13850,
      "name": "<init>",
      "type": "preserve.service.PreserveServiceImpl$1",
      "flags": "",
      "display": "p.s.PSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["preserve.service.PreserveServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/void preserve.service.PreserveServiceImpl$1.<init>(preserve.service.PreserveServiceImpl)"
    },
    {
      "id": 13851,
      "name": "dipatchSeat",
      "type": "preserve.service.PreserveServiceImpl",
      "flags": "p",
      "display": "p.s.PSI.dipatchSeat",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "int",
        "int",
        "java.util.List",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.Ticket",
      "endpointURI": null,
      "bytecodeHash": "f4326dfb8c191d6512c061844218ae3e747c689e7a6a89f20446dcf01dea8ad7",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/edu.fudan.common.entity.Ticket preserve.service.PreserveServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13852,
      "name": "createOrder",
      "type": "preserve.service.PreserveServiceImpl",
      "flags": "P",
      "display": "p.s.PSI.createOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Order",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "ed0a5045e7eb7a7d840fa7cfc6db631648d3cc7d27522892bda4db58f7b191fb",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.createOrder(edu.fudan.common.entity.Order, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13853,
      "name": "addAssuranceForOrder",
      "type": "preserve.service.PreserveServiceImpl",
      "flags": "P",
      "display": "p.s.PSI.addAssuranceForOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "int",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "8a8a31b602067feb2d18cc9792717f7fde14cee3c0c7185aa0a0a6111159514d",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/edu.fudan.common.util.Response preserve.service.PreserveServiceImpl.addAssuranceForOrder(int, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17565,
      "name": "<init>",
      "type": "preserve.service.PreserveServiceImpl$2",
      "flags": "",
      "display": "p.s.PSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["preserve.service.PreserveServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/void preserve.service.PreserveServiceImpl$2.<init>(preserve.service.PreserveServiceImpl)"
    },
    {
      "id": 17566,
      "name": "<init>",
      "type": "preserve.service.PreserveServiceImpl$7",
      "flags": "",
      "display": "p.s.PSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["preserve.service.PreserveServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-preserve-service",
      "endpointMethod": false,
      "methodSignature": "ts-preserve-service/void preserve.service.PreserveServiceImpl$7.<init>(preserve.service.PreserveServiceImpl)"
    },
    {
      "id": 6528,
      "name": "equals",
      "type": "price.entity.PriceConfig",
      "flags": "p",
      "display": "p.e.PC.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "c452b4e720f9a2e5b1eef42cf88e695aca6842c615ff6b13efc34ae25a9e98a6",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/boolean price.entity.PriceConfig.equals(java.lang.Object)"
    },
    {
      "id": 6529,
      "name": "hashCode",
      "type": "price.entity.PriceConfig",
      "flags": "p",
      "display": "p.e.PC.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "85e6f8a60a3a0ca09b07f80d8201cc693a8d1143f70d4b67ca8b4a9dcb973889",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/int price.entity.PriceConfig.hashCode(empty)"
    },
    {
      "id": 6530,
      "name": "toString",
      "type": "price.entity.PriceConfig",
      "flags": "p",
      "display": "p.e.PC.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "b0130e71317a8f09041a7bc9c0f4d1073f35f21ac6d06288080f7a9baeec1e1e",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/java.lang.String price.entity.PriceConfig.toString(empty)"
    },
    {
      "id": 6531,
      "name": "<clinit>",
      "type": "price.service.PriceServiceImpl",
      "flags": "s",
      "display": "p.s.PSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "0accde5b0dbc2a298334295646f05aea4c06fa06536c13a38e9d5c434965728b",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/void price.service.PriceServiceImpl.<clinit>(empty)"
    },
    {
      "id": 10243,
      "name": "getRouteId",
      "type": "price.entity.PriceConfig",
      "flags": "p",
      "display": "p.e.PC.getRouteId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/java.lang.String price.entity.PriceConfig.getRouteId(empty)"
    },
    {
      "id": 10244,
      "name": "getTrainType",
      "type": "price.entity.PriceConfig",
      "flags": "p",
      "display": "p.e.PC.getTrainType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/java.lang.String price.entity.PriceConfig.getTrainType(empty)"
    },
    {
      "id": 13636,
      "name": "<init>",
      "type": "price.entity.PriceConfig",
      "flags": "p",
      "display": "p.e.PC.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "2e3a7756e3a8f17765266b6e4240358450faa67bfa032948f10904d77903deae",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/void price.entity.PriceConfig.<init>(empty)"
    },
    {
      "id": 42180,
      "name": "createNewPriceConfig",
      "type": "price.service.PriceService",
      "flags": "pa",
      "display": "p.s.PS.createNewPriceConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "price.entity.PriceConfig",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/edu.fudan.common.util.Response price.service.PriceService.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13638,
      "name": "setBasicPriceRate",
      "type": "price.entity.PriceConfig",
      "flags": "p",
      "display": "p.e.PC.setBasicPriceRate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["double"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "55e4edf531cc8c88a71ec60a1be3c68a3be455d5c49e5e59c6996e1c601086b2",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/void price.entity.PriceConfig.setBasicPriceRate(double)"
    },
    {
      "id": 42182,
      "name": "save",
      "type": "price.repository.PriceConfigRepository",
      "flags": "pby",
      "display": "p.r.PCR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "a16d5abe2301b2bd07cb69b5fd5392d7777b7278cc349bd881edf5169261ea4c",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/java.lang.Object price.repository.PriceConfigRepository.save(java.lang.Object)"
    },
    {
      "id": 13639,
      "name": "setFirstClassPriceRate",
      "type": "price.entity.PriceConfig",
      "flags": "p",
      "display": "p.e.PC.setFirstClassPriceRate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["double"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bef0afc1595537293420c619720a42e4843dabd48d13b2d7a9b207d929fb91ec",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/void price.entity.PriceConfig.setFirstClassPriceRate(double)"
    },
    {
      "id": 42183,
      "name": "findById",
      "type": "price.repository.PriceConfigRepository",
      "flags": "pa",
      "display": "p.r.PCR.findById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.Optional",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/java.util.Optional price.repository.PriceConfigRepository.findById(java.lang.String)"
    },
    {
      "id": 10248,
      "name": "createNewPriceConfig",
      "type": "price.service.PriceServiceImpl",
      "flags": "p",
      "display": "p.s.PSI.createNewPriceConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "price.entity.PriceConfig",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "a7c200ec34ea010d55bf062dad58ff35522db9cc9a00e8b7a8ec915e08cc71f9",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.createNewPriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13640,
      "name": "setRouteId",
      "type": "price.entity.PriceConfig",
      "flags": "p",
      "display": "p.e.PC.setRouteId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "935836f6468fbbdce3aa550163b41db4acc66eaba962e885841470780dddd4d2",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/void price.entity.PriceConfig.setRouteId(java.lang.String)"
    },
    {
      "id": 13641,
      "name": "setTrainType",
      "type": "price.entity.PriceConfig",
      "flags": "p",
      "display": "p.e.PC.setTrainType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1c059b5fe325fde7d43b063306b8ea508a338bafb0f3efc8a9c0b94e3f6e422c",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/void price.entity.PriceConfig.setTrainType(java.lang.String)"
    },
    {
      "id": 42185,
      "name": "deletePriceConfig",
      "type": "price.service.PriceService",
      "flags": "pa",
      "display": "p.s.PS.deletePriceConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/edu.fudan.common.util.Response price.service.PriceService.deletePriceConfig(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42187,
      "name": "delete",
      "type": "price.repository.PriceConfigRepository",
      "flags": "pby",
      "display": "p.r.PCR.delete",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "ffbea97c684e7c2bbaa2a901f15f4d8cdcf183b95729e103b94e87e26256ae23",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/void price.repository.PriceConfigRepository.delete(java.lang.Object)"
    },
    {
      "id": 10253,
      "name": "deletePriceConfig",
      "type": "price.service.PriceServiceImpl",
      "flags": "p",
      "display": "p.s.PSI.deletePriceConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "712d2a407751713fa7ce83a8f821933504b2eb1713333dcbd6b50e84837dd23b",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.deletePriceConfig(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42189,
      "name": "findByRouteIdAndTrainType",
      "type": "price.service.PriceService",
      "flags": "pa",
      "display": "p.s.PS.findByRouteIdAndTrainType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/edu.fudan.common.util.Response price.service.PriceService.findByRouteIdAndTrainType(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42190,
      "name": "findByRouteIdAndTrainType",
      "type": "price.repository.PriceConfigRepository",
      "flags": "pa",
      "display": "p.r.PCR.findByRouteIdAndTrainType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String", "java.lang.String"],
      "returnType": "price.entity.PriceConfig",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/price.entity.PriceConfig price.repository.PriceConfigRepository.findByRouteIdAndTrainType(java.lang.String, java.lang.String)"
    },
    {
      "id": 10255,
      "name": "findByRouteIdAndTrainType",
      "type": "price.service.PriceServiceImpl",
      "flags": "p",
      "display": "p.s.PSI.findByRouteIdAndTrainType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "8538d1e4d0e163e4af9f5edd30e36fc12de3c1b9c8d17c0c5b5720f3864ca637",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.findByRouteIdAndTrainType(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10256,
      "name": "findByRouteIdsAndTrainTypes",
      "type": "price.service.PriceServiceImpl",
      "flags": "p",
      "display": "p.s.PSI.findByRouteIdsAndTrainTypes",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "4e916f0c94eda9e28f115ffb962f63da55a1685d8b402ba61fa9fdf77cdcbf5f",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.findByRouteIdsAndTrainTypes(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42192,
      "name": "findByRouteIdsAndTrainTypes",
      "type": "price.service.PriceService",
      "flags": "pa",
      "display": "p.s.PS.findByRouteIdsAndTrainTypes",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/edu.fudan.common.util.Response price.service.PriceService.findByRouteIdsAndTrainTypes(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42193,
      "name": "findByRouteIdsAndTrainTypes",
      "type": "price.repository.PriceConfigRepository",
      "flags": "pa",
      "display": "p.r.PCR.findByRouteIdsAndTrainTypes",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "java.util.List"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/java.util.List price.repository.PriceConfigRepository.findByRouteIdsAndTrainTypes(java.util.List, java.util.List)"
    },
    {
      "id": 42194,
      "name": "findAllPriceConfig",
      "type": "price.service.PriceService",
      "flags": "pa",
      "display": "p.s.PS.findAllPriceConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/edu.fudan.common.util.Response price.service.PriceService.findAllPriceConfig(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42195,
      "name": "findAll",
      "type": "price.repository.PriceConfigRepository",
      "flags": "pa",
      "display": "p.r.PCR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/java.util.List price.repository.PriceConfigRepository.findAll(empty)"
    },
    {
      "id": 10260,
      "name": "findAllPriceConfig",
      "type": "price.service.PriceServiceImpl",
      "flags": "p",
      "display": "p.s.PSI.findAllPriceConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "a200f9e3d9c19da6bf277d63f48c332bb6fab0e1200997eeb1f7a7a0e6af969f",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/edu.fudan.common.util.Response price.service.PriceServiceImpl.findAllPriceConfig(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10261,
      "name": "getId",
      "type": "price.entity.PriceConfig",
      "flags": "p",
      "display": "p.e.PC.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/java.lang.String price.entity.PriceConfig.getId(empty)"
    },
    {
      "id": 42197,
      "name": "updatePriceConfig",
      "type": "price.service.PriceService",
      "flags": "pa",
      "display": "p.s.PS.updatePriceConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "price.entity.PriceConfig",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/edu.fudan.common.util.Response price.service.PriceService.updatePriceConfig(price.entity.PriceConfig, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42198,
      "name": "setId",
      "type": "price.entity.PriceConfig",
      "flags": "p",
      "display": "p.e.PC.setId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "69e52eac317680e748fa698b13b4527c910f3cd3f7436b5eb79b7a10eba51484",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/void price.entity.PriceConfig.setId(java.lang.String)"
    },
    {
      "id": 10263,
      "name": "canEqual",
      "type": "price.entity.PriceConfig",
      "flags": "d",
      "display": "p.e.PC.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "a68dc653e04e3320436802d4e774643da76551bbd07cf806c855cbfc1096e4e1",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/boolean price.entity.PriceConfig.canEqual(java.lang.Object)"
    },
    {
      "id": 10264,
      "name": "getBasicPriceRate",
      "type": "price.entity.PriceConfig",
      "flags": "p",
      "display": "p.e.PC.getBasicPriceRate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "double",
      "endpointURI": null,
      "bytecodeHash": "3c2c79f272c179eaf982cb90eb6f0619a2fb56fbe8762f0487b3ada2124e8ec9",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/double price.entity.PriceConfig.getBasicPriceRate(empty)"
    },
    {
      "id": 10266,
      "name": "getFirstClassPriceRate",
      "type": "price.entity.PriceConfig",
      "flags": "p",
      "display": "p.e.PC.getFirstClassPriceRate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "double",
      "endpointURI": null,
      "bytecodeHash": "34c25fc3e412c3dfa25329217331cbc31c623afa2225c914914ba0c77944499c",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/double price.entity.PriceConfig.getFirstClassPriceRate(empty)"
    },
    {
      "id": 6520,
      "name": "<clinit>",
      "type": "price.controller.PriceController",
      "flags": "s",
      "display": "p.c.PC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "722b64a47fdee802e097c7442846cc4d5fe0eff21e8ceb9f2edffe4e5223ed75",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/void price.controller.PriceController.<clinit>(empty)"
    },
    {
      "id": 6521,
      "name": "create",
      "type": "price.controller.PriceController",
      "flags": "p",
      "display": "p.c.PC.create",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "price.entity.PriceConfig",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/priceservice/prices",
      "bytecodeHash": "73116a268bb80eb565b4b72e42c7923a816ada8b71764c6ba176abdbb1de924a",
      "microservice": "ts-price-service",
      "endpointMethod": true,
      "methodSignature": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.create(price.entity.PriceConfig, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6522,
      "name": "delete",
      "type": "price.controller.PriceController",
      "flags": "p",
      "display": "p.c.PC.delete",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/priceservice/prices/{pricesId}",
      "bytecodeHash": "2cce2862feed9d45a8971f6fbed6205a5feb4c4807bf023721eb2c77f629128b",
      "microservice": "ts-price-service",
      "endpointMethod": true,
      "methodSignature": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.delete(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6523,
      "name": "home",
      "type": "price.controller.PriceController",
      "flags": "p",
      "display": "p.c.PC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/java.lang.String price.controller.PriceController.home(empty)"
    },
    {
      "id": 6524,
      "name": "query",
      "type": "price.controller.PriceController",
      "flags": "p",
      "display": "p.c.PC.query",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/priceservice/prices/{routeId}/{trainType}",
      "bytecodeHash": "fa90f021081f72522fd4d9e352ee4456ae641f983e9e7771cddf3489546bbdb2",
      "microservice": "ts-price-service",
      "endpointMethod": true,
      "methodSignature": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.query(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6525,
      "name": "query",
      "type": "price.controller.PriceController",
      "flags": "p",
      "display": "p.c.PC.query",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": null,
      "bytecodeHash": "b80770900a35c398bd9fe0cc80a2f7b54621ac6d6a76c7db238c70a71c386242",
      "microservice": "ts-price-service",
      "endpointMethod": false,
      "methodSignature": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.query(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6526,
      "name": "queryAll",
      "type": "price.controller.PriceController",
      "flags": "p",
      "display": "p.c.PC.queryAll",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/priceservice/prices",
      "bytecodeHash": "1be9d49a2bde016376229a89fa44efc35e0366e5e2c0a79656606d9806e2e399",
      "microservice": "ts-price-service",
      "endpointMethod": true,
      "methodSignature": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.queryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6527,
      "name": "update",
      "type": "price.controller.PriceController",
      "flags": "p",
      "display": "p.c.PC.update",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "price.entity.PriceConfig",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/priceservice/prices",
      "bytecodeHash": "3e23e33f919194cd4511d893aee28f5f563cf005964b763de582d363d1892933",
      "microservice": "ts-price-service",
      "endpointMethod": true,
      "methodSignature": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.update(price.entity.PriceConfig, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47489,
      "name": "payDifference",
      "type": "rebook.service.RebookService",
      "flags": "pa",
      "display": "r.s.RS.payDifference",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "rebook.entity.RebookInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookService.payDifference(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47490,
      "name": "getOldTripId",
      "type": "rebook.entity.RebookInfo",
      "flags": "p",
      "display": "r.e.RI.getOldTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/java.lang.String rebook.entity.RebookInfo.getOldTripId(empty)"
    },
    {
      "id": 14147,
      "name": "getOrderByRebookInfo",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "P",
      "display": "r.s.RSI.getOrderByRebookInfo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "rebook.entity.RebookInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "87d34b15d0dca81b69fdaa26e023f2a1df5514cf7b9b1b3f17dc01e154bf2baf",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.getOrderByRebookInfo(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17924,
      "name": "getServiceUrl",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "P",
      "display": "r.s.RSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4c9cdca9114d46d9b6782076a5fcdd786861a709d13bfd695ca633cdf0ab0f00",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/java.lang.String rebook.service.RebookServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 14149,
      "name": "getTripAllDetailInformation",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "P",
      "display": "r.s.RSI.getTripAllDetailInformation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripAllDetailInfo",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "41d8d13514c8431306beb60effe83afea18974110e3b69d4552d0f00aba1b94d",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.getTripAllDetailInformation(edu.fudan.common.entity.TripAllDetailInfo, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17925,
      "name": "getAuthorizationHeadersFrom",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "ps",
      "display": "r.s.RSI.getAuthorizationHeadersFrom",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpHeaders",
      "endpointURI": null,
      "bytecodeHash": "159ae4347758cd4908426b8b9415e9d46a3faa2636702a680ddf504a9cba6224",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/org.springframework.http.HttpHeaders rebook.service.RebookServiceImpl.getAuthorizationHeadersFrom(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17926,
      "name": "<init>",
      "type": "rebook.service.RebookServiceImpl$3",
      "flags": "",
      "display": "r.s.RSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["rebook.service.RebookServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/void rebook.service.RebookServiceImpl$3.<init>(rebook.service.RebookServiceImpl)"
    },
    {
      "id": 47494,
      "name": "getDate",
      "type": "rebook.entity.RebookInfo",
      "flags": "p",
      "display": "r.e.RI.getDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "5fa52bee8d9ecaf9cc0dbb511c90d8e27e9656598177b730ca11725ba9764f76",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/java.lang.String rebook.entity.RebookInfo.getDate(empty)"
    },
    {
      "id": 17927,
      "name": "<init>",
      "type": "rebook.service.RebookServiceImpl$2",
      "flags": "",
      "display": "r.s.RSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["rebook.service.RebookServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/void rebook.service.RebookServiceImpl$2.<init>(rebook.service.RebookServiceImpl)"
    },
    {
      "id": 47495,
      "name": "getTripId",
      "type": "rebook.entity.RebookInfo",
      "flags": "p",
      "display": "r.e.RI.getTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/java.lang.String rebook.entity.RebookInfo.getTripId(empty)"
    },
    {
      "id": 47623,
      "name": "rebook",
      "type": "rebook.service.RebookService",
      "flags": "pa",
      "display": "r.s.RS.rebook",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "rebook.entity.RebookInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookService.rebook(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14152,
      "name": "payDifferentMoney",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "P",
      "display": "r.s.RSI.payDifferentMoney",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "c752d878fe27bcadcfb4b4e07612f160103ee6768a42cd30322cfcab0e0a2294",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.payDifferentMoney(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47496,
      "name": "getSeatType",
      "type": "rebook.entity.RebookInfo",
      "flags": "p",
      "display": "r.e.RI.getSeatType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "4e87c9fe351fd630631b8c2c11fde4a77d4cbc7a34bda59eecb5686ec0a54d34",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/int rebook.entity.RebookInfo.getSeatType(empty)"
    },
    {
      "id": 14153,
      "name": "updateOrder",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "P",
      "display": "r.s.RSI.updateOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Order",
        "rebook.entity.RebookInfo",
        "edu.fudan.common.entity.TripAllDetail",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "607abeee0bc262abb3b45f06f2058184583645e8dbbc1038d393b3dd4ccadd6e",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, rebook.entity.RebookInfo, edu.fudan.common.entity.TripAllDetail, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47501,
      "name": "getLoginId",
      "type": "rebook.entity.RebookInfo",
      "flags": "p",
      "display": "r.e.RI.getLoginId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/java.lang.String rebook.entity.RebookInfo.getLoginId(empty)"
    },
    {
      "id": 10638,
      "name": "payDifference",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "p",
      "display": "r.s.RSI.payDifference",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "rebook.entity.RebookInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "866628a3327556b28765f7b168e93527e11253c14a295a59f89596dbc0421789",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.payDifference(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17934,
      "name": "getRouteByRouteId",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "P",
      "display": "r.s.RSI.getRouteByRouteId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.Route",
      "endpointURI": null,
      "bytecodeHash": "27b9a4ede17bc5a24618ec6a70a3b5b618859ef3bb66d080d440592c009cfe83",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/edu.fudan.common.entity.Route rebook.service.RebookServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17935,
      "name": "queryTrainTypeByName",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "p",
      "display": "r.s.RSI.queryTrainTypeByName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.TrainType",
      "endpointURI": null,
      "bytecodeHash": "b9eafd6846735f95efb918b188dd863ecaf038e1403a5702b62ecac4d24a5546",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/edu.fudan.common.entity.TrainType rebook.service.RebookServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17936,
      "name": "dipatchSeat",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "p",
      "display": "r.s.RSI.dipatchSeat",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "int",
        "int",
        "java.util.List",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.Ticket",
      "endpointURI": null,
      "bytecodeHash": "2654288678fdc2782a81d3fe200f38777103234f4f76d0c5ae1a79edff01f58b",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/edu.fudan.common.entity.Ticket rebook.service.RebookServiceImpl.dipatchSeat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17937,
      "name": "tripGD",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "P",
      "display": "r.s.RSI.tripGD",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "d5b9e2d2c799653d1fc2edcf64e0995a89c29a209c3582a877f12f689a9cba53",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.tripGD(java.lang.String)"
    },
    {
      "id": 17938,
      "name": "updateOrder",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "P",
      "display": "r.s.RSI.updateOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Order",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "f527bb421ab59556d9dbc66281256436fad15f77bf3397f49184a84e30dfb5f7",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.updateOrder(edu.fudan.common.entity.Order, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10643,
      "name": "rebook",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "p",
      "display": "r.s.RSI.rebook",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "rebook.entity.RebookInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "684b232bd09d06fb6498cc88d919726c949bc1dd21fbacb46d36dcad336f37b8",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.rebook(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14164,
      "name": "checkTime",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "P",
      "display": "r.s.RSI.checkTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String", "java.lang.String"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "8daf6de423db49891f8461ad0dc9d93c51fe4a7bb9a9672bc069122d5f96d23f",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.checkTime(java.lang.String, java.lang.String)"
    },
    {
      "id": 17942,
      "name": "deleteOrder",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "P",
      "display": "r.s.RSI.deleteOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "d2417d38efe1ad734cb7662fe26900772c3964bd8a104857fb5f39bcdb0176fe",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.deleteOrder(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17943,
      "name": "createOrder",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "P",
      "display": "r.s.RSI.createOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Order",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "9ac515af8c34f73edd02f83c86cc0acf6255dd94dcfc2f496ef054bbed4a3aa5",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/edu.fudan.common.util.Response rebook.service.RebookServiceImpl.createOrder(edu.fudan.common.entity.Order, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14168,
      "name": "drawBackMoney",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "P",
      "display": "r.s.RSI.drawBackMoney",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0077b34a80473882bcf5ae8780dac4a4dcc1f9b53f313b76b3a03e768558e203",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/boolean rebook.service.RebookServiceImpl.drawBackMoney(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 21597,
      "name": "<init>",
      "type": "rebook.service.RebookServiceImpl$1",
      "flags": "",
      "display": "r.s.RSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["rebook.service.RebookServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/void rebook.service.RebookServiceImpl$1.<init>(rebook.service.RebookServiceImpl)"
    },
    {
      "id": 6754,
      "name": "<clinit>",
      "type": "rebook.controller.RebookController",
      "flags": "s",
      "display": "r.c.RC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "c0efbba6d288f9aa9d83335340b101616455ef2f11dcff8549a8001f3f8ae680",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/void rebook.controller.RebookController.<clinit>(empty)"
    },
    {
      "id": 6755,
      "name": "home",
      "type": "rebook.controller.RebookController",
      "flags": "p",
      "display": "r.c.RC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/java.lang.String rebook.controller.RebookController.home(empty)"
    },
    {
      "id": 6756,
      "name": "payDifference",
      "type": "rebook.controller.RebookController",
      "flags": "p",
      "display": "r.c.RC.payDifference",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "rebook.entity.RebookInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/rebookservice/rebook/difference",
      "bytecodeHash": "f16537ac16a9cc82d66849439346c04970f962b83993f67edf7c192ac7345553",
      "microservice": "ts-rebook-service",
      "endpointMethod": true,
      "methodSignature": "ts-rebook-service/org.springframework.http.HttpEntity rebook.controller.RebookController.payDifference(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6757,
      "name": "rebook",
      "type": "rebook.controller.RebookController",
      "flags": "p",
      "display": "r.c.RC.rebook",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "rebook.entity.RebookInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/rebookservice/rebook",
      "bytecodeHash": "96f1b65e2f13f61b7e54e992fb979430ec98e1568361d4d672786aca06cc001b",
      "microservice": "ts-rebook-service",
      "endpointMethod": true,
      "methodSignature": "ts-rebook-service/org.springframework.http.HttpEntity rebook.controller.RebookController.rebook(rebook.entity.RebookInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6758,
      "name": "<clinit>",
      "type": "rebook.service.RebookServiceImpl",
      "flags": "s",
      "display": "r.s.RSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "5ac50b5725eeda6c43fa8f6a93bf2b22dda3b64e03b5656c08571a0489e171cd",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/void rebook.service.RebookServiceImpl.<clinit>(empty)"
    },
    {
      "id": 47476,
      "name": "getOrderId",
      "type": "rebook.entity.RebookInfo",
      "flags": "p",
      "display": "r.e.RI.getOrderId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-rebook-service",
      "endpointMethod": false,
      "methodSignature": "ts-rebook-service/java.lang.String rebook.entity.RebookInfo.getOrderId(empty)"
    },
    {
      "id": 17280,
      "name": "<init>",
      "type": "plan.service.RoutePlanServiceImpl$7",
      "flags": "",
      "display": "p.s.RPSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["plan.service.RoutePlanServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl$7.<init>(plan.service.RoutePlanServiceImpl)"
    },
    {
      "id": 42177,
      "name": "searchQuickestResult",
      "type": "plan.service.RoutePlanService",
      "flags": "pa",
      "display": "p.s.RPS.searchQuickestResult",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.RoutePlanInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanService.searchQuickestResult(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17283,
      "name": "<init>",
      "type": "plan.service.RoutePlanServiceImpl$8",
      "flags": "",
      "display": "p.s.RPSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["plan.service.RoutePlanServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl$8.<init>(plan.service.RoutePlanServiceImpl)"
    },
    {
      "id": 17291,
      "name": "<init>",
      "type": "plan.service.RoutePlanServiceImpl$5",
      "flags": "",
      "display": "p.s.RPSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["plan.service.RoutePlanServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl$5.<init>(plan.service.RoutePlanServiceImpl)"
    },
    {
      "id": 6483,
      "name": "<clinit>",
      "type": "plan.controller.RoutePlanController",
      "flags": "s",
      "display": "p.c.RPC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "66d95e034b6f741c3c396531f65ebe975240e5be41cc14e1b1435e717739a533",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/void plan.controller.RoutePlanController.<clinit>(empty)"
    },
    {
      "id": 6484,
      "name": "getCheapestRoutes",
      "type": "plan.controller.RoutePlanController",
      "flags": "p",
      "display": "p.c.RPC.getCheapestRoutes",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.RoutePlanInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/routeplanservice/routePlan/cheapestRoute",
      "bytecodeHash": "9e823b26fc96b7e26619071c41b650a986f7b0d694652861758c407ec51a044d",
      "microservice": "ts-route-plan-service",
      "endpointMethod": true,
      "methodSignature": "ts-route-plan-service/org.springframework.http.HttpEntity plan.controller.RoutePlanController.getCheapestRoutes(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6485,
      "name": "getMinStopStations",
      "type": "plan.controller.RoutePlanController",
      "flags": "p",
      "display": "p.c.RPC.getMinStopStations",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.RoutePlanInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/routeplanservice/routePlan/minStopStations",
      "bytecodeHash": "49f39acb60c8a0a672307dfe384661363e7d180b8f60b95c4b25f82cb11ddf94",
      "microservice": "ts-route-plan-service",
      "endpointMethod": true,
      "methodSignature": "ts-route-plan-service/org.springframework.http.HttpEntity plan.controller.RoutePlanController.getMinStopStations(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6486,
      "name": "getQuickestRoutes",
      "type": "plan.controller.RoutePlanController",
      "flags": "p",
      "display": "p.c.RPC.getQuickestRoutes",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.RoutePlanInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/routeplanservice/routePlan/quickestRoute",
      "bytecodeHash": "1d263e23867b888d43c5bf3216c831ba7c568655b23638c6f05eb94a00846e0a",
      "microservice": "ts-route-plan-service",
      "endpointMethod": true,
      "methodSignature": "ts-route-plan-service/org.springframework.http.HttpEntity plan.controller.RoutePlanController.getQuickestRoutes(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6487,
      "name": "home",
      "type": "plan.controller.RoutePlanController",
      "flags": "p",
      "display": "p.c.RPC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/java.lang.String plan.controller.RoutePlanController.home(empty)"
    },
    {
      "id": 6488,
      "name": "<clinit>",
      "type": "plan.service.RoutePlanServiceImpl",
      "flags": "s",
      "display": "p.s.RPSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "d555ec58b64d4f1c5fffd02800e516686926b16dc546252f9ff3abd98ea99253",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl.<clinit>(empty)"
    },
    {
      "id": 13595,
      "name": "getTripFromHighSpeedTravelServive",
      "type": "plan.service.RoutePlanServiceImpl",
      "flags": "P",
      "display": "p.s.RPSI.getTripFromHighSpeedTravelServive",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "2ed394b4eec9b1054f88d53b2d9e6dff5bf1d4f8d5e8623d3b122eee2e75bc6b",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/java.util.ArrayList plan.service.RoutePlanServiceImpl.getTripFromHighSpeedTravelServive(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13596,
      "name": "getTripFromNormalTrainTravelService",
      "type": "plan.service.RoutePlanServiceImpl",
      "flags": "P",
      "display": "p.s.RPSI.getTripFromNormalTrainTravelService",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "a65890152383ab420473f388fe40e30a52a7cda9117be32445d7bafeb5eb3a08",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/java.util.ArrayList plan.service.RoutePlanServiceImpl.getTripFromNormalTrainTravelService(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13598,
      "name": "getStationList",
      "type": "plan.service.RoutePlanServiceImpl",
      "flags": "P",
      "display": "p.s.RPSI.getStationList",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "50411fcafe8c713e6b59bf8605aa3d2e0f3a534091ae09f6fb12c8268c52db8c",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/java.util.List plan.service.RoutePlanServiceImpl.getStationList(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13605,
      "name": "getServiceUrl",
      "type": "plan.service.RoutePlanServiceImpl",
      "flags": "P",
      "display": "p.s.RPSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4c9cdca9114d46d9b6782076a5fcdd786861a709d13bfd695ca633cdf0ab0f00",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/java.lang.String plan.service.RoutePlanServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 13606,
      "name": "<init>",
      "type": "plan.service.RoutePlanServiceImpl$1",
      "flags": "",
      "display": "p.s.RPSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["plan.service.RoutePlanServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl$1.<init>(plan.service.RoutePlanServiceImpl)"
    },
    {
      "id": 13610,
      "name": "<init>",
      "type": "plan.service.RoutePlanServiceImpl$2",
      "flags": "",
      "display": "p.s.RPSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["plan.service.RoutePlanServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl$2.<init>(plan.service.RoutePlanServiceImpl)"
    },
    {
      "id": 42154,
      "name": "searchCheapestResult",
      "type": "plan.service.RoutePlanService",
      "flags": "pa",
      "display": "p.s.RPS.searchCheapestResult",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.RoutePlanInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanService.searchCheapestResult(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13611,
      "name": "<init>",
      "type": "plan.service.RoutePlanServiceImpl$3",
      "flags": "",
      "display": "p.s.RPSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["plan.service.RoutePlanServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl$3.<init>(plan.service.RoutePlanServiceImpl)"
    },
    {
      "id": 13612,
      "name": "<init>",
      "type": "plan.service.RoutePlanServiceImpl$4",
      "flags": "",
      "display": "p.s.RPSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["plan.service.RoutePlanServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl$4.<init>(plan.service.RoutePlanServiceImpl)"
    },
    {
      "id": 10221,
      "name": "searchCheapestResult",
      "type": "plan.service.RoutePlanServiceImpl",
      "flags": "p",
      "display": "p.s.RPSI.searchCheapestResult",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.RoutePlanInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "0b6e7b156be660befa38335e8c0d0765e1cd66663d0bc11b7c91611d6a50b44b",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchCheapestResult(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13613,
      "name": "getRouteByRouteId",
      "type": "plan.service.RoutePlanServiceImpl",
      "flags": "P",
      "display": "p.s.RPSI.getRouteByRouteId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.Route",
      "endpointURI": null,
      "bytecodeHash": "be2221a6b1225325d76d50756e4c57d040f2e0b58b6bb15ddaf9f6a29c1a5fc8",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/edu.fudan.common.entity.Route plan.service.RoutePlanServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10223,
      "name": "searchMinStopStations",
      "type": "plan.service.RoutePlanServiceImpl",
      "flags": "p",
      "display": "p.s.RPSI.searchMinStopStations",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.RoutePlanInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "161d3b5502def2d69c88ca5464e53015a7402e0d0ee8573f3dd4d9c0c58a30f3",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchMinStopStations(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10224,
      "name": "searchQuickestResult",
      "type": "plan.service.RoutePlanServiceImpl",
      "flags": "p",
      "display": "p.s.RPSI.searchQuickestResult",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.RoutePlanInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "635352cd18c567ced93b3bda492a75da42d6657f786796a53064ebffcb71ccbe",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanServiceImpl.searchQuickestResult(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42169,
      "name": "searchMinStopStations",
      "type": "plan.service.RoutePlanService",
      "flags": "pa",
      "display": "p.s.RPS.searchMinStopStations",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.RoutePlanInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/edu.fudan.common.util.Response plan.service.RoutePlanService.searchMinStopStations(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17279,
      "name": "<init>",
      "type": "plan.service.RoutePlanServiceImpl$6",
      "flags": "",
      "display": "p.s.RPSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["plan.service.RoutePlanServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-route-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-plan-service/void plan.service.RoutePlanServiceImpl$6.<init>(plan.service.RoutePlanServiceImpl)"
    },
    {
      "id": 13632,
      "name": "setStartStation",
      "type": "route.entity.Route",
      "flags": "p",
      "display": "r.e.R.setStartStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "48fb720aa2a9b68dfbb952c6e9e11d36348ceb48bf0fec91e3294ba5ac037a6d",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/void route.entity.Route.setStartStation(java.lang.String)"
    },
    {
      "id": 42176,
      "name": "getId",
      "type": "route.entity.RouteInfo",
      "flags": "p",
      "display": "r.e.RI.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "804b3ae705e9e66161446b56a0c8ea320f025aad25a62dc23af37c7c98396f39",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/java.lang.String route.entity.RouteInfo.getId(empty)"
    },
    {
      "id": 13633,
      "name": "setEndStation",
      "type": "route.entity.Route",
      "flags": "p",
      "display": "r.e.R.setEndStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1d639c8f9d43d88d1092bc7e304fe5af5f3947dc8cd8d30fe244a71c9d82d654",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/void route.entity.Route.setEndStation(java.lang.String)"
    },
    {
      "id": 13634,
      "name": "setStations",
      "type": "route.entity.Route",
      "flags": "p",
      "display": "r.e.R.setStations",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1c059b5fe325fde7d43b063306b8ea508a338bafb0f3efc8a9c0b94e3f6e422c",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/void route.entity.Route.setStations(java.util.List)"
    },
    {
      "id": 42178,
      "name": "findById",
      "type": "route.repository.RouteRepository",
      "flags": "pa",
      "display": "r.r.RR.findById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.Optional",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/java.util.Optional route.repository.RouteRepository.findById(java.lang.String)"
    },
    {
      "id": 10243,
      "name": "deleteRoute",
      "type": "route.service.RouteServiceImpl",
      "flags": "p",
      "display": "r.s.RSI.deleteRoute",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "094ebdd10ff2ff7afb0c60f8eab21bfb6818ca6e5d03382a51e186f45dbc7e44",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.deleteRoute(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13635,
      "name": "setDistances",
      "type": "route.entity.Route",
      "flags": "p",
      "display": "r.e.R.setDistances",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "935836f6468fbbdce3aa550163b41db4acc66eaba962e885841470780dddd4d2",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/void route.entity.Route.setDistances(java.util.List)"
    },
    {
      "id": 42179,
      "name": "save",
      "type": "route.repository.RouteRepository",
      "flags": "pby",
      "display": "r.r.RR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "7e9274106bf238ea1d13b116d8b657fd5276d311b4a145e3ba0abd56f62c05a9",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/java.lang.Object route.repository.RouteRepository.save(java.lang.Object)"
    },
    {
      "id": 42182,
      "name": "deleteRoute",
      "type": "route.service.RouteService",
      "flags": "pa",
      "display": "r.s.RS.deleteRoute",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/edu.fudan.common.util.Response route.service.RouteService.deleteRoute(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10247,
      "name": "getAllRoutes",
      "type": "route.service.RouteServiceImpl",
      "flags": "p",
      "display": "r.s.RSI.getAllRoutes",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "47a898dc1215813bea438a277503a3bd5e3c89b866f1ec8c563c2a77db5cd8a4",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.getAllRoutes(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42183,
      "name": "removeRouteById",
      "type": "route.repository.RouteRepository",
      "flags": "pa",
      "display": "r.r.RR.removeRouteById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/void route.repository.RouteRepository.removeRouteById(java.lang.String)"
    },
    {
      "id": 10248,
      "name": "getRouteById",
      "type": "route.service.RouteServiceImpl",
      "flags": "p",
      "display": "r.s.RSI.getRouteById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "9a2890a139d78b8612f2b2aa806883e71db79df59ea287be8bfc0f06572d5876",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.getRouteById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10249,
      "name": "getRouteByIds",
      "type": "route.service.RouteServiceImpl",
      "flags": "p",
      "display": "r.s.RSI.getRouteByIds",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "858f1b91cddc4186b5e315a27bc337f859b780c6cb937d79c6075497ed23c0e8",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.getRouteByIds(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42185,
      "name": "getAllRoutes",
      "type": "route.service.RouteService",
      "flags": "pa",
      "display": "r.s.RS.getAllRoutes",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/edu.fudan.common.util.Response route.service.RouteService.getAllRoutes(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10250,
      "name": "getRouteByStartAndEnd",
      "type": "route.service.RouteServiceImpl",
      "flags": "p",
      "display": "r.s.RSI.getRouteByStartAndEnd",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "7276d0bdde5ee858799b115c9d53c28baa8c4611990c90a01545f2b5a2b8cb84",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.getRouteByStartAndEnd(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42186,
      "name": "findAll",
      "type": "route.repository.RouteRepository",
      "flags": "pa",
      "display": "r.r.RR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/java.util.ArrayList route.repository.RouteRepository.findAll(empty)"
    },
    {
      "id": 10251,
      "name": "canEqual",
      "type": "route.entity.Route",
      "flags": "d",
      "display": "r.e.R.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "a68dc653e04e3320436802d4e774643da76551bbd07cf806c855cbfc1096e4e1",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/boolean route.entity.Route.canEqual(java.lang.Object)"
    },
    {
      "id": 10252,
      "name": "getId",
      "type": "route.entity.Route",
      "flags": "p",
      "display": "r.e.R.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/java.lang.String route.entity.Route.getId(empty)"
    },
    {
      "id": 42188,
      "name": "getRouteById",
      "type": "route.service.RouteService",
      "flags": "pa",
      "display": "r.s.RS.getRouteById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/edu.fudan.common.util.Response route.service.RouteService.getRouteById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10253,
      "name": "getStations",
      "type": "route.entity.Route",
      "flags": "p",
      "display": "r.e.R.getStations",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/java.util.List route.entity.Route.getStations(empty)"
    },
    {
      "id": 42189,
      "name": "getRouteByIds",
      "type": "route.service.RouteService",
      "flags": "pa",
      "display": "r.s.RS.getRouteByIds",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/edu.fudan.common.util.Response route.service.RouteService.getRouteByIds(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10254,
      "name": "getDistances",
      "type": "route.entity.Route",
      "flags": "p",
      "display": "r.e.R.getDistances",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/java.util.List route.entity.Route.getDistances(empty)"
    },
    {
      "id": 42190,
      "name": "findByIds",
      "type": "route.repository.RouteRepository",
      "flags": "pa",
      "display": "r.r.RR.findByIds",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/java.util.List route.repository.RouteRepository.findByIds(java.util.List)"
    },
    {
      "id": 10255,
      "name": "getStartStation",
      "type": "route.entity.Route",
      "flags": "p",
      "display": "r.e.R.getStartStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/java.lang.String route.entity.Route.getStartStation(empty)"
    },
    {
      "id": 42191,
      "name": "getRouteByStartAndEnd",
      "type": "route.service.RouteService",
      "flags": "pa",
      "display": "r.s.RS.getRouteByStartAndEnd",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/edu.fudan.common.util.Response route.service.RouteService.getRouteByStartAndEnd(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10256,
      "name": "getEndStation",
      "type": "route.entity.Route",
      "flags": "p",
      "display": "r.e.R.getEndStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "668501b084f2dc96265ceb4e39579391868136fffaeab12c3f93e3c91daee2e4",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/java.lang.String route.entity.Route.getEndStation(empty)"
    },
    {
      "id": 42159,
      "name": "getStartStation",
      "type": "route.entity.RouteInfo",
      "flags": "p",
      "display": "r.e.RI.getStartStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/java.lang.String route.entity.RouteInfo.getStartStation(empty)"
    },
    {
      "id": 6512,
      "name": "<clinit>",
      "type": "route.controller.RouteController",
      "flags": "s",
      "display": "r.c.RC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "0b8f77f44048cc11847e8f21c8429419711444eef3d88516f6414cbe4307ae76",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/void route.controller.RouteController.<clinit>(empty)"
    },
    {
      "id": 42160,
      "name": "getEndStation",
      "type": "route.entity.RouteInfo",
      "flags": "p",
      "display": "r.e.RI.getEndStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/java.lang.String route.entity.RouteInfo.getEndStation(empty)"
    },
    {
      "id": 6513,
      "name": "createAndModifyRoute",
      "type": "route.controller.RouteController",
      "flags": "p",
      "display": "r.c.RC.createAndModifyRoute",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "route.entity.RouteInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.ResponseEntity",
      "endpointURI": "/api/v1/routeservice/routes",
      "bytecodeHash": "87492139d0651012c913de9482ccc5a2994c30c4c595fd30c077d37dedaf4037",
      "microservice": "ts-route-service",
      "endpointMethod": true,
      "methodSignature": "ts-route-service/org.springframework.http.ResponseEntity route.controller.RouteController.createAndModifyRoute(route.entity.RouteInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6514,
      "name": "deleteRoute",
      "type": "route.controller.RouteController",
      "flags": "p",
      "display": "r.c.RC.deleteRoute",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/routeservice/routes/{routeId}",
      "bytecodeHash": "cef9df457efe9655eb8e5be7b261398835388edd7de0459c1c9c250bc7659ece",
      "microservice": "ts-route-service",
      "endpointMethod": true,
      "methodSignature": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.deleteRoute(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6515,
      "name": "home",
      "type": "route.controller.RouteController",
      "flags": "p",
      "display": "r.c.RC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/java.lang.String route.controller.RouteController.home(empty)"
    },
    {
      "id": 6516,
      "name": "queryAll",
      "type": "route.controller.RouteController",
      "flags": "p",
      "display": "r.c.RC.queryAll",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/routeservice/routes",
      "bytecodeHash": "c7f0f46aad5fbdd8e28878771c9d237447ab26764426a90801ec81fb9216d203",
      "microservice": "ts-route-service",
      "endpointMethod": true,
      "methodSignature": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6517,
      "name": "queryById",
      "type": "route.controller.RouteController",
      "flags": "p",
      "display": "r.c.RC.queryById",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/routeservice/routes/{routeId}",
      "bytecodeHash": "fa23b2f7a50138e64f36cb162025ff604077af525b1d2cfbf8d056d48b824902",
      "microservice": "ts-route-service",
      "endpointMethod": true,
      "methodSignature": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6518,
      "name": "queryByIds",
      "type": "route.controller.RouteController",
      "flags": "p",
      "display": "r.c.RC.queryByIds",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": null,
      "bytecodeHash": "d5d6000580a421cbd4fbafe66f80a7f24de3c81058cedd9b1a988f89a806b084",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryByIds(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6519,
      "name": "queryByStartAndTerminal",
      "type": "route.controller.RouteController",
      "flags": "p",
      "display": "r.c.RC.queryByStartAndTerminal",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/routeservice/routes/{start}/{end}",
      "bytecodeHash": "66fe24178b4409316ca013573517d616f43187a4fd5119de0cafe500698a127f",
      "microservice": "ts-route-service",
      "endpointMethod": true,
      "methodSignature": "ts-route-service/org.springframework.http.HttpEntity route.controller.RouteController.queryByStartAndTerminal(java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6520,
      "name": "equals",
      "type": "route.entity.Route",
      "flags": "p",
      "display": "r.e.R.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "5a7270af1a704b40dad1a12441920a656aecea6a625946d758fd4449059bd266",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/boolean route.entity.Route.equals(java.lang.Object)"
    },
    {
      "id": 6521,
      "name": "hashCode",
      "type": "route.entity.Route",
      "flags": "p",
      "display": "r.e.R.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "2582de131e5d7712f117449f2fac5eef3699407bd465fbf59244503bf44dc7bb",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/int route.entity.Route.hashCode(empty)"
    },
    {
      "id": 6522,
      "name": "toString",
      "type": "route.entity.Route",
      "flags": "p",
      "display": "r.e.R.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "9be683785a25a00e1904a130b11d353ed7326fcc776f48fbc0f5849445eabc84",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/java.lang.String route.entity.Route.toString(empty)"
    },
    {
      "id": 6523,
      "name": "<clinit>",
      "type": "route.service.RouteServiceImpl",
      "flags": "s",
      "display": "r.s.RSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "42bce11c775ca0ddc786505844af01a0ea366c36db23b7f4d55634c6742b6c5f",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/void route.service.RouteServiceImpl.<clinit>(empty)"
    },
    {
      "id": 42173,
      "name": "createAndModify",
      "type": "route.service.RouteService",
      "flags": "pa",
      "display": "r.s.RS.createAndModify",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "route.entity.RouteInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/edu.fudan.common.util.Response route.service.RouteService.createAndModify(route.entity.RouteInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10238,
      "name": "createAndModify",
      "type": "route.service.RouteServiceImpl",
      "flags": "p",
      "display": "r.s.RSI.createAndModify",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "route.entity.RouteInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "ccd6fae72e8a18014c013231677e5363f5ba721510c2c4d941e55cdc97ed981c",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/edu.fudan.common.util.Response route.service.RouteServiceImpl.createAndModify(route.entity.RouteInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13630,
      "name": "<init>",
      "type": "route.entity.Route",
      "flags": "p",
      "display": "r.e.R.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "2e3a7756e3a8f17765266b6e4240358450faa67bfa032948f10904d77903deae",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/void route.entity.Route.<init>(empty)"
    },
    {
      "id": 42174,
      "name": "getStationList",
      "type": "route.entity.RouteInfo",
      "flags": "p",
      "display": "r.e.RI.getStationList",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/java.lang.String route.entity.RouteInfo.getStationList(empty)"
    },
    {
      "id": 42175,
      "name": "getDistanceList",
      "type": "route.entity.RouteInfo",
      "flags": "p",
      "display": "r.e.RI.getDistanceList",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-route-service",
      "endpointMethod": false,
      "methodSignature": "ts-route-service/java.lang.String route.entity.RouteInfo.getDistanceList(empty)"
    },
    {
      "id": 42090,
      "name": "distributeSeat",
      "type": "seat.service.SeatService",
      "flags": "pa",
      "display": "s.s.SS.distributeSeat",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Seat",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-seat-service",
      "endpointMethod": false,
      "methodSignature": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatService.distributeSeat(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13547,
      "name": "getServiceUrl",
      "type": "seat.service.SeatServiceImpl",
      "flags": "P",
      "display": "s.s.SSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4c9cdca9114d46d9b6782076a5fcdd786861a709d13bfd695ca633cdf0ab0f00",
      "microservice": "ts-seat-service",
      "endpointMethod": false,
      "methodSignature": "ts-seat-service/java.lang.String seat.service.SeatServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 13548,
      "name": "<init>",
      "type": "seat.service.SeatServiceImpl$1",
      "flags": "",
      "display": "s.s.SSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["seat.service.SeatServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-seat-service",
      "endpointMethod": false,
      "methodSignature": "ts-seat-service/void seat.service.SeatServiceImpl$1.<init>(seat.service.SeatServiceImpl)"
    },
    {
      "id": 17231,
      "name": "<init>",
      "type": "seat.service.SeatServiceImpl$5",
      "flags": "",
      "display": "s.s.SSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["seat.service.SeatServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-seat-service",
      "endpointMethod": false,
      "methodSignature": "ts-seat-service/void seat.service.SeatServiceImpl$5.<init>(seat.service.SeatServiceImpl)"
    },
    {
      "id": 13552,
      "name": "<init>",
      "type": "seat.service.SeatServiceImpl$2",
      "flags": "",
      "display": "s.s.SSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["seat.service.SeatServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-seat-service",
      "endpointMethod": false,
      "methodSignature": "ts-seat-service/void seat.service.SeatServiceImpl$2.<init>(seat.service.SeatServiceImpl)"
    },
    {
      "id": 6451,
      "name": "<clinit>",
      "type": "seat.controller.SeatController",
      "flags": "s",
      "display": "s.c.SC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "ba0303d59eab0da189eb1df6c94ed9107a21fd5d0145464b3764b496e058e32c",
      "microservice": "ts-seat-service",
      "endpointMethod": false,
      "methodSignature": "ts-seat-service/void seat.controller.SeatController.<clinit>(empty)"
    },
    {
      "id": 13555,
      "name": "isContained",
      "type": "seat.service.SeatServiceImpl",
      "flags": "P",
      "display": "s.s.SSI.isContained",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.Set", "int"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0a0c9fc7b1c76072b4cbe70840e2ad5095af012569b1f48e5c05b4ccf0d8fecf",
      "microservice": "ts-seat-service",
      "endpointMethod": false,
      "methodSignature": "ts-seat-service/boolean seat.service.SeatServiceImpl.isContained(java.util.Set, int)"
    },
    {
      "id": 6452,
      "name": "create",
      "type": "seat.controller.SeatController",
      "flags": "p",
      "display": "s.c.SC.create",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.Seat",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/seatservice/seats",
      "bytecodeHash": "a66c18659709fd8328e023efef1bbf2cb2c2b281502f3b4388bf1694f0908b61",
      "microservice": "ts-seat-service",
      "endpointMethod": true,
      "methodSignature": "ts-seat-service/org.springframework.http.HttpEntity seat.controller.SeatController.create(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42100,
      "name": "getLeftTicketOfInterval",
      "type": "seat.service.SeatService",
      "flags": "pa",
      "display": "s.s.SS.getLeftTicketOfInterval",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Seat",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-seat-service",
      "endpointMethod": false,
      "methodSignature": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatService.getLeftTicketOfInterval(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6453,
      "name": "getLeftTicketOfInterval",
      "type": "seat.controller.SeatController",
      "flags": "p",
      "display": "s.c.SC.getLeftTicketOfInterval",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.Seat",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/seatservice/seats/left_tickets",
      "bytecodeHash": "6ffa59e2f689e1aeb4a1f9047363491e6c63627eaf34104fb81a2e94661b0f8f",
      "microservice": "ts-seat-service",
      "endpointMethod": true,
      "methodSignature": "ts-seat-service/org.springframework.http.HttpEntity seat.controller.SeatController.getLeftTicketOfInterval(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6454,
      "name": "home",
      "type": "seat.controller.SeatController",
      "flags": "p",
      "display": "s.c.SC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-seat-service",
      "endpointMethod": false,
      "methodSignature": "ts-seat-service/java.lang.String seat.controller.SeatController.home(empty)"
    },
    {
      "id": 13558,
      "name": "<init>",
      "type": "seat.service.SeatServiceImpl$3",
      "flags": "",
      "display": "s.s.SSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["seat.service.SeatServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-seat-service",
      "endpointMethod": false,
      "methodSignature": "ts-seat-service/void seat.service.SeatServiceImpl$3.<init>(seat.service.SeatServiceImpl)"
    },
    {
      "id": 6455,
      "name": "<clinit>",
      "type": "seat.service.SeatServiceImpl",
      "flags": "s",
      "display": "s.s.SSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "68c018f12cf26359b1181fcc484e04d01c08bf59b134b6e1dbdedda3e4ee5066",
      "microservice": "ts-seat-service",
      "endpointMethod": false,
      "methodSignature": "ts-seat-service/void seat.service.SeatServiceImpl.<clinit>(empty)"
    },
    {
      "id": 13559,
      "name": "<init>",
      "type": "seat.service.SeatServiceImpl$4",
      "flags": "",
      "display": "s.s.SSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["seat.service.SeatServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-seat-service",
      "endpointMethod": false,
      "methodSignature": "ts-seat-service/void seat.service.SeatServiceImpl$4.<init>(seat.service.SeatServiceImpl)"
    },
    {
      "id": 13560,
      "name": "getDirectProportion",
      "type": "seat.service.SeatServiceImpl",
      "flags": "P",
      "display": "s.s.SSI.getDirectProportion",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "double",
      "endpointURI": null,
      "bytecodeHash": "a2501825db54ab6927cf6bf4952b86a55d3dc02a99744afdcf715341eec373be",
      "microservice": "ts-seat-service",
      "endpointMethod": false,
      "methodSignature": "ts-seat-service/double seat.service.SeatServiceImpl.getDirectProportion(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10173,
      "name": "distributeSeat",
      "type": "seat.service.SeatServiceImpl",
      "flags": "p",
      "display": "s.s.SSI.distributeSeat",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Seat",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "ceb10e95024bfafa66174af30bd4ea933924f838280bbcf50e9325be892931c7",
      "microservice": "ts-seat-service",
      "endpointMethod": false,
      "methodSignature": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.distributeSeat(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10175,
      "name": "getLeftTicketOfInterval",
      "type": "seat.service.SeatServiceImpl",
      "flags": "p",
      "display": "s.s.SSI.getLeftTicketOfInterval",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.Seat",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "50119be76a3de75982fbe7c4f18eb4793f21c79343b1cf0504a712f3bd3c415a",
      "microservice": "ts-seat-service",
      "endpointMethod": false,
      "methodSignature": "ts-seat-service/edu.fudan.common.util.Response seat.service.SeatServiceImpl.getLeftTicketOfInterval(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10240,
      "name": "check",
      "type": "security.service.SecurityServiceImpl",
      "flags": "p",
      "display": "s.s.SSI.check",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "4b896afe940a6b96c317a0014c240ec0f1dc163faa079f936a3ed9c63f269a64",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.check(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10242,
      "name": "getName",
      "type": "security.entity.SecurityConfig",
      "flags": "p",
      "display": "s.e.SC.getName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/java.lang.String security.entity.SecurityConfig.getName(empty)"
    },
    {
      "id": 10243,
      "name": "addNewSecurityConfig",
      "type": "security.service.SecurityServiceImpl",
      "flags": "p",
      "display": "s.s.SSI.addNewSecurityConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "security.entity.SecurityConfig",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "13156855745624fa50376dabd7ca2befab5bde1bc09d1493895e304b0f32dd64",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.addNewSecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10244,
      "name": "deleteSecurityConfig",
      "type": "security.service.SecurityServiceImpl",
      "flags": "p",
      "display": "s.s.SSI.deleteSecurityConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "e25186c3771a1d7f8f4e481800187822aeaa145064282f39337c76c03d0a1a1a",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.deleteSecurityConfig(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10248,
      "name": "findAllSecurityConfig",
      "type": "security.service.SecurityServiceImpl",
      "flags": "p",
      "display": "s.s.SSI.findAllSecurityConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "6289a305cd51fc48f761e36bc7b1d844300af828fa1db9b42611bf8cc912f1ec",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.findAllSecurityConfig(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10249,
      "name": "modifySecurityConfig",
      "type": "security.service.SecurityServiceImpl",
      "flags": "p",
      "display": "s.s.SSI.modifySecurityConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "security.entity.SecurityConfig",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "71fa5cec19dea4d119cfe8caa098a76d943a55828bac3f2d140a37f3f7661725",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityServiceImpl.modifySecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42185,
      "name": "check",
      "type": "security.service.SecurityService",
      "flags": "pa",
      "display": "s.s.SS.check",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityService.check(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10250,
      "name": "canEqual",
      "type": "security.entity.SecurityConfig",
      "flags": "d",
      "display": "s.e.SC.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/boolean security.entity.SecurityConfig.canEqual(java.lang.Object)"
    },
    {
      "id": 10251,
      "name": "getId",
      "type": "security.entity.SecurityConfig",
      "flags": "p",
      "display": "s.e.SC.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/java.lang.String security.entity.SecurityConfig.getId(empty)"
    },
    {
      "id": 10252,
      "name": "getValue",
      "type": "security.entity.SecurityConfig",
      "flags": "p",
      "display": "s.e.SC.getValue",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/java.lang.String security.entity.SecurityConfig.getValue(empty)"
    },
    {
      "id": 10253,
      "name": "getDescription",
      "type": "security.entity.SecurityConfig",
      "flags": "p",
      "display": "s.e.SC.getDescription",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/java.lang.String security.entity.SecurityConfig.getDescription(empty)"
    },
    {
      "id": 42191,
      "name": "findByName",
      "type": "security.repository.SecurityRepository",
      "flags": "pa",
      "display": "s.r.SR.findByName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "security.entity.SecurityConfig",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/security.entity.SecurityConfig security.repository.SecurityRepository.findByName(java.lang.String)"
    },
    {
      "id": 42194,
      "name": "addNewSecurityConfig",
      "type": "security.service.SecurityService",
      "flags": "pa",
      "display": "s.s.SS.addNewSecurityConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "security.entity.SecurityConfig",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityService.addNewSecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42196,
      "name": "save",
      "type": "security.repository.SecurityRepository",
      "flags": "pby",
      "display": "s.r.SR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "4c8fc68879f3c134f5448aac48cebd5badf33e17545e6401bd28b0bc9cc5d79e",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/java.lang.Object security.repository.SecurityRepository.save(java.lang.Object)"
    },
    {
      "id": 42197,
      "name": "deleteSecurityConfig",
      "type": "security.service.SecurityService",
      "flags": "pa",
      "display": "s.s.SS.deleteSecurityConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityService.deleteSecurityConfig(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42198,
      "name": "deleteById",
      "type": "security.repository.SecurityRepository",
      "flags": "pa",
      "display": "s.r.SR.deleteById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/void security.repository.SecurityRepository.deleteById(java.lang.String)"
    },
    {
      "id": 42199,
      "name": "findById",
      "type": "security.repository.SecurityRepository",
      "flags": "pa",
      "display": "s.r.SR.findById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.Optional",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/java.util.Optional security.repository.SecurityRepository.findById(java.lang.String)"
    },
    {
      "id": 42202,
      "name": "findAllSecurityConfig",
      "type": "security.service.SecurityService",
      "flags": "pa",
      "display": "s.s.SS.findAllSecurityConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityService.findAllSecurityConfig(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42203,
      "name": "findAll",
      "type": "security.repository.SecurityRepository",
      "flags": "pa",
      "display": "s.r.SR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/java.util.ArrayList security.repository.SecurityRepository.findAll(empty)"
    },
    {
      "id": 42204,
      "name": "modifySecurityConfig",
      "type": "security.service.SecurityService",
      "flags": "pa",
      "display": "s.s.SS.modifySecurityConfig",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "security.entity.SecurityConfig",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/edu.fudan.common.util.Response security.service.SecurityService.modifySecurityConfig(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42206,
      "name": "setName",
      "type": "security.entity.SecurityConfig",
      "flags": "p",
      "display": "s.e.SC.setName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "52860e6fc7f9e5b84669354a8a23b2606c35569844d5e6f8dba8cb07e8b22955",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/void security.entity.SecurityConfig.setName(java.lang.String)"
    },
    {
      "id": 42207,
      "name": "setValue",
      "type": "security.entity.SecurityConfig",
      "flags": "p",
      "display": "s.e.SC.setValue",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "69e52eac317680e748fa698b13b4527c910f3cd3f7436b5eb79b7a10eba51484",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/void security.entity.SecurityConfig.setValue(java.lang.String)"
    },
    {
      "id": 42208,
      "name": "setDescription",
      "type": "security.entity.SecurityConfig",
      "flags": "p",
      "display": "s.e.SC.setDescription",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1c059b5fe325fde7d43b063306b8ea508a338bafb0f3efc8a9c0b94e3f6e422c",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/void security.entity.SecurityConfig.setDescription(java.lang.String)"
    },
    {
      "id": 17316,
      "name": "getServiceUrl",
      "type": "security.service.SecurityServiceImpl",
      "flags": "P",
      "display": "s.s.SSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "1862b83a15032a72c4e8998e223103b0525d3d34c6fd44300541d9ebaf0ab264",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/java.lang.String security.service.SecurityServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 17317,
      "name": "<init>",
      "type": "security.service.SecurityServiceImpl$1",
      "flags": "",
      "display": "s.s.SSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["security.service.SecurityServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/void security.service.SecurityServiceImpl$1.<init>(security.service.SecurityServiceImpl)"
    },
    {
      "id": 17318,
      "name": "<init>",
      "type": "security.service.SecurityServiceImpl$2",
      "flags": "",
      "display": "s.s.SSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["security.service.SecurityServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/void security.service.SecurityServiceImpl$2.<init>(security.service.SecurityServiceImpl)"
    },
    {
      "id": 6515,
      "name": "<clinit>",
      "type": "security.controller.SecurityController",
      "flags": "s",
      "display": "s.c.SC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "44aba1e01918e965f7dad87da15d46215d1a104fe6fccdd7a0f139d2ef403a7e",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/void security.controller.SecurityController.<clinit>(empty)"
    },
    {
      "id": 6516,
      "name": "check",
      "type": "security.controller.SecurityController",
      "flags": "p",
      "display": "s.c.SC.check",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/securityservice/securityConfigs/{accountId}",
      "bytecodeHash": "a5006bf171ef927d22ea1288302d7b424ee4869753125a6ea759de9e874a7f58",
      "microservice": "ts-security-service",
      "endpointMethod": true,
      "methodSignature": "ts-security-service/org.springframework.http.HttpEntity security.controller.SecurityController.check(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6517,
      "name": "create",
      "type": "security.controller.SecurityController",
      "flags": "p",
      "display": "s.c.SC.create",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "security.entity.SecurityConfig",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/securityservice/securityConfigs",
      "bytecodeHash": "e5d73ae67c3886bf0dd383be89e512abd8db3d78ae208b517826e2f0fb713667",
      "microservice": "ts-security-service",
      "endpointMethod": true,
      "methodSignature": "ts-security-service/org.springframework.http.HttpEntity security.controller.SecurityController.create(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6518,
      "name": "delete",
      "type": "security.controller.SecurityController",
      "flags": "p",
      "display": "s.c.SC.delete",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/securityservice/securityConfigs/{id}",
      "bytecodeHash": "4c7ce50cafc567609b23ed6edcc1a5f6632562b097d46bb2dcc09cd5bcfc5c4f",
      "microservice": "ts-security-service",
      "endpointMethod": true,
      "methodSignature": "ts-security-service/org.springframework.http.HttpEntity security.controller.SecurityController.delete(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6519,
      "name": "findAllSecurityConfig",
      "type": "security.controller.SecurityController",
      "flags": "p",
      "display": "s.c.SC.findAllSecurityConfig",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/securityservice/securityConfigs",
      "bytecodeHash": "77604c5353051bdc1c00951ddb8d9b68696994f73402249dcc0798ff5db0e965",
      "microservice": "ts-security-service",
      "endpointMethod": true,
      "methodSignature": "ts-security-service/org.springframework.http.HttpEntity security.controller.SecurityController.findAllSecurityConfig(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6520,
      "name": "home",
      "type": "security.controller.SecurityController",
      "flags": "p",
      "display": "s.c.SC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "/api/v1/securityservice/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-security-service",
      "endpointMethod": true,
      "methodSignature": "ts-security-service/java.lang.String security.controller.SecurityController.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6521,
      "name": "update",
      "type": "security.controller.SecurityController",
      "flags": "p",
      "display": "s.c.SC.update",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "security.entity.SecurityConfig",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/securityservice/securityConfigs",
      "bytecodeHash": "234cb318145b71372095281190da8e41db9051711cb6bb4b32c7ed0beac4f7ae",
      "microservice": "ts-security-service",
      "endpointMethod": true,
      "methodSignature": "ts-security-service/org.springframework.http.HttpEntity security.controller.SecurityController.update(security.entity.SecurityConfig, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6522,
      "name": "equals",
      "type": "security.entity.SecurityConfig",
      "flags": "p",
      "display": "s.e.SC.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "a9b4d5b90d7f0bbe8d107e7c95739d8bd9986a9c254d8619705d3bd128badc4b",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/boolean security.entity.SecurityConfig.equals(java.lang.Object)"
    },
    {
      "id": 6523,
      "name": "hashCode",
      "type": "security.entity.SecurityConfig",
      "flags": "p",
      "display": "s.e.SC.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "863eaebf4aa8dcffabcdbde9f1fb066fcfaf2204787efa05866318da4abcb7e7",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/int security.entity.SecurityConfig.hashCode(empty)"
    },
    {
      "id": 13627,
      "name": "getSecurityOrderInfoFromOrder",
      "type": "security.service.SecurityServiceImpl",
      "flags": "P",
      "display": "s.s.SSI.getSecurityOrderInfoFromOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.Date",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.OrderSecurity",
      "endpointURI": null,
      "bytecodeHash": "fde73b537a4a062316986973bdd026dcad81bd5526fca316eaa1afc52e6d1482",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/edu.fudan.common.entity.OrderSecurity security.service.SecurityServiceImpl.getSecurityOrderInfoFromOrder(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6524,
      "name": "toString",
      "type": "security.entity.SecurityConfig",
      "flags": "p",
      "display": "s.e.SC.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "6e1276e3d22f7c8fc95b4580723d18a5648c4d2ac42abae59cf1684f067b073a",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/java.lang.String security.entity.SecurityConfig.toString(empty)"
    },
    {
      "id": 13628,
      "name": "getSecurityOrderOtherInfoFromOrder",
      "type": "security.service.SecurityServiceImpl",
      "flags": "P",
      "display": "s.s.SSI.getSecurityOrderOtherInfoFromOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.Date",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.OrderSecurity",
      "endpointURI": null,
      "bytecodeHash": "d50399437fd7047f822471dc72af0b2c8caef07bde81a842851cebe04d9be184",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/edu.fudan.common.entity.OrderSecurity security.service.SecurityServiceImpl.getSecurityOrderOtherInfoFromOrder(java.util.Date, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 6525,
      "name": "<clinit>",
      "type": "security.service.SecurityServiceImpl",
      "flags": "s",
      "display": "s.s.SSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "f619230e0cc62762b0f2029137d67e368a36d03a0d57d67748aa2f9c1028f9c0",
      "microservice": "ts-security-service",
      "endpointMethod": false,
      "methodSignature": "ts-security-service/void security.service.SecurityServiceImpl.<clinit>(empty)"
    },
    {
      "id": 1925,
      "name": "<clinit>",
      "type": "food.controller.StationFoodController",
      "flags": "s",
      "display": "f.c.SFC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "3964062702a866c637c63d909461428888c0d1cad03e0c82dbbaa2ad151d6ef5",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/void food.controller.StationFoodController.<clinit>(empty)"
    },
    {
      "id": 1926,
      "name": "getAllFoodStores",
      "type": "food.controller.StationFoodController",
      "flags": "p",
      "display": "f.c.SFC.getAllFoodStores",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/stationfoodservice/stationfoodstores",
      "bytecodeHash": "77604c5353051bdc1c00951ddb8d9b68696994f73402249dcc0798ff5db0e965",
      "microservice": "ts-station-food-service",
      "endpointMethod": true,
      "methodSignature": "ts-station-food-service/org.springframework.http.HttpEntity food.controller.StationFoodController.getAllFoodStores(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40550,
      "name": "listFoodStores",
      "type": "food.service.StationFoodService",
      "flags": "pa",
      "display": "f.s.SFS.listFoodStores",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/edu.fudan.common.util.Response food.service.StationFoodService.listFoodStores(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1927,
      "name": "getFoodListByStationFoodStoreId",
      "type": "food.controller.StationFoodController",
      "flags": "p",
      "display": "f.c.SFC.getFoodListByStationFoodStoreId",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/stationfoodservice/stationfoodstores/bystoreid/{stationFoodStoreId}",
      "bytecodeHash": "91872ad58c4a84b283600fee4d359d74a79981b9aa6471dadd644f5e7b154372",
      "microservice": "ts-station-food-service",
      "endpointMethod": true,
      "methodSignature": "ts-station-food-service/org.springframework.http.HttpEntity food.controller.StationFoodController.getFoodListByStationFoodStoreId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40551,
      "name": "findAll",
      "type": "food.repository.StationFoodRepository",
      "flags": "pa",
      "display": "f.r.SFR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/java.util.List food.repository.StationFoodRepository.findAll(empty)"
    },
    {
      "id": 1928,
      "name": "getFoodStoresByStationNames",
      "type": "food.controller.StationFoodController",
      "flags": "p",
      "display": "f.c.SFC.getFoodStoresByStationNames",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": null,
      "bytecodeHash": "1e01edc0204f4c130c5160548329327792c78ebb4ac64fece129183848f006da",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/org.springframework.http.HttpEntity food.controller.StationFoodController.getFoodStoresByStationNames(java.util.List)"
    },
    {
      "id": 1929,
      "name": "getFoodStoresOfStation",
      "type": "food.controller.StationFoodController",
      "flags": "p",
      "display": "f.c.SFC.getFoodStoresOfStation",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/stationfoodservice/stationfoodstores/{stationId}",
      "bytecodeHash": "7270d386c8c7e17056bc74ab7e09c94432693272a8cd944c8f59f1be731e9660",
      "microservice": "ts-station-food-service",
      "endpointMethod": true,
      "methodSignature": "ts-station-food-service/org.springframework.http.HttpEntity food.controller.StationFoodController.getFoodStoresOfStation(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1930,
      "name": "home",
      "type": "food.controller.StationFoodController",
      "flags": "p",
      "display": "f.c.SFC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/java.lang.String food.controller.StationFoodController.home(empty)"
    },
    {
      "id": 40554,
      "name": "getStaionFoodStoreById",
      "type": "food.service.StationFoodService",
      "flags": "pa",
      "display": "f.s.SFS.getStaionFoodStoreById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/edu.fudan.common.util.Response food.service.StationFoodService.getStaionFoodStoreById(java.lang.String)"
    },
    {
      "id": 1931,
      "name": "<clinit>",
      "type": "food.init.InitData",
      "flags": "s",
      "display": "f.i.ID.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "db9b333d3792662bba4af86478a206a07e9b05e6443f0bf6e0615cebc6326c7b",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/void food.init.InitData.<clinit>(empty)"
    },
    {
      "id": 40555,
      "name": "findById",
      "type": "food.repository.StationFoodRepository",
      "flags": "pa",
      "display": "f.r.SFR.findById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.Optional",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/java.util.Optional food.repository.StationFoodRepository.findById(java.lang.String)"
    },
    {
      "id": 1932,
      "name": "<clinit>",
      "type": "food.service.StationFoodServiceImpl",
      "flags": "s",
      "display": "f.s.SFSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "627550a226e69aa8a9be5d44dad615d547548ad76bc2c60dfb4e907bce6d3b0b",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/void food.service.StationFoodServiceImpl.<clinit>(empty)"
    },
    {
      "id": 40556,
      "name": "getFoodStoresByStationNames",
      "type": "food.service.StationFoodService",
      "flags": "pa",
      "display": "f.s.SFS.getFoodStoresByStationNames",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/edu.fudan.common.util.Response food.service.StationFoodService.getFoodStoresByStationNames(java.util.List)"
    },
    {
      "id": 40557,
      "name": "findByStationNameIn",
      "type": "food.repository.StationFoodRepository",
      "flags": "pa",
      "display": "f.r.SFR.findByStationNameIn",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/java.util.List food.repository.StationFoodRepository.findByStationNameIn(java.util.List)"
    },
    {
      "id": 40559,
      "name": "listFoodStoresByStationName",
      "type": "food.service.StationFoodService",
      "flags": "pa",
      "display": "f.s.SFS.listFoodStoresByStationName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/edu.fudan.common.util.Response food.service.StationFoodService.listFoodStoresByStationName(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40560,
      "name": "findByStationName",
      "type": "food.repository.StationFoodRepository",
      "flags": "pa",
      "display": "f.r.SFR.findByStationName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/java.util.List food.repository.StationFoodRepository.findByStationName(java.lang.String)"
    },
    {
      "id": 8150,
      "name": "listFoodStores",
      "type": "food.service.StationFoodServiceImpl",
      "flags": "p",
      "display": "f.s.SFSI.listFoodStores",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "f3fe49315a09898e7d36733b35b0bbff5936b7326f191bc598ff5646ddfb8401",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/edu.fudan.common.util.Response food.service.StationFoodServiceImpl.listFoodStores(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8152,
      "name": "getStaionFoodStoreById",
      "type": "food.service.StationFoodServiceImpl",
      "flags": "p",
      "display": "f.s.SFSI.getStaionFoodStoreById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "e7e0e7ec0ae49164e55343e98fcde83da2e8a7cfe4ba764e8f4b0a586b1756e4",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/edu.fudan.common.util.Response food.service.StationFoodServiceImpl.getStaionFoodStoreById(java.lang.String)"
    },
    {
      "id": 8153,
      "name": "getFoodStoresByStationNames",
      "type": "food.service.StationFoodServiceImpl",
      "flags": "p",
      "display": "f.s.SFSI.getFoodStoresByStationNames",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "0d28fd7c1867c62d62f8beaa21401767c5be80fa2b2d42cbbaec8a5e2e6f6950",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/edu.fudan.common.util.Response food.service.StationFoodServiceImpl.getFoodStoresByStationNames(java.util.List)"
    },
    {
      "id": 8154,
      "name": "listFoodStoresByStationName",
      "type": "food.service.StationFoodServiceImpl",
      "flags": "p",
      "display": "f.s.SFSI.listFoodStoresByStationName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "7eb6303af9f8b5f7da6efa0290e1d550b7c7716ef27b761f8f3e4ce744d3c5fc",
      "microservice": "ts-station-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-food-service/edu.fudan.common.util.Response food.service.StationFoodServiceImpl.listFoodStoresByStationName(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40512,
      "name": "delete",
      "type": "fdse.microservice.service.StationService",
      "flags": "pa",
      "display": "f.m.s.SS.delete",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationService.delete(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1921,
      "name": "<clinit>",
      "type": "fdse.microservice.controller.StationController",
      "flags": "s",
      "display": "f.m.c.SC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "df637bcf8bcb1756b1614636f7a07cb0a918b856eb2c4964281061d72249d41a",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/void fdse.microservice.controller.StationController.<clinit>(empty)"
    },
    {
      "id": 40513,
      "name": "findById",
      "type": "fdse.microservice.repository.StationRepository",
      "flags": "pa",
      "display": "f.m.r.SR.findById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.Optional",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/java.util.Optional fdse.microservice.repository.StationRepository.findById(java.lang.String)"
    },
    {
      "id": 1922,
      "name": "create",
      "type": "fdse.microservice.controller.StationController",
      "flags": "p",
      "display": "f.m.c.SC.create",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "fdse.microservice.entity.Station",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.ResponseEntity",
      "endpointURI": "/api/v1/stationservice/stations",
      "bytecodeHash": "2c74b08932c2e2231d95891505ccf858fa4a6b294949af15d14eaf91eb363113",
      "microservice": "ts-station-service",
      "endpointMethod": true,
      "methodSignature": "ts-station-service/org.springframework.http.ResponseEntity fdse.microservice.controller.StationController.create(fdse.microservice.entity.Station, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40514,
      "name": "delete",
      "type": "fdse.microservice.repository.StationRepository",
      "flags": "pby",
      "display": "f.m.r.SR.delete",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "53163a94a915f7580eb1900832bc179674c55fd0d3e9a096209002808bfe9e6c",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/void fdse.microservice.repository.StationRepository.delete(java.lang.Object)"
    },
    {
      "id": 1923,
      "name": "delete",
      "type": "fdse.microservice.controller.StationController",
      "flags": "p",
      "display": "f.m.c.SC.delete",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.ResponseEntity",
      "endpointURI": "/api/v1/stationservice/stations/{stationsId}",
      "bytecodeHash": "f658dfacb2b064a83b52afdb7e872ca09c56516651ba91fe2847b91c6552770c",
      "microservice": "ts-station-service",
      "endpointMethod": true,
      "methodSignature": "ts-station-service/org.springframework.http.ResponseEntity fdse.microservice.controller.StationController.delete(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1924,
      "name": "home",
      "type": "fdse.microservice.controller.StationController",
      "flags": "p",
      "display": "f.m.c.SC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "/api/v1/stationservice/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-station-service",
      "endpointMethod": true,
      "methodSignature": "ts-station-service/java.lang.String fdse.microservice.controller.StationController.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40516,
      "name": "query",
      "type": "fdse.microservice.service.StationService",
      "flags": "pa",
      "display": "f.m.s.SS.query",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationService.query(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1925,
      "name": "query",
      "type": "fdse.microservice.controller.StationController",
      "flags": "p",
      "display": "f.m.c.SC.query",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/stationservice/stations",
      "bytecodeHash": "20721b6b5f8e9343d4cf614d884fda32044269cc286e20c3b363b9da2667b79a",
      "microservice": "ts-station-service",
      "endpointMethod": true,
      "methodSignature": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.query(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40517,
      "name": "findAll",
      "type": "fdse.microservice.repository.StationRepository",
      "flags": "pa",
      "display": "f.m.r.SR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/java.util.List fdse.microservice.repository.StationRepository.findAll(empty)"
    },
    {
      "id": 1926,
      "name": "queryById",
      "type": "fdse.microservice.controller.StationController",
      "flags": "p",
      "display": "f.m.c.SC.queryById",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/stationservice/stations/name/{stationIdForName}",
      "bytecodeHash": "bbbf515a5a06cb604e9cc4a285cb0c1c8f28f6776c1e0ab6dfbd9de9fd40eecd",
      "microservice": "ts-station-service",
      "endpointMethod": true,
      "methodSignature": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.queryById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1927,
      "name": "queryForIdBatch",
      "type": "fdse.microservice.controller.StationController",
      "flags": "p",
      "display": "f.m.c.SC.queryForIdBatch",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": null,
      "bytecodeHash": "a2490d1e263f65e6c42bbb28306aa73d5c3d7b9412f38fe7047b2201158440dc",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.queryForIdBatch(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40519,
      "name": "queryById",
      "type": "fdse.microservice.service.StationService",
      "flags": "pa",
      "display": "f.m.s.SS.queryById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationService.queryById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1928,
      "name": "queryForNameBatch",
      "type": "fdse.microservice.controller.StationController",
      "flags": "p",
      "display": "f.m.c.SC.queryForNameBatch",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": null,
      "bytecodeHash": "9283cc41115b519a720cf830aeafcd77feb0addf2cb250c46f968aa82d35594e",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.queryForNameBatch(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40520,
      "name": "queryForIdBatch",
      "type": "fdse.microservice.service.StationService",
      "flags": "pa",
      "display": "f.m.s.SS.queryForIdBatch",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationService.queryForIdBatch(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1929,
      "name": "queryForStationId",
      "type": "fdse.microservice.controller.StationController",
      "flags": "p",
      "display": "f.m.c.SC.queryForStationId",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/stationservice/stations/id/{stationNameForId}",
      "bytecodeHash": "b99b0d94897c834dfe859a5a5098efea11e66601af3042b4174dea6ab47515b5",
      "microservice": "ts-station-service",
      "endpointMethod": true,
      "methodSignature": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.queryForStationId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40521,
      "name": "findByNames",
      "type": "fdse.microservice.repository.StationRepository",
      "flags": "pa",
      "display": "f.m.r.SR.findByNames",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/java.util.List fdse.microservice.repository.StationRepository.findByNames(java.util.List)"
    },
    {
      "id": 1930,
      "name": "update",
      "type": "fdse.microservice.controller.StationController",
      "flags": "p",
      "display": "f.m.c.SC.update",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "fdse.microservice.entity.Station",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/stationservice/stations",
      "bytecodeHash": "f10655d56059a1bf1a41c428aedb2b43dc76e9575a115290c6429e05c37db2b9",
      "microservice": "ts-station-service",
      "endpointMethod": true,
      "methodSignature": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.update(fdse.microservice.entity.Station, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 1931,
      "name": "<clinit>",
      "type": "fdse.microservice.service.StationServiceImpl",
      "flags": "s",
      "display": "f.m.s.SSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "93b239255b19a3a4c3eded08ba16a6aa966acf9b0a1ae70a389bd6467de2cabe",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/void fdse.microservice.service.StationServiceImpl.<clinit>(empty)"
    },
    {
      "id": 40523,
      "name": "queryByIdBatch",
      "type": "fdse.microservice.service.StationService",
      "flags": "pa",
      "display": "f.m.s.SS.queryByIdBatch",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationService.queryByIdBatch(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40524,
      "name": "queryForId",
      "type": "fdse.microservice.service.StationService",
      "flags": "pa",
      "display": "f.m.s.SS.queryForId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationService.queryForId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40525,
      "name": "update",
      "type": "fdse.microservice.service.StationService",
      "flags": "pa",
      "display": "f.m.s.SS.update",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "fdse.microservice.entity.Station",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationService.update(fdse.microservice.entity.Station, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40526,
      "name": "setName",
      "type": "fdse.microservice.entity.Station",
      "flags": "p",
      "display": "f.m.e.S.setName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "2fd8c2a8f3d1134d3e34a26a2406f0a5f918d6d1b2f20dbb47905214806b0675",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/void fdse.microservice.entity.Station.setName(java.lang.String)"
    },
    {
      "id": 8093,
      "name": "create",
      "type": "fdse.microservice.service.StationServiceImpl",
      "flags": "p",
      "display": "f.m.s.SSI.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "fdse.microservice.entity.Station",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "f0b50ceec6b3f440ac216c2875fe9eabe3d463327c36843fa478ad59f090477c",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.create(fdse.microservice.entity.Station, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8095,
      "name": "delete",
      "type": "fdse.microservice.service.StationServiceImpl",
      "flags": "p",
      "display": "f.m.s.SSI.delete",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "93804476afffa10e4eef93ec564f8d535b97e9b84b005ec6a6c006be6b8ef5fa",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.delete(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40479,
      "name": "getName",
      "type": "fdse.microservice.entity.Station",
      "flags": "p",
      "display": "f.m.e.S.getName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/java.lang.String fdse.microservice.entity.Station.getName(empty)"
    },
    {
      "id": 8097,
      "name": "query",
      "type": "fdse.microservice.service.StationServiceImpl",
      "flags": "p",
      "display": "f.m.s.SSI.query",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "5d7dd8d17850387d48734b2d6f0916c4960fe62ccdfc7d2de9548cab88f0f38a",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.query(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8098,
      "name": "queryById",
      "type": "fdse.microservice.service.StationServiceImpl",
      "flags": "p",
      "display": "f.m.s.SSI.queryById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "d7065ae3d3dc5ea3e1df516d216ad784f738c5bb0cc5523e61f49ea3340fc44e",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.queryById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40504,
      "name": "create",
      "type": "fdse.microservice.service.StationService",
      "flags": "pa",
      "display": "f.m.s.SS.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "fdse.microservice.entity.Station",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationService.create(fdse.microservice.entity.Station, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8121,
      "name": "queryForIdBatch",
      "type": "fdse.microservice.service.StationServiceImpl",
      "flags": "p",
      "display": "f.m.s.SSI.queryForIdBatch",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "dead6b5835912cb6e8cdb775201a769a0d55e05cdbdb6fee1a1f651571a5c337",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.queryForIdBatch(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 8122,
      "name": "queryByIdBatch",
      "type": "fdse.microservice.service.StationServiceImpl",
      "flags": "p",
      "display": "f.m.s.SSI.queryByIdBatch",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "bbb1542ac8546cd3345c572f1e32d9a803a80c84fde810245ebf3a0a70cd4c2f",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.queryByIdBatch(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40506,
      "name": "findByName",
      "type": "fdse.microservice.repository.StationRepository",
      "flags": "pa",
      "display": "f.m.r.SR.findByName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "fdse.microservice.entity.Station",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/fdse.microservice.entity.Station fdse.microservice.repository.StationRepository.findByName(java.lang.String)"
    },
    {
      "id": 8123,
      "name": "queryForId",
      "type": "fdse.microservice.service.StationServiceImpl",
      "flags": "p",
      "display": "f.m.s.SSI.queryForId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "3de2c5d18cdb38c8dce5c7d2391691a8f68681db72967697d75bc7116c3e25f8",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.queryForId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40507,
      "name": "getStayTime",
      "type": "fdse.microservice.entity.Station",
      "flags": "p",
      "display": "f.m.e.S.getStayTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "4e87c9fe351fd630631b8c2c11fde4a77d4cbc7a34bda59eecb5686ec0a54d34",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/int fdse.microservice.entity.Station.getStayTime(empty)"
    },
    {
      "id": 8124,
      "name": "update",
      "type": "fdse.microservice.service.StationServiceImpl",
      "flags": "p",
      "display": "f.m.s.SSI.update",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "fdse.microservice.entity.Station",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "b35b1cbf988c5905130d665cd4d2b9b771aef798e6fc2b4359c436b953acbd2e",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/edu.fudan.common.util.Response fdse.microservice.service.StationServiceImpl.update(fdse.microservice.entity.Station, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 40508,
      "name": "setStayTime",
      "type": "fdse.microservice.entity.Station",
      "flags": "p",
      "display": "f.m.e.S.setStayTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "59a70dcd638befe150432fa942f77d6dfd336b826c12bbb8826a287c9394b27d",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/void fdse.microservice.entity.Station.setStayTime(int)"
    },
    {
      "id": 40509,
      "name": "save",
      "type": "fdse.microservice.repository.StationRepository",
      "flags": "pby",
      "display": "f.m.r.SR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "972694f554e3b6c7ae5ce632249b428f8db743b56c63ba721dac069f664903ff",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/java.lang.Object fdse.microservice.repository.StationRepository.save(java.lang.Object)"
    },
    {
      "id": 40510,
      "name": "getId",
      "type": "fdse.microservice.entity.Station",
      "flags": "p",
      "display": "f.m.e.S.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-station-service",
      "endpointMethod": false,
      "methodSignature": "ts-station-service/java.lang.String fdse.microservice.entity.Station.getId(empty)"
    },
    {
      "id": 42272,
      "name": "getFoodList",
      "type": "trainFood.entity.TrainFood",
      "flags": "p",
      "display": "tF.e.TF.getFoodList",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-train-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-food-service/java.util.List trainFood.entity.TrainFood.getFoodList(empty)"
    },
    {
      "id": 7310,
      "name": "<clinit>",
      "type": "trainFood.controller.TrainFoodController",
      "flags": "s",
      "display": "tF.c.TFC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "ef6412b31a1d9db127a878539a4493ead955bab8b11aadf854d2db24a7792c51",
      "microservice": "ts-train-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-food-service/void trainFood.controller.TrainFoodController.<clinit>(empty)"
    },
    {
      "id": 7311,
      "name": "getAllTrainFood",
      "type": "trainFood.controller.TrainFoodController",
      "flags": "p",
      "display": "tF.c.TFC.getAllTrainFood",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/trainfoodservice/trainfoods",
      "bytecodeHash": "77604c5353051bdc1c00951ddb8d9b68696994f73402249dcc0798ff5db0e965",
      "microservice": "ts-train-food-service",
      "endpointMethod": true,
      "methodSignature": "ts-train-food-service/org.springframework.http.HttpEntity trainFood.controller.TrainFoodController.getAllTrainFood(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7312,
      "name": "getTrainFoodOfTrip",
      "type": "trainFood.controller.TrainFoodController",
      "flags": "p",
      "display": "tF.c.TFC.getTrainFoodOfTrip",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/trainfoodservice/trainfoods/{tripId}",
      "bytecodeHash": "7270d386c8c7e17056bc74ab7e09c94432693272a8cd944c8f59f1be731e9660",
      "microservice": "ts-train-food-service",
      "endpointMethod": true,
      "methodSignature": "ts-train-food-service/org.springframework.http.HttpEntity trainFood.controller.TrainFoodController.getTrainFoodOfTrip(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10672,
      "name": "listTrainFood",
      "type": "trainFood.service.TrainFoodServiceImpl",
      "flags": "p",
      "display": "tF.s.TFSI.listTrainFood",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "63ba8f0a6fe7c3ea90aab2c6c12483775c3eaf7313bfd1a6c0f00d9f13acecfc",
      "microservice": "ts-train-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-food-service/edu.fudan.common.util.Response trainFood.service.TrainFoodServiceImpl.listTrainFood(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7313,
      "name": "home",
      "type": "trainFood.controller.TrainFoodController",
      "flags": "p",
      "display": "tF.c.TFC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-train-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-food-service/java.lang.String trainFood.controller.TrainFoodController.home(empty)"
    },
    {
      "id": 7314,
      "name": "<clinit>",
      "type": "trainFood.init.InitData",
      "flags": "s",
      "display": "tF.i.ID.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "9f0bd23d8a81f9f2c27541499c7ba25ebf5d90ee3cebd8ecc2dc235009225851",
      "microservice": "ts-train-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-food-service/void trainFood.init.InitData.<clinit>(empty)"
    },
    {
      "id": 10674,
      "name": "listTrainFoodByTripId",
      "type": "trainFood.service.TrainFoodServiceImpl",
      "flags": "p",
      "display": "tF.s.TFSI.listTrainFoodByTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "6d26029baff406786a2101c302a47ac0d23db2a2a5338fd0a0bb05b9b0987497",
      "microservice": "ts-train-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-food-service/edu.fudan.common.util.Response trainFood.service.TrainFoodServiceImpl.listTrainFoodByTripId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7315,
      "name": "<clinit>",
      "type": "trainFood.service.TrainFoodServiceImpl",
      "flags": "s",
      "display": "tF.s.TFSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "570b699804cd9100e00266b9ebbee9557fead1b9d97f5e3ed0d18cc18a0f90e3",
      "microservice": "ts-train-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-food-service/void trainFood.service.TrainFoodServiceImpl.<clinit>(empty)"
    },
    {
      "id": 42266,
      "name": "listTrainFood",
      "type": "trainFood.service.TrainFoodService",
      "flags": "pa",
      "display": "tF.s.TFS.listTrainFood",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-train-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-food-service/edu.fudan.common.util.Response trainFood.service.TrainFoodService.listTrainFood(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42267,
      "name": "findAll",
      "type": "trainFood.repository.TrainFoodRepository",
      "flags": "pa",
      "display": "tF.r.TFR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-train-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-food-service/java.util.List trainFood.repository.TrainFoodRepository.findAll(empty)"
    },
    {
      "id": 42270,
      "name": "listTrainFoodByTripId",
      "type": "trainFood.service.TrainFoodService",
      "flags": "pa",
      "display": "tF.s.TFS.listTrainFoodByTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-train-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-food-service/edu.fudan.common.util.Response trainFood.service.TrainFoodService.listTrainFoodByTripId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42271,
      "name": "findByTripId",
      "type": "trainFood.repository.TrainFoodRepository",
      "flags": "pa",
      "display": "tF.r.TFR.findByTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "trainFood.entity.TrainFood",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-train-food-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-food-service/trainFood.entity.TrainFood trainFood.repository.TrainFoodRepository.findByTripId(java.lang.String)"
    },
    {
      "id": 7296,
      "name": "<clinit>",
      "type": "train.service.TrainServiceImpl",
      "flags": "s",
      "display": "t.s.TSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "17401b0dcf084dcf78294952b2f2c37382eb9d26a9a73a539b1e56512315b09f",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/void train.service.TrainServiceImpl.<clinit>(empty)"
    },
    {
      "id": 10650,
      "name": "getId",
      "type": "train.entity.TrainType",
      "flags": "p",
      "display": "t.e.TT.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/java.lang.String train.entity.TrainType.getId(empty)"
    },
    {
      "id": 42268,
      "name": "create",
      "type": "train.service.TrainService",
      "flags": "pa",
      "display": "t.s.TS.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "train.entity.TrainType",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/boolean train.service.TrainService.create(train.entity.TrainType, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10654,
      "name": "create",
      "type": "train.service.TrainServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "train.entity.TrainType",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "8bab18d941b6f066c69c56425f0c69679e0357cf49d73eba2257895e56263d10",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/boolean train.service.TrainServiceImpl.create(train.entity.TrainType, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42270,
      "name": "findByName",
      "type": "train.repository.TrainTypeRepository",
      "flags": "pa",
      "display": "t.r.TTR.findByName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "train.entity.TrainType",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/train.entity.TrainType train.repository.TrainTypeRepository.findByName(java.lang.String)"
    },
    {
      "id": 42271,
      "name": "save",
      "type": "train.repository.TrainTypeRepository",
      "flags": "pby",
      "display": "t.r.TTR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "c29fc175ead1c585375cb0d133b0ad977430c5374d03dcacb0955a5df83ccdb3",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/java.lang.Object train.repository.TrainTypeRepository.save(java.lang.Object)"
    },
    {
      "id": 10657,
      "name": "delete",
      "type": "train.service.TrainServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.delete",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "b2772845e7fea19aeedf0a4fa6c1f5a1047277a9b641dbaf9b899028c4a6c554",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/boolean train.service.TrainServiceImpl.delete(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42274,
      "name": "delete",
      "type": "train.service.TrainService",
      "flags": "pa",
      "display": "t.s.TS.delete",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/boolean train.service.TrainService.delete(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42275,
      "name": "findById",
      "type": "train.repository.TrainTypeRepository",
      "flags": "pa",
      "display": "t.r.TTR.findById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.Optional",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/java.util.Optional train.repository.TrainTypeRepository.findById(java.lang.String)"
    },
    {
      "id": 42276,
      "name": "deleteById",
      "type": "train.repository.TrainTypeRepository",
      "flags": "pa",
      "display": "t.r.TTR.deleteById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/void train.repository.TrainTypeRepository.deleteById(java.lang.String)"
    },
    {
      "id": 10661,
      "name": "query",
      "type": "train.service.TrainServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.query",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "32d5e124a17674f04030d0e877b21da9a209523a5566d0b61aa3c6a875d079e7",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/java.util.List train.service.TrainServiceImpl.query(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10662,
      "name": "retrieve",
      "type": "train.service.TrainServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.retrieve",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "train.entity.TrainType",
      "endpointURI": null,
      "bytecodeHash": "00552bf5a4479e85bc5b52416b82dd783ac4b138f31709cc1b209e189ea319af",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/train.entity.TrainType train.service.TrainServiceImpl.retrieve(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42278,
      "name": "query",
      "type": "train.service.TrainService",
      "flags": "pa",
      "display": "t.s.TS.query",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/java.util.List train.service.TrainService.query(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10663,
      "name": "retrieveByName",
      "type": "train.service.TrainServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.retrieveByName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "train.entity.TrainType",
      "endpointURI": null,
      "bytecodeHash": "294d6e52830ec29b82b2c554271c2f015a1f7770a6c5f7e5511e65e84e7fb4c3",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/train.entity.TrainType train.service.TrainServiceImpl.retrieveByName(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42279,
      "name": "findAll",
      "type": "train.repository.TrainTypeRepository",
      "flags": "pa",
      "display": "t.r.TTR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/java.util.List train.repository.TrainTypeRepository.findAll(empty)"
    },
    {
      "id": 10664,
      "name": "retrieveByNames",
      "type": "train.service.TrainServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.retrieveByNames",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "31bdd7181bf60ba5a8f3913dc69fa4d1cd52a73a3289597ebd20c311766f6e0e",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/java.util.List train.service.TrainServiceImpl.retrieveByNames(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42280,
      "name": "retrieve",
      "type": "train.service.TrainService",
      "flags": "pa",
      "display": "t.s.TS.retrieve",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "train.entity.TrainType",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/train.entity.TrainType train.service.TrainService.retrieve(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10665,
      "name": "update",
      "type": "train.service.TrainServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.update",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "train.entity.TrainType",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "85f84b9295ebe1f0bb8891f4b83bd669639670cbe68e0b7b2ff2a593539e84fc",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/boolean train.service.TrainServiceImpl.update(train.entity.TrainType, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42281,
      "name": "retrieveByName",
      "type": "train.service.TrainService",
      "flags": "pa",
      "display": "t.s.TS.retrieveByName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "train.entity.TrainType",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/train.entity.TrainType train.service.TrainService.retrieveByName(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10666,
      "name": "canEqual",
      "type": "train.entity.TrainType",
      "flags": "d",
      "display": "t.e.TT.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/boolean train.entity.TrainType.canEqual(java.lang.Object)"
    },
    {
      "id": 42282,
      "name": "retrieveByNames",
      "type": "train.service.TrainService",
      "flags": "pa",
      "display": "t.s.TS.retrieveByNames",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/java.util.List train.service.TrainService.retrieveByNames(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10667,
      "name": "getEconomyClass",
      "type": "train.entity.TrainType",
      "flags": "p",
      "display": "t.e.TT.getEconomyClass",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "03413414f76d87055da213e92a79728041e6e47e1b1c52781787269c57cba44d",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/int train.entity.TrainType.getEconomyClass(empty)"
    },
    {
      "id": 42283,
      "name": "findByNames",
      "type": "train.repository.TrainTypeRepository",
      "flags": "pa",
      "display": "t.r.TTR.findByNames",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/java.util.List train.repository.TrainTypeRepository.findByNames(java.util.List)"
    },
    {
      "id": 10668,
      "name": "getConfortClass",
      "type": "train.entity.TrainType",
      "flags": "p",
      "display": "t.e.TT.getConfortClass",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "17d2088447ccf826ece32e30a3768849a386734ae9eaa8712655f75cd4c67385",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/int train.entity.TrainType.getConfortClass(empty)"
    },
    {
      "id": 42284,
      "name": "update",
      "type": "train.service.TrainService",
      "flags": "pa",
      "display": "t.s.TS.update",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "train.entity.TrainType",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/boolean train.service.TrainService.update(train.entity.TrainType, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10669,
      "name": "getAverageSpeed",
      "type": "train.entity.TrainType",
      "flags": "p",
      "display": "t.e.TT.getAverageSpeed",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "4dd1035ec1cdb196745dea2916d5c6e3af003ec14aa125cf9edf87088b1251af",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/int train.entity.TrainType.getAverageSpeed(empty)"
    },
    {
      "id": 10670,
      "name": "getName",
      "type": "train.entity.TrainType",
      "flags": "p",
      "display": "t.e.TT.getName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/java.lang.String train.entity.TrainType.getName(empty)"
    },
    {
      "id": 7284,
      "name": "<clinit>",
      "type": "train.controller.TrainController",
      "flags": "s",
      "display": "t.c.TC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "be12a1ac7946dd8a051e202913a53394cbadee3f9756327959e90f1ddacb2e4f",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/void train.controller.TrainController.<clinit>(empty)"
    },
    {
      "id": 13940,
      "name": "<init>",
      "type": "train.entity.TrainType",
      "flags": "p",
      "display": "t.e.TT.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String", "int", "int"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "5e8d4eb240418471665a0217444ba0d981bfee1383b781b6093e08ed79effa01",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/void train.entity.TrainType.<init>(java.lang.String, int, int)"
    },
    {
      "id": 7285,
      "name": "create",
      "type": "train.controller.TrainController",
      "flags": "p",
      "display": "t.c.TC.create",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "train.entity.TrainType",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/trainservice/trains",
      "bytecodeHash": "da5493c2bbf7cb19a70f6790da06da6a54c9f7c6ad95e8526b5a52f5e5d2f3b4",
      "microservice": "ts-train-service",
      "endpointMethod": true,
      "methodSignature": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.create(train.entity.TrainType, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7286,
      "name": "delete",
      "type": "train.controller.TrainController",
      "flags": "p",
      "display": "t.c.TC.delete",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/trainservice/trains/{id}",
      "bytecodeHash": "bb17fada3fabfa9365f0c9997e4bbcb93404b5fbe5014444a17670a86064dc5e",
      "microservice": "ts-train-service",
      "endpointMethod": true,
      "methodSignature": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.delete(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7287,
      "name": "home",
      "type": "train.controller.TrainController",
      "flags": "p",
      "display": "t.c.TC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "/api/v1/trainservice/trains/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-train-service",
      "endpointMethod": true,
      "methodSignature": "ts-train-service/java.lang.String train.controller.TrainController.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7288,
      "name": "query",
      "type": "train.controller.TrainController",
      "flags": "p",
      "display": "t.c.TC.query",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/trainservice/trains",
      "bytecodeHash": "af3ffd91d32b64866c7088b4905c378bd02d3acc4945a887f1058af83f285b59",
      "microservice": "ts-train-service",
      "endpointMethod": true,
      "methodSignature": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.query(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7289,
      "name": "retrieve",
      "type": "train.controller.TrainController",
      "flags": "p",
      "display": "t.c.TC.retrieve",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/trainservice/trains/{id}",
      "bytecodeHash": "e894170a5dc0d575408f1adefccaf3ae9cc95f4a55ef31ee906f3ed50e8d2342",
      "microservice": "ts-train-service",
      "endpointMethod": true,
      "methodSignature": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7290,
      "name": "retrieveByName",
      "type": "train.controller.TrainController",
      "flags": "p",
      "display": "t.c.TC.retrieveByName",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/trainservice/trains/byName/{name}",
      "bytecodeHash": "a72ef290d2f29a9f748303ef513a6f01763a4fad96df6dd616c168092e400ea2",
      "microservice": "ts-train-service",
      "endpointMethod": true,
      "methodSignature": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieveByName(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7291,
      "name": "retrieveByName",
      "type": "train.controller.TrainController",
      "flags": "p",
      "display": "t.c.TC.retrieveByName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": null,
      "bytecodeHash": "3c551a1e9813ff0423690c9c73831551114b8eea2e04fc20226f06282afec1f5",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieveByName(java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7292,
      "name": "update",
      "type": "train.controller.TrainController",
      "flags": "p",
      "display": "t.c.TC.update",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "train.entity.TrainType",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/trainservice/trains",
      "bytecodeHash": "86c735a69ebd89b02731d72128527957bf9a82a2ca4b0c8bcd07ff44c3dcacd3",
      "microservice": "ts-train-service",
      "endpointMethod": true,
      "methodSignature": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.update(train.entity.TrainType, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13948,
      "name": "<init>",
      "type": "train.entity.TrainType",
      "flags": "p",
      "display": "t.e.TT.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String", "int", "int", "int"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "8749ecd5c5d835b214f8498ab4702c15cc11e9bc3bb6c6ebd357023cc3fb974d",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/void train.entity.TrainType.<init>(java.lang.String, int, int, int)"
    },
    {
      "id": 7293,
      "name": "equals",
      "type": "train.entity.TrainType",
      "flags": "p",
      "display": "t.e.TT.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "efec494b1c9f25d3975598cd7c5d6be3b5ec494dc21ae4d072e6cff20471d8f9",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/boolean train.entity.TrainType.equals(java.lang.Object)"
    },
    {
      "id": 7294,
      "name": "hashCode",
      "type": "train.entity.TrainType",
      "flags": "p",
      "display": "t.e.TT.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "eca9a28da7236af1e53fd7bbbaea53f20cd5c34dd77dd53d36e0541151b0a0eb",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/int train.entity.TrainType.hashCode(empty)"
    },
    {
      "id": 7295,
      "name": "toString",
      "type": "train.entity.TrainType",
      "flags": "p",
      "display": "t.e.TT.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "46ec5b5be2335ff7714f013e317f822670eb146e40bfc542b61ee099abb4df96",
      "microservice": "ts-train-service",
      "endpointMethod": false,
      "methodSignature": "ts-train-service/java.lang.String train.entity.TrainType.toString(empty)"
    },
    {
      "id": 18180,
      "name": "<init>",
      "type": "travelplan.service.TravelPlanServiceImpl$4",
      "flags": "",
      "display": "t.s.TPSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["travelplan.service.TravelPlanServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/void travelplan.service.TravelPlanServiceImpl$4.<init>(travelplan.service.TravelPlanServiceImpl)"
    },
    {
      "id": 18181,
      "name": "<init>",
      "type": "travelplan.service.TravelPlanServiceImpl$3",
      "flags": "",
      "display": "t.s.TPSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["travelplan.service.TravelPlanServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/void travelplan.service.TravelPlanServiceImpl$3.<init>(travelplan.service.TravelPlanServiceImpl)"
    },
    {
      "id": 18184,
      "name": "<init>",
      "type": "travelplan.service.TravelPlanServiceImpl$5",
      "flags": "",
      "display": "t.s.TPSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["travelplan.service.TravelPlanServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/void travelplan.service.TravelPlanServiceImpl$5.<init>(travelplan.service.TravelPlanServiceImpl)"
    },
    {
      "id": 18185,
      "name": "<init>",
      "type": "travelplan.service.TravelPlanServiceImpl$6",
      "flags": "",
      "display": "t.s.TPSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["travelplan.service.TravelPlanServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/void travelplan.service.TravelPlanServiceImpl$6.<init>(travelplan.service.TravelPlanServiceImpl)"
    },
    {
      "id": 14475,
      "name": "getRoutePlanResultCheapest",
      "type": "travelplan.service.TravelPlanServiceImpl",
      "flags": "P",
      "display": "t.s.TPSI.getRoutePlanResultCheapest",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.RoutePlanInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "9109e815d5ce36031b3f6f1b1f7dba744a92cd9913223fbdfd1bc2a70bccb13b",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.getRoutePlanResultCheapest(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14476,
      "name": "queryTrainTypeByName",
      "type": "travelplan.service.TravelPlanServiceImpl",
      "flags": "p",
      "display": "t.s.TPSI.queryTrainTypeByName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.TrainType",
      "endpointURI": null,
      "bytecodeHash": "bae8476033553e480c932b5b078bb2a6dcdfdd305eed55941aac30d6ae2894ef",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/edu.fudan.common.entity.TrainType travelplan.service.TravelPlanServiceImpl.queryTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14477,
      "name": "getRestTicketNumber",
      "type": "travelplan.service.TravelPlanServiceImpl",
      "flags": "P",
      "display": "t.s.TPSI.getRestTicketNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "int",
        "int",
        "java.util.List",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "db2988709da5fb598d0939abe1b1fd7a20d680cda08f7ec37379bea1cbe0ba49",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/int travelplan.service.TravelPlanServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14484,
      "name": "getRoutePlanResultMinStation",
      "type": "travelplan.service.TravelPlanServiceImpl",
      "flags": "P",
      "display": "t.s.TPSI.getRoutePlanResultMinStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.RoutePlanInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "20df4e061d6b8afdc3bd3e9e1e5e415c0d6058637ba399c74e5338ea20a09306",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.getRoutePlanResultMinStation(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14485,
      "name": "getRoutePlanResultQuickest",
      "type": "travelplan.service.TravelPlanServiceImpl",
      "flags": "P",
      "display": "t.s.TPSI.getRoutePlanResultQuickest",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.RoutePlanInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "1669f4871527e05b5de864b85bbcab729c7630e7b0968ad1fa7b7356a9c1cc78",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.getRoutePlanResultQuickest(edu.fudan.common.entity.RoutePlanInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14490,
      "name": "tripsFromHighSpeed",
      "type": "travelplan.service.TravelPlanServiceImpl",
      "flags": "P",
      "display": "t.s.TPSI.tripsFromHighSpeed",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "93e8be3ce5ce3b42dc1ef483bdb7b112bdff2c413556d8a7f727c14b5d595882",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.util.List travelplan.service.TravelPlanServiceImpl.tripsFromHighSpeed(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14491,
      "name": "tripsFromNormal",
      "type": "travelplan.service.TravelPlanServiceImpl",
      "flags": "P",
      "display": "t.s.TPSI.tripsFromNormal",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "b0759af4ca3a1eb1eaeee619acbd5af8abb4176460b196e88f10b2c34853dd80",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.util.ArrayList travelplan.service.TravelPlanServiceImpl.tripsFromNormal(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11052,
      "name": "getCheapest",
      "type": "travelplan.service.TravelPlanServiceImpl",
      "flags": "p",
      "display": "t.s.TPSI.getCheapest",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "5f8529cf95aab03d6239afb687695a3b36b2dd97b53c73993c7c8d34f55b056b",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getCheapest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11054,
      "name": "getMinStation",
      "type": "travelplan.service.TravelPlanServiceImpl",
      "flags": "p",
      "display": "t.s.TPSI.getMinStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "e1d7f769a50af03240a61159ab514d4762ea84abe3a23c89b1b71d68499ff115",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getMinStation(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11055,
      "name": "getQuickest",
      "type": "travelplan.service.TravelPlanServiceImpl",
      "flags": "p",
      "display": "t.s.TPSI.getQuickest",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "24352f7d508dbe1da511e28612ebd5d70638d1db28b46179b71f1ae4dfa476ee",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getQuickest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11059,
      "name": "getTransferSearch",
      "type": "travelplan.service.TravelPlanServiceImpl",
      "flags": "p",
      "display": "t.s.TPSI.getTransferSearch",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "travelplan.entity.TransferTravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "cfcb43704e29cc6a3aae8b93aab0777d94a6e6eb01eea877e70361344d53f770",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanServiceImpl.getTransferSearch(travelplan.entity.TransferTravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11060,
      "name": "canEqual",
      "type": "travelplan.entity.TransferTravelResult",
      "flags": "d",
      "display": "t.e.TTR.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/boolean travelplan.entity.TransferTravelResult.canEqual(java.lang.Object)"
    },
    {
      "id": 11061,
      "name": "getFirstSectionResult",
      "type": "travelplan.entity.TransferTravelResult",
      "flags": "p",
      "display": "t.e.TTR.getFirstSectionResult",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.util.List travelplan.entity.TransferTravelResult.getFirstSectionResult(empty)"
    },
    {
      "id": 11062,
      "name": "getSecondSectionResult",
      "type": "travelplan.entity.TransferTravelResult",
      "flags": "p",
      "display": "t.e.TTR.getSecondSectionResult",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.util.List travelplan.entity.TransferTravelResult.getSecondSectionResult(empty)"
    },
    {
      "id": 11063,
      "name": "canEqual",
      "type": "travelplan.entity.TravelAdvanceResultUnit",
      "flags": "d",
      "display": "t.e.TARU.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.canEqual(java.lang.Object)"
    },
    {
      "id": 11064,
      "name": "getNumberOfRestTicketSecondClass",
      "type": "travelplan.entity.TravelAdvanceResultUnit",
      "flags": "p",
      "display": "t.e.TARU.getNumberOfRestTicketSecondClass",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "55c3aec14ab0022b0eee6c40b7da6cc9e9eefbc1127e154a35a5ad79427fd854",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.getNumberOfRestTicketSecondClass(empty)"
    },
    {
      "id": 11065,
      "name": "getNumberOfRestTicketFirstClass",
      "type": "travelplan.entity.TravelAdvanceResultUnit",
      "flags": "p",
      "display": "t.e.TARU.getNumberOfRestTicketFirstClass",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "c87f96dbb49f50d33ea5ae1c87f642b0f834951625df3f77894f3f2d7265b108",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.getNumberOfRestTicketFirstClass(empty)"
    },
    {
      "id": 11066,
      "name": "getTripId",
      "type": "travelplan.entity.TravelAdvanceResultUnit",
      "flags": "p",
      "display": "t.e.TARU.getTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getTripId(empty)"
    },
    {
      "id": 11067,
      "name": "getTrainTypeId",
      "type": "travelplan.entity.TravelAdvanceResultUnit",
      "flags": "p",
      "display": "t.e.TARU.getTrainTypeId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getTrainTypeId(empty)"
    },
    {
      "id": 11068,
      "name": "getStartStation",
      "type": "travelplan.entity.TravelAdvanceResultUnit",
      "flags": "p",
      "display": "t.e.TARU.getStartStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getStartStation(empty)"
    },
    {
      "id": 11069,
      "name": "getEndStation",
      "type": "travelplan.entity.TravelAdvanceResultUnit",
      "flags": "p",
      "display": "t.e.TARU.getEndStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getEndStation(empty)"
    },
    {
      "id": 11070,
      "name": "getStopStations",
      "type": "travelplan.entity.TravelAdvanceResultUnit",
      "flags": "p",
      "display": "t.e.TARU.getStopStations",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.util.List travelplan.entity.TravelAdvanceResultUnit.getStopStations(empty)"
    },
    {
      "id": 11071,
      "name": "getPriceForSecondClassSeat",
      "type": "travelplan.entity.TravelAdvanceResultUnit",
      "flags": "p",
      "display": "t.e.TARU.getPriceForSecondClassSeat",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getPriceForSecondClassSeat(empty)"
    },
    {
      "id": 11072,
      "name": "getPriceForFirstClassSeat",
      "type": "travelplan.entity.TravelAdvanceResultUnit",
      "flags": "p",
      "display": "t.e.TARU.getPriceForFirstClassSeat",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "5fa52bee8d9ecaf9cc0dbb511c90d8e27e9656598177b730ca11725ba9764f76",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getPriceForFirstClassSeat(empty)"
    },
    {
      "id": 11073,
      "name": "getStartTime",
      "type": "travelplan.entity.TravelAdvanceResultUnit",
      "flags": "p",
      "display": "t.e.TARU.getStartTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "82ee7056b04c640a38c7cc175235331dde4a32bc219c075e81f79d2aaa90b4db",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getStartTime(empty)"
    },
    {
      "id": 11074,
      "name": "getEndTime",
      "type": "travelplan.entity.TravelAdvanceResultUnit",
      "flags": "p",
      "display": "t.e.TARU.getEndTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8147cff25932a21b9f3fd88c09486c0907181365574bf2fabbe0ffbdb9e6a923",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.getEndTime(empty)"
    },
    {
      "id": 47707,
      "name": "getMinStation",
      "type": "travelplan.service.TravelPlanService",
      "flags": "pa",
      "display": "t.s.TPS.getMinStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanService.getMinStation(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47708,
      "name": "getQuickest",
      "type": "travelplan.service.TravelPlanService",
      "flags": "pa",
      "display": "t.s.TPS.getQuickest",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanService.getQuickest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47709,
      "name": "getStartStation",
      "type": "travelplan.entity.TransferTravelInfo",
      "flags": "p",
      "display": "t.e.TTI.getStartStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.lang.String travelplan.entity.TransferTravelInfo.getStartStation(empty)"
    },
    {
      "id": 47710,
      "name": "getEndStation",
      "type": "travelplan.entity.TransferTravelInfo",
      "flags": "p",
      "display": "t.e.TTI.getEndStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.lang.String travelplan.entity.TransferTravelInfo.getEndStation(empty)"
    },
    {
      "id": 47712,
      "name": "getTransferSearch",
      "type": "travelplan.service.TravelPlanService",
      "flags": "pa",
      "display": "t.s.TPS.getTransferSearch",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "travelplan.entity.TransferTravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanService.getTransferSearch(travelplan.entity.TransferTravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47713,
      "name": "getTravelDate",
      "type": "travelplan.entity.TransferTravelInfo",
      "flags": "p",
      "display": "t.e.TTI.getTravelDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.Date",
      "endpointURI": null,
      "bytecodeHash": "d843ebe750ecd061dbbf23a1241f94ddcae3ce97994ae97c8bf533a488c63271",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.util.Date travelplan.entity.TransferTravelInfo.getTravelDate(empty)"
    },
    {
      "id": 47714,
      "name": "getViaStation",
      "type": "travelplan.entity.TransferTravelInfo",
      "flags": "p",
      "display": "t.e.TTI.getViaStation",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.lang.String travelplan.entity.TransferTravelInfo.getViaStation(empty)"
    },
    {
      "id": 47587,
      "name": "getCheapest",
      "type": "travelplan.service.TravelPlanService",
      "flags": "pa",
      "display": "t.s.TPS.getCheapest",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/edu.fudan.common.util.Response travelplan.service.TravelPlanService.getCheapest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7535,
      "name": "<clinit>",
      "type": "travelplan.controller.TravelPlanController",
      "flags": "s",
      "display": "t.c.TPC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "0b8f77f44048cc11847e8f21c8429419711444eef3d88516f6414cbe4307ae76",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/void travelplan.controller.TravelPlanController.<clinit>(empty)"
    },
    {
      "id": 7536,
      "name": "getByCheapest",
      "type": "travelplan.controller.TravelPlanController",
      "flags": "p",
      "display": "t.c.TPC.getByCheapest",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "api/v1/travelplanservice/travelPlan/cheapest",
      "bytecodeHash": "8567a27f2ce52fe9d3eeb26b9271c1e42f3ce88faa5596f6314652b55f48f20f",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel-plan-service/org.springframework.http.HttpEntity travelplan.controller.TravelPlanController.getByCheapest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7537,
      "name": "getByMinStation",
      "type": "travelplan.controller.TravelPlanController",
      "flags": "p",
      "display": "t.c.TPC.getByMinStation",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "api/v1/travelplanservice/travelPlan/minStation",
      "bytecodeHash": "e916c3cfba0cc993ed3b0d6c47dfac3e21ef6c949ba7079b52ef3baa8ca0c7f6",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel-plan-service/org.springframework.http.HttpEntity travelplan.controller.TravelPlanController.getByMinStation(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7538,
      "name": "getByQuickest",
      "type": "travelplan.controller.TravelPlanController",
      "flags": "p",
      "display": "t.c.TPC.getByQuickest",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "api/v1/travelplanservice/travelPlan/quickest",
      "bytecodeHash": "3293a573290b7a9331af2a7d0ea42eaa363fbf6952537e2b75f80154e278651e",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel-plan-service/org.springframework.http.HttpEntity travelplan.controller.TravelPlanController.getByQuickest(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7539,
      "name": "getTransferResult",
      "type": "travelplan.controller.TravelPlanController",
      "flags": "p",
      "display": "t.c.TPC.getTransferResult",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "travelplan.entity.TransferTravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "api/v1/travelplanservice/travelPlan/transferResult",
      "bytecodeHash": "87492139d0651012c913de9482ccc5a2994c30c4c595fd30c077d37dedaf4037",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel-plan-service/org.springframework.http.HttpEntity travelplan.controller.TravelPlanController.getTransferResult(travelplan.entity.TransferTravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7540,
      "name": "home",
      "type": "travelplan.controller.TravelPlanController",
      "flags": "p",
      "display": "t.c.TPC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.lang.String travelplan.controller.TravelPlanController.home(empty)"
    },
    {
      "id": 7541,
      "name": "equals",
      "type": "travelplan.entity.TransferTravelResult",
      "flags": "p",
      "display": "t.e.TTR.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "b30466fa0cd8051ec668680f41a90f13cdde067e5f23e70a6f51f308980603b2",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/boolean travelplan.entity.TransferTravelResult.equals(java.lang.Object)"
    },
    {
      "id": 7542,
      "name": "hashCode",
      "type": "travelplan.entity.TransferTravelResult",
      "flags": "p",
      "display": "t.e.TTR.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "e14c77f74340b3b22da2bffa21e44bf1d6cedd8f448f6396e4f2c313c285a5df",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/int travelplan.entity.TransferTravelResult.hashCode(empty)"
    },
    {
      "id": 7543,
      "name": "toString",
      "type": "travelplan.entity.TransferTravelResult",
      "flags": "p",
      "display": "t.e.TTR.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "43e91e604a7f539c7a3837b3117a9c8b7e13fb18e2c80decbeee0e51192f7d38",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.lang.String travelplan.entity.TransferTravelResult.toString(empty)"
    },
    {
      "id": 7544,
      "name": "equals",
      "type": "travelplan.entity.TravelAdvanceResultUnit",
      "flags": "p",
      "display": "t.e.TARU.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "5e83338e619799b21433cb4a3b2c6cca754555fd251089748df80fe4baa24cf9",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/boolean travelplan.entity.TravelAdvanceResultUnit.equals(java.lang.Object)"
    },
    {
      "id": 18168,
      "name": "getServiceUrl",
      "type": "travelplan.service.TravelPlanServiceImpl",
      "flags": "P",
      "display": "t.s.TPSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c1b0f9c62ce4cf4f7c981f6ed811047ff2978f44917a1c007e883fbad1129bce",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.lang.String travelplan.service.TravelPlanServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 7545,
      "name": "hashCode",
      "type": "travelplan.entity.TravelAdvanceResultUnit",
      "flags": "p",
      "display": "t.e.TARU.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "2febf7971b5dd79f919c7876f05cf449422c81502213c40dac1cc19c1bf72c31",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/int travelplan.entity.TravelAdvanceResultUnit.hashCode(empty)"
    },
    {
      "id": 18169,
      "name": "<init>",
      "type": "travelplan.service.TravelPlanServiceImpl$2",
      "flags": "",
      "display": "t.s.TPSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["travelplan.service.TravelPlanServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/void travelplan.service.TravelPlanServiceImpl$2.<init>(travelplan.service.TravelPlanServiceImpl)"
    },
    {
      "id": 7546,
      "name": "toString",
      "type": "travelplan.entity.TravelAdvanceResultUnit",
      "flags": "p",
      "display": "t.e.TARU.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "b182080f2974d226882cd2a1fec23f6ad68c9ff20c72eb54dbc10cdcc8a58511",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/java.lang.String travelplan.entity.TravelAdvanceResultUnit.toString(empty)"
    },
    {
      "id": 7547,
      "name": "<clinit>",
      "type": "travelplan.service.TravelPlanServiceImpl",
      "flags": "s",
      "display": "t.s.TPSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "fbaf0cbfdf9bac135f0e436478dce48aec6f01b8e4f48648753daac508d92ed8",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/void travelplan.service.TravelPlanServiceImpl.<clinit>(empty)"
    },
    {
      "id": 18175,
      "name": "<init>",
      "type": "travelplan.service.TravelPlanServiceImpl$1",
      "flags": "",
      "display": "t.s.TPSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["travelplan.service.TravelPlanServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-travel-plan-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-plan-service/void travelplan.service.TravelPlanServiceImpl$1.<init>(travelplan.service.TravelPlanServiceImpl)"
    },
    {
      "id": 14598,
      "name": "<init>",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripId",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String"
      ],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "922159ea18c7283107cffb816229ef0e3390f9630635b458dcb0189d27f454df",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/void travel.entity.Trip.<init>(edu.fudan.common.entity.TripId, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
    },
    {
      "id": 14605,
      "name": "getTickets",
      "type": "travel.service.TravelServiceImpl",
      "flags": "P",
      "display": "t.s.TSI.getTickets",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "travel.entity.Trip",
        "edu.fudan.common.entity.Route",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.TripResponse",
      "endpointURI": null,
      "bytecodeHash": "0b685f3b0d8b03a0512ac736823a5158fb98d464f759ae8ba038233d97997674",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.getTickets(travel.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14609,
      "name": "getTicketsByBatch",
      "type": "travel.service.TravelServiceImpl",
      "flags": "P",
      "display": "t.s.TSI.getTicketsByBatch",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.List",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "da1ead011d0a24acf3031bfde2ff764958268e3e72c660bf0e5cc0282944ea21",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.util.List travel.service.TravelServiceImpl.getTicketsByBatch(java.util.List, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14610,
      "name": "<init>",
      "type": "travel.service.TravelServiceImpl$MyCallable",
      "flags": "",
      "display": "t.s.TSIMC.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "travel.service.TravelServiceImpl",
        "edu.fudan.common.entity.TripInfo",
        "java.lang.String",
        "java.lang.String",
        "travel.entity.Trip",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "2928519ed260ee60cf0f8d68c8f48e0a959d3e48b558f446d84f0b20ee59d9d2",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/void travel.service.TravelServiceImpl$MyCallable.<init>(travel.service.TravelServiceImpl, edu.fudan.common.entity.TripInfo, java.lang.String, java.lang.String, travel.entity.Trip, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47893,
      "name": "queryInParallel",
      "type": "travel.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.queryInParallel",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelService.queryInParallel(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47896,
      "name": "retrieve",
      "type": "travel.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.retrieve",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelService.retrieve(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47897,
      "name": "update",
      "type": "travel.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.update",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelService.update(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47898,
      "name": "setStartStationName",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.setStartStationName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1c059b5fe325fde7d43b063306b8ea508a338bafb0f3efc8a9c0b94e3f6e422c",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/void travel.entity.Trip.setStartStationName(java.lang.String)"
    },
    {
      "id": 47899,
      "name": "setStationsName",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.setStationsName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "935836f6468fbbdce3aa550163b41db4acc66eaba962e885841470780dddd4d2",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/void travel.entity.Trip.setStationsName(java.lang.String)"
    },
    {
      "id": 47900,
      "name": "setTerminalStationName",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.setTerminalStationName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "48fb720aa2a9b68dfbb952c6e9e11d36348ceb48bf0fec91e3294ba5ac037a6d",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/void travel.entity.Trip.setTerminalStationName(java.lang.String)"
    },
    {
      "id": 47901,
      "name": "setStartTime",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.setStartTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1d639c8f9d43d88d1092bc7e304fe5af5f3947dc8cd8d30fe244a71c9d82d654",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/void travel.entity.Trip.setStartTime(java.lang.String)"
    },
    {
      "id": 47902,
      "name": "setEndTime",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.setEndTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "3187f710dcb01652de862560cc7782b805f200c9af0d7b1df750b2924081e43c",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/void travel.entity.Trip.setEndTime(java.lang.String)"
    },
    {
      "id": 47903,
      "name": "setRouteId",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.setRouteId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "4b4a95718f47d6e120ea908206ec14d71a5ef30340520d38301caa02852d54b7",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/void travel.entity.Trip.setRouteId(java.lang.String)"
    },
    {
      "id": 17451,
      "name": "call",
      "type": "travel.service.TravelServiceImpl$MyCallable",
      "flags": "pby",
      "display": "t.s.TSIMC.call",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "8493e112aa1bed53602447addbf7e4585f2253ab8a1cb7e89adcb235e8f80fbf",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.Object travel.service.TravelServiceImpl$MyCallable.call(empty)"
    },
    {
      "id": 25167,
      "name": "<init>",
      "type": "travel.service.TravelServiceImpl$3",
      "flags": "",
      "display": "t.s.TSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["travel.service.TravelServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/void travel.service.TravelServiceImpl$3.<init>(travel.service.TravelServiceImpl)"
    },
    {
      "id": 21086,
      "name": "call",
      "type": "travel.service.TravelServiceImpl$MyCallable",
      "flags": "p",
      "display": "t.s.TSIMC.call",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "edu.fudan.common.entity.TripResponse",
      "endpointURI": null,
      "bytecodeHash": "a284fd5705622c44ff15c74091e3b71324de9d606d9f26f0ed9a114585e8cb0e",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl$MyCallable.call(empty)"
    },
    {
      "id": 18299,
      "name": "getServiceUrl",
      "type": "travel.service.TravelServiceImpl",
      "flags": "P",
      "display": "t.s.TSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c9c0a31040a9ca48439132d02b4a2e8f5c4a8891d9268f6f1f81d0a630c698ca",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.String travel.service.TravelServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 18302,
      "name": "<init>",
      "type": "travel.service.TravelServiceImpl$2",
      "flags": "",
      "display": "t.s.TSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["travel.service.TravelServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/void travel.service.TravelServiceImpl$2.<init>(travel.service.TravelServiceImpl)"
    },
    {
      "id": 47749,
      "name": "adminQueryAll",
      "type": "travel.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.adminQueryAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelService.adminQueryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47750,
      "name": "findAll",
      "type": "travel.repository.TripRepository",
      "flags": "pa",
      "display": "t.r.TR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.util.ArrayList travel.repository.TripRepository.findAll(empty)"
    },
    {
      "id": 18311,
      "name": "afterToday",
      "type": "travel.service.TravelServiceImpl",
      "flags": "Ps",
      "display": "t.s.TSI.afterToday",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "d5618863adc5e6d6fdc07d3a8a93f272c3892dd62477d29e72ec3eacee6a2ce4",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/boolean travel.service.TravelServiceImpl.afterToday(java.lang.String)"
    },
    {
      "id": 18312,
      "name": "setResponse",
      "type": "travel.service.TravelServiceImpl",
      "flags": "P",
      "display": "t.s.TSI.setResponse",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "travel.entity.Trip",
        "edu.fudan.common.entity.TravelResult",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.TripResponse",
      "endpointURI": null,
      "bytecodeHash": "459ab121fff1e159b24d9d9d1461a1bf5bc7186ee3219632b23d6785437f05fb",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.setResponse(travel.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11146,
      "name": "adminQueryAll",
      "type": "travel.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.adminQueryAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "dc66f9cc5b78f75a1a680530b5e893e7e52ea73a4b650f31bcb7670b0109f550",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.adminQueryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 18315,
      "name": "<init>",
      "type": "travel.service.TravelServiceImpl$1",
      "flags": "",
      "display": "t.s.TSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["travel.service.TravelServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/void travel.service.TravelServiceImpl$1.<init>(travel.service.TravelServiceImpl)"
    },
    {
      "id": 24461,
      "name": "access$100",
      "type": "travel.service.TravelServiceImpl",
      "flags": "sy",
      "display": "t.s.TSI.access$100",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "travel.service.TravelServiceImpl",
        "travel.entity.Trip",
        "edu.fudan.common.entity.Route",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.TripResponse",
      "endpointURI": null,
      "bytecodeHash": "d8b5798e480ee8da7e6bf8c43ce6743bd6a97339b61d3111c6e5f6ed273931c1",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.service.TravelServiceImpl.access$100(travel.service.TravelServiceImpl, travel.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47758,
      "name": "create",
      "type": "travel.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelService.create(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11151,
      "name": "create",
      "type": "travel.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "e4062bf54ce2246c940a5f7af55b7293a2f284d424c097f6284424708bd1f2cc",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.create(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47759,
      "name": "findByTripId",
      "type": "travel.repository.TripRepository",
      "flags": "pa",
      "display": "t.r.TR.findByTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["edu.fudan.common.entity.TripId"],
      "returnType": "travel.entity.Trip",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/travel.entity.Trip travel.repository.TripRepository.findByTripId(edu.fudan.common.entity.TripId)"
    },
    {
      "id": 11153,
      "name": "delete",
      "type": "travel.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.delete",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "523fb50ac02e310d222e5238b6d7484be88d038a63dd840780b2576efb3c77bb",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.delete(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11154,
      "name": "getRouteByTripId",
      "type": "travel.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.getRouteByTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "f27920c7c935f52f7b57bd116fa9e3c1f1d89077e81841835613cbbcad1d7425",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.getRouteByTripId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11155,
      "name": "getTrainTypeByTripId",
      "type": "travel.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.getTrainTypeByTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "328bb504cbef9b6044ea24a13c21f2cdbd101637ff72dc1cdb9df3aafa3c2054",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.getTrainTypeByTripId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11156,
      "name": "getTripAllDetailInfo",
      "type": "travel.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.getTripAllDetailInfo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripAllDetailInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "fa6c9d491d4e88394bbe6b88cfe34faad46a439ae15f63f4d0504a95a81ceeaa",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.getTripAllDetailInfo(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11157,
      "name": "getTripByRoute",
      "type": "travel.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.getTripByRoute",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.ArrayList",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "4742091aa6959415509512ccb553cb50dfa1c790f6e31d8596064f5374ff1254",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.getTripByRoute(java.util.ArrayList, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11158,
      "name": "queryAll",
      "type": "travel.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.queryAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "49f4f466544ae4dc34e729892ef5216eeb9d221d399787b0cd78b5bc6a8664cc",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.queryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11159,
      "name": "queryByBatch",
      "type": "travel.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.queryByBatch",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "bedf83bc495e668b99a0a4d14abc7eaedb7932943e61845e03e38d98ee3db249",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.queryByBatch(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47767,
      "name": "save",
      "type": "travel.repository.TripRepository",
      "flags": "pby",
      "display": "t.r.TR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "31a7afb2f5797e3ad1857fa70d5c258cee6f01625c457975daa651527e1891f2",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.Object travel.repository.TripRepository.save(java.lang.Object)"
    },
    {
      "id": 11160,
      "name": "queryInParallel",
      "type": "travel.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.queryInParallel",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "470c7187ff6960c3605834823f58e65e535ac0afc5de2dc80229855c301f856e",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.queryInParallel(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47768,
      "name": "delete",
      "type": "travel.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.delete",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelService.delete(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11161,
      "name": "retrieve",
      "type": "travel.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.retrieve",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "8269ef4b78068510debf60ee02da2c6ea1e6536ac5f862a385d7f2c710f043ee",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.retrieve(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47769,
      "name": "deleteByTripId",
      "type": "travel.repository.TripRepository",
      "flags": "pa",
      "display": "t.r.TR.deleteByTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["edu.fudan.common.entity.TripId"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/void travel.repository.TripRepository.deleteByTripId(edu.fudan.common.entity.TripId)"
    },
    {
      "id": 11162,
      "name": "update",
      "type": "travel.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.update",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "f154d383aa88cdecd38d3e768af1c1d12f3c045dce5ce8aad96a148b728c9878",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelServiceImpl.update(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47770,
      "name": "getRouteByTripId",
      "type": "travel.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.getRouteByTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelService.getRouteByTripId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11163,
      "name": "canEqual",
      "type": "travel.entity.AdminTrip",
      "flags": "d",
      "display": "t.e.AT.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/boolean travel.entity.AdminTrip.canEqual(java.lang.Object)"
    },
    {
      "id": 47771,
      "name": "getTrainTypeByTripId",
      "type": "travel.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.getTrainTypeByTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelService.getTrainTypeByTripId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11164,
      "name": "getTrip",
      "type": "travel.entity.AdminTrip",
      "flags": "p",
      "display": "t.e.AT.getTrip",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "travel.entity.Trip",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/travel.entity.Trip travel.entity.AdminTrip.getTrip(empty)"
    },
    {
      "id": 11165,
      "name": "getTrainType",
      "type": "travel.entity.AdminTrip",
      "flags": "p",
      "display": "t.e.AT.getTrainType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "edu.fudan.common.entity.TrainType",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.entity.TrainType travel.entity.AdminTrip.getTrainType(empty)"
    },
    {
      "id": 47773,
      "name": "getTripAllDetailInfo",
      "type": "travel.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.getTripAllDetailInfo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripAllDetailInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelService.getTripAllDetailInfo(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11166,
      "name": "getRoute",
      "type": "travel.entity.AdminTrip",
      "flags": "p",
      "display": "t.e.AT.getRoute",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "edu.fudan.common.entity.Route",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.entity.Route travel.entity.AdminTrip.getRoute(empty)"
    },
    {
      "id": 11167,
      "name": "canEqual",
      "type": "travel.entity.Travel",
      "flags": "d",
      "display": "t.e.T.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/boolean travel.entity.Travel.canEqual(java.lang.Object)"
    },
    {
      "id": 11168,
      "name": "getTrip",
      "type": "travel.entity.Travel",
      "flags": "p",
      "display": "t.e.T.getTrip",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "travel.entity.Trip",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/travel.entity.Trip travel.entity.Travel.getTrip(empty)"
    },
    {
      "id": 11169,
      "name": "getStartPlace",
      "type": "travel.entity.Travel",
      "flags": "p",
      "display": "t.e.T.getStartPlace",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.String travel.entity.Travel.getStartPlace(empty)"
    },
    {
      "id": 11170,
      "name": "getEndPlace",
      "type": "travel.entity.Travel",
      "flags": "p",
      "display": "t.e.T.getEndPlace",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.String travel.entity.Travel.getEndPlace(empty)"
    },
    {
      "id": 11171,
      "name": "getDepartureTime",
      "type": "travel.entity.Travel",
      "flags": "p",
      "display": "t.e.T.getDepartureTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.String travel.entity.Travel.getDepartureTime(empty)"
    },
    {
      "id": 11172,
      "name": "canEqual",
      "type": "travel.entity.Trip",
      "flags": "d",
      "display": "t.e.T.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/boolean travel.entity.Trip.canEqual(java.lang.Object)"
    },
    {
      "id": 11173,
      "name": "getId",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "82ee7056b04c640a38c7cc175235331dde4a32bc219c075e81f79d2aaa90b4db",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.String travel.entity.Trip.getId(empty)"
    },
    {
      "id": 11174,
      "name": "getTripId",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "edu.fudan.common.entity.TripId",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.entity.TripId travel.entity.Trip.getTripId(empty)"
    },
    {
      "id": 11175,
      "name": "getTrainTypeName",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getTrainTypeName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.String travel.entity.Trip.getTrainTypeName(empty)"
    },
    {
      "id": 11176,
      "name": "getRouteId",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getRouteId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "b2e08cdc9daefc1804beba6325d79da5b11a0f54acbfd4dd233b1c223b1821c6",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.String travel.entity.Trip.getRouteId(empty)"
    },
    {
      "id": 11177,
      "name": "getStartStationName",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getStartStationName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.String travel.entity.Trip.getStartStationName(empty)"
    },
    {
      "id": 11178,
      "name": "getStationsName",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getStationsName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.String travel.entity.Trip.getStationsName(empty)"
    },
    {
      "id": 11179,
      "name": "getTerminalStationName",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getTerminalStationName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.String travel.entity.Trip.getTerminalStationName(empty)"
    },
    {
      "id": 11180,
      "name": "getStartTime",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getStartTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "668501b084f2dc96265ceb4e39579391868136fffaeab12c3f93e3c91daee2e4",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.String travel.entity.Trip.getStartTime(empty)"
    },
    {
      "id": 11181,
      "name": "getEndTime",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getEndTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "5fa52bee8d9ecaf9cc0dbb511c90d8e27e9656598177b730ca11725ba9764f76",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.String travel.entity.Trip.getEndTime(empty)"
    },
    {
      "id": 47789,
      "name": "getTripByRoute",
      "type": "travel.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.getTripByRoute",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.ArrayList",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelService.getTripByRoute(java.util.ArrayList, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11182,
      "name": "canEqual",
      "type": "travel.entity.TripAllDetail",
      "flags": "d",
      "display": "t.e.TAD.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/boolean travel.entity.TripAllDetail.canEqual(java.lang.Object)"
    },
    {
      "id": 47790,
      "name": "findByRouteId",
      "type": "travel.repository.TripRepository",
      "flags": "pa",
      "display": "t.r.TR.findByRouteId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.util.ArrayList travel.repository.TripRepository.findByRouteId(java.lang.String)"
    },
    {
      "id": 11183,
      "name": "getTripResponse",
      "type": "travel.entity.TripAllDetail",
      "flags": "p",
      "display": "t.e.TAD.getTripResponse",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "edu.fudan.common.entity.TripResponse",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.entity.TripResponse travel.entity.TripAllDetail.getTripResponse(empty)"
    },
    {
      "id": 47791,
      "name": "queryAll",
      "type": "travel.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.queryAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelService.queryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11184,
      "name": "getTrip",
      "type": "travel.entity.TripAllDetail",
      "flags": "p",
      "display": "t.e.TAD.getTrip",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "travel.entity.Trip",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/travel.entity.Trip travel.entity.TripAllDetail.getTrip(empty)"
    },
    {
      "id": 47792,
      "name": "queryByBatch",
      "type": "travel.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.queryByBatch",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.util.Response travel.service.TravelService.queryByBatch(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7604,
      "name": "<clinit>",
      "type": "travel.controller.TravelController",
      "flags": "s",
      "display": "t.c.TC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "ec7df254013c001028614cc610d386ad3c507652aed4b4e562f13639276fefde",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/void travel.controller.TravelController.<clinit>(empty)"
    },
    {
      "id": 7605,
      "name": "adminQueryAll",
      "type": "travel.controller.TravelController",
      "flags": "p",
      "display": "t.c.TC.adminQueryAll",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travelservice/admin_trip",
      "bytecodeHash": "a0e5ce5ebf1fffbe00d0239f2dd486c92562391a371b06007313542bf64a9a72",
      "microservice": "ts-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.adminQueryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7606,
      "name": "createTrip",
      "type": "travel.controller.TravelController",
      "flags": "p",
      "display": "t.c.TC.createTrip",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travelservice/trips",
      "bytecodeHash": "368ff7fc9c4cd0442465467d187c1c29cb6006a1a52004530deb3db0e7623bf4",
      "microservice": "ts-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.createTrip(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7607,
      "name": "deleteTrip",
      "type": "travel.controller.TravelController",
      "flags": "p",
      "display": "t.c.TC.deleteTrip",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travelservice/trips/{tripId}",
      "bytecodeHash": "2bc5d9bd1419878eb0845396719c9f0ab28a8b665e0bb4dd46ef72ad563641bb",
      "microservice": "ts-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.deleteTrip(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7608,
      "name": "getRouteByTripId",
      "type": "travel.controller.TravelController",
      "flags": "p",
      "display": "t.c.TC.getRouteByTripId",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travelservice/routes/{tripId}",
      "bytecodeHash": "db8def337b50901b875612f7be3c151faac725697f4189aba1144e7cb02d8279",
      "microservice": "ts-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.getRouteByTripId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7609,
      "name": "getTrainTypeByTripId",
      "type": "travel.controller.TravelController",
      "flags": "p",
      "display": "t.c.TC.getTrainTypeByTripId",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travelservice/train_types/{tripId}",
      "bytecodeHash": "97e0b2e9c29341172cf29b09d94a4b3e830944adf57fbf0e739fc548ddf9d199",
      "microservice": "ts-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.getTrainTypeByTripId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7610,
      "name": "getTripAllDetailInfo",
      "type": "travel.controller.TravelController",
      "flags": "p",
      "display": "t.c.TC.getTripAllDetailInfo",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.TripAllDetailInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travelservice/trip_detail",
      "bytecodeHash": "d086a639c7635732b8cf9a17964e9561972f848cc903ee4a829409d02511eed2",
      "microservice": "ts-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.getTripAllDetailInfo(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7611,
      "name": "getTripsByRouteId",
      "type": "travel.controller.TravelController",
      "flags": "p",
      "display": "t.c.TC.getTripsByRouteId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.ArrayList",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": null,
      "bytecodeHash": "bdcc84df8df4b8e8c8f4e49f2d694a8693d6ca99fca798cf6c46e59d5ca4e942",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.getTripsByRouteId(java.util.ArrayList, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7612,
      "name": "home",
      "type": "travel.controller.TravelController",
      "flags": "p",
      "display": "t.c.TC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "/api/v1/travelservice/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel-service/java.lang.String travel.controller.TravelController.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 21948,
      "name": "getRestTicketNumber",
      "type": "travel.service.TravelServiceImpl",
      "flags": "P",
      "display": "t.s.TSI.getRestTicketNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "int",
        "int",
        "java.util.List",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "07eab8fc6a4fa532474d5049d897b54c6603c382e9e0742225ef2fb7c5fd4002",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/int travel.service.TravelServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7613,
      "name": "queryAll",
      "type": "travel.controller.TravelController",
      "flags": "p",
      "display": "t.c.TC.queryAll",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travelservice/trips",
      "bytecodeHash": "e52d32958e33ff4bf999fe6c9a6d7a7673f2994f31db2b22a05b3a0d16e27822",
      "microservice": "ts-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.queryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7614,
      "name": "queryInfo",
      "type": "travel.controller.TravelController",
      "flags": "p",
      "display": "t.c.TC.queryInfo",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travelservice/trips/left",
      "bytecodeHash": "6f7ecfb1a6f31d4c1716578d4420a1d25822909d12df1489bc07e091b6ba5cde",
      "microservice": "ts-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.queryInfo(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7615,
      "name": "queryInfoInparallel",
      "type": "travel.controller.TravelController",
      "flags": "p",
      "display": "t.c.TC.queryInfoInparallel",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travelservice/trips/left_parallel",
      "bytecodeHash": "219d3d01fa8bc8c7f7fd5cda060f54e9c71ec4c570e1047c53d11339da0a9e4e",
      "microservice": "ts-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.queryInfoInparallel(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7616,
      "name": "retrieve",
      "type": "travel.controller.TravelController",
      "flags": "p",
      "display": "t.c.TC.retrieve",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travelservice/trips/{tripId}",
      "bytecodeHash": "588514dd79c29614000c9b93292d053ba71963ba0330000bb85c71b05b6230a9",
      "microservice": "ts-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7617,
      "name": "updateTrip",
      "type": "travel.controller.TravelController",
      "flags": "p",
      "display": "t.c.TC.updateTrip",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travelservice/trips",
      "bytecodeHash": "95d3c0f622f85589c70c6a5268bab278d31199f8f47865b9f91f6f1d6ebb27ee",
      "microservice": "ts-travel-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.updateTrip(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7618,
      "name": "equals",
      "type": "travel.entity.AdminTrip",
      "flags": "p",
      "display": "t.e.AT.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "9dfcdc8c08828cb3dcc82fb9a8b2ca4407d55a1a169776eb78f4a2c9a4c5f0ef",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/boolean travel.entity.AdminTrip.equals(java.lang.Object)"
    },
    {
      "id": 7619,
      "name": "hashCode",
      "type": "travel.entity.AdminTrip",
      "flags": "p",
      "display": "t.e.AT.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "1af13273a01c3ee0e296a86f46f7158847a994524a208ec361d4981b6b48e869",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/int travel.entity.AdminTrip.hashCode(empty)"
    },
    {
      "id": 7620,
      "name": "toString",
      "type": "travel.entity.AdminTrip",
      "flags": "p",
      "display": "t.e.AT.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "9a8ed70387340784e3f9c37dca01021d14267b47ffaed215512b1dfc513b0dd6",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.String travel.entity.AdminTrip.toString(empty)"
    },
    {
      "id": 7621,
      "name": "equals",
      "type": "travel.entity.Travel",
      "flags": "p",
      "display": "t.e.T.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "a9b4d5b90d7f0bbe8d107e7c95739d8bd9986a9c254d8619705d3bd128badc4b",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/boolean travel.entity.Travel.equals(java.lang.Object)"
    },
    {
      "id": 7622,
      "name": "hashCode",
      "type": "travel.entity.Travel",
      "flags": "p",
      "display": "t.e.T.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "863eaebf4aa8dcffabcdbde9f1fb066fcfaf2204787efa05866318da4abcb7e7",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/int travel.entity.Travel.hashCode(empty)"
    },
    {
      "id": 7623,
      "name": "toString",
      "type": "travel.entity.Travel",
      "flags": "p",
      "display": "t.e.T.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "84451b95e99153ae9d827c3520640478c0ea2fb046f6016fe3bbf1d8b9cae0a5",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.String travel.entity.Travel.toString(empty)"
    },
    {
      "id": 7624,
      "name": "equals",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "6532486517b9049f035410b0d3d75f4819df219bd5396afccabb977e719f04e2",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/boolean travel.entity.Trip.equals(java.lang.Object)"
    },
    {
      "id": 7625,
      "name": "hashCode",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "ef6eceb1bec255bc3f7e1a5fffff0d4a98af8178f6b9dfea9dfbd028e7e7ba5c",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/int travel.entity.Trip.hashCode(empty)"
    },
    {
      "id": 7626,
      "name": "toString",
      "type": "travel.entity.Trip",
      "flags": "p",
      "display": "t.e.T.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "7326c63302c84394e419b127faf863e724b0d0826aa12ec610aea1c1bf108f9f",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.String travel.entity.Trip.toString(empty)"
    },
    {
      "id": 7627,
      "name": "equals",
      "type": "travel.entity.TripAllDetail",
      "flags": "p",
      "display": "t.e.TAD.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "b30466fa0cd8051ec668680f41a90f13cdde067e5f23e70a6f51f308980603b2",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/boolean travel.entity.TripAllDetail.equals(java.lang.Object)"
    },
    {
      "id": 7628,
      "name": "hashCode",
      "type": "travel.entity.TripAllDetail",
      "flags": "p",
      "display": "t.e.TAD.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "e14c77f74340b3b22da2bffa21e44bf1d6cedd8f448f6396e4f2c313c285a5df",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/int travel.entity.TripAllDetail.hashCode(empty)"
    },
    {
      "id": 7629,
      "name": "toString",
      "type": "travel.entity.TripAllDetail",
      "flags": "p",
      "display": "t.e.TAD.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8a47460edcb85032dce3ad9f57fbba71d960259d1c017ae9ab2fef8ca789eaf9",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/java.lang.String travel.entity.TripAllDetail.toString(empty)"
    },
    {
      "id": 7630,
      "name": "<clinit>",
      "type": "travel.service.TravelServiceImpl",
      "flags": "s",
      "display": "t.s.TSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "6b53007e347277b640d064fb40de7890f9e3e0774aa7a28baf89696c9a4bfbc0",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/void travel.service.TravelServiceImpl.<clinit>(empty)"
    },
    {
      "id": 14587,
      "name": "getRouteByRouteId",
      "type": "travel.service.TravelServiceImpl",
      "flags": "P",
      "display": "t.s.TSI.getRouteByRouteId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.Route",
      "endpointURI": null,
      "bytecodeHash": "044dae16dbdbb4882288611fdc83936d1f73263a583b2b3d76777f31ef68cafb",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.entity.Route travel.service.TravelServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14588,
      "name": "getTrainTypeByName",
      "type": "travel.service.TravelServiceImpl",
      "flags": "P",
      "display": "t.s.TSI.getTrainTypeByName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.TrainType",
      "endpointURI": null,
      "bytecodeHash": "11fc50feb0933b61604b61f08af0a495518418b19ba51186970b33e60bd3c647",
      "microservice": "ts-travel-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel-service/edu.fudan.common.entity.TrainType travel.service.TravelServiceImpl.getTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14595,
      "name": "<init>",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripId",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String"
      ],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "922159ea18c7283107cffb816229ef0e3390f9630635b458dcb0189d27f454df",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/void travel2.entity.Trip.<init>(edu.fudan.common.entity.TripId, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
    },
    {
      "id": 11144,
      "name": "adminQueryAll",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.adminQueryAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "3ded23c6127f2223032066c1f12b7b037138c8d11004186dd7e9c3808439adac",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.adminQueryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47753,
      "name": "getTripByRoute",
      "type": "travel2.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.getTripByRoute",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.ArrayList",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelService.getTripByRoute(java.util.ArrayList, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14602,
      "name": "getTickets",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "P",
      "display": "t.s.TSI.getTickets",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "travel2.entity.Trip",
        "edu.fudan.common.entity.Route",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.TripResponse",
      "endpointURI": null,
      "bytecodeHash": "22e4ecdbd835cec1cc08d9ee142c7ef518378b0018e04af708e00ce2e24ce94b",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.getTickets(travel2.entity.Trip, edu.fudan.common.entity.Route, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47754,
      "name": "findByRouteId",
      "type": "travel2.repository.TripRepository",
      "flags": "pa",
      "display": "t.r.TR.findByRouteId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.util.ArrayList travel2.repository.TripRepository.findByRouteId(java.lang.String)"
    },
    {
      "id": 47755,
      "name": "queryAll",
      "type": "travel2.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.queryAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelService.queryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11149,
      "name": "create",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "958e97382410ee607fdf81bd767d323902c3330e26054339b1baf3f98e6a58db",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.create(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14606,
      "name": "getTicketsByBatch",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "P",
      "display": "t.s.TSI.getTicketsByBatch",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.List",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "7ce2ae3961ba1f098c0dc3cb31dfbae07008613c32f576001baa5f6f41aec287",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.util.List travel2.service.TravelServiceImpl.getTicketsByBatch(java.util.List, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11151,
      "name": "delete",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.delete",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "70df169adf05374bc2d8ef978f6dee98211b05c408c716cca71655ef3b4fadd1",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.delete(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47759,
      "name": "queryByBatch",
      "type": "travel2.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.queryByBatch",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelService.queryByBatch(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11152,
      "name": "getRouteByTripId",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.getRouteByTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "606ef1b662d1e4c1cfd657fb18927531bf94a5032f4c08c7210b40532c6ea63f",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.getRouteByTripId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11153,
      "name": "getTrainTypeByTripId",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.getTrainTypeByTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "e2313d00f05616f8a831ea4214fa357e6006dca26d78500215099e1cdc51ac49",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.getTrainTypeByTripId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11154,
      "name": "getTripAllDetailInfo",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.getTripAllDetailInfo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripAllDetailInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "0a79e96608c94ed77142f5d45dbd0f797050556e171ae9b3f882d851e8a7abed",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.getTripAllDetailInfo(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11155,
      "name": "getTripByRoute",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.getTripByRoute",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.ArrayList",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "ae844bd1d08baa01211ade0fdc0f67eec4b115ac3bdd73a77a8227d167b26e10",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.getTripByRoute(java.util.ArrayList, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11156,
      "name": "queryAll",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.queryAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "cf5abbbde348f75aa076329277844fce0275efd69b8276dd47536b7119b8c62e",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.queryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11157,
      "name": "queryByBatch",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.queryByBatch",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "2939a01eb4321bd722f7766933e1111a8bae37ab90ef3ca98d035cc9333da55d",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.queryByBatch(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11158,
      "name": "retrieve",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.retrieve",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "44003d1d01060edeb5fa1e17c319419f365e5ed7824ac7f7f820d65ff92b5beb",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.retrieve(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11159,
      "name": "update",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "p",
      "display": "t.s.TSI.update",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "efd0019e757fbebf23ef699772b984d563e11937a533b3461fa4626b8df466c4",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelServiceImpl.update(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11160,
      "name": "canEqual",
      "type": "travel2.entity.AdminTrip",
      "flags": "d",
      "display": "t.e.AT.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/boolean travel2.entity.AdminTrip.canEqual(java.lang.Object)"
    },
    {
      "id": 11161,
      "name": "getTrip",
      "type": "travel2.entity.AdminTrip",
      "flags": "p",
      "display": "t.e.AT.getTrip",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "travel2.entity.Trip",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/travel2.entity.Trip travel2.entity.AdminTrip.getTrip(empty)"
    },
    {
      "id": 11162,
      "name": "getTrainType",
      "type": "travel2.entity.AdminTrip",
      "flags": "p",
      "display": "t.e.AT.getTrainType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "edu.fudan.common.entity.TrainType",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.entity.TrainType travel2.entity.AdminTrip.getTrainType(empty)"
    },
    {
      "id": 11163,
      "name": "getRoute",
      "type": "travel2.entity.AdminTrip",
      "flags": "p",
      "display": "t.e.AT.getRoute",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "edu.fudan.common.entity.Route",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.entity.Route travel2.entity.AdminTrip.getRoute(empty)"
    },
    {
      "id": 11164,
      "name": "canEqual",
      "type": "travel2.entity.Travel",
      "flags": "d",
      "display": "t.e.T.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/boolean travel2.entity.Travel.canEqual(java.lang.Object)"
    },
    {
      "id": 11165,
      "name": "getTrip",
      "type": "travel2.entity.Travel",
      "flags": "p",
      "display": "t.e.T.getTrip",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "travel2.entity.Trip",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/travel2.entity.Trip travel2.entity.Travel.getTrip(empty)"
    },
    {
      "id": 11166,
      "name": "getStartPlace",
      "type": "travel2.entity.Travel",
      "flags": "p",
      "display": "t.e.T.getStartPlace",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.entity.Travel.getStartPlace(empty)"
    },
    {
      "id": 11167,
      "name": "getEndPlace",
      "type": "travel2.entity.Travel",
      "flags": "p",
      "display": "t.e.T.getEndPlace",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.entity.Travel.getEndPlace(empty)"
    },
    {
      "id": 11168,
      "name": "getDepartureTime",
      "type": "travel2.entity.Travel",
      "flags": "p",
      "display": "t.e.T.getDepartureTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.entity.Travel.getDepartureTime(empty)"
    },
    {
      "id": 11169,
      "name": "canEqual",
      "type": "travel2.entity.Trip",
      "flags": "d",
      "display": "t.e.T.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/boolean travel2.entity.Trip.canEqual(java.lang.Object)"
    },
    {
      "id": 21921,
      "name": "getRestTicketNumber",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "P",
      "display": "t.s.TSI.getRestTicketNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "int",
        "int",
        "java.util.List",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "96bfd9a573cc6f1e96d16561a989f5c0f36fdbd7dd20a59616cde218d38d03cd",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/int travel2.service.TravelServiceImpl.getRestTicketNumber(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.util.List, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11170,
      "name": "getId",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "82ee7056b04c640a38c7cc175235331dde4a32bc219c075e81f79d2aaa90b4db",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.entity.Trip.getId(empty)"
    },
    {
      "id": 11171,
      "name": "getTripId",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "edu.fudan.common.entity.TripId",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.entity.TripId travel2.entity.Trip.getTripId(empty)"
    },
    {
      "id": 11172,
      "name": "getTrainTypeName",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getTrainTypeName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.entity.Trip.getTrainTypeName(empty)"
    },
    {
      "id": 11173,
      "name": "getRouteId",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getRouteId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "b2e08cdc9daefc1804beba6325d79da5b11a0f54acbfd4dd233b1c223b1821c6",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.entity.Trip.getRouteId(empty)"
    },
    {
      "id": 11174,
      "name": "getStartStationName",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getStartStationName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStartStationName(empty)"
    },
    {
      "id": 11175,
      "name": "getStationsName",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getStationsName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStationsName(empty)"
    },
    {
      "id": 11176,
      "name": "getTerminalStationName",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getTerminalStationName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.entity.Trip.getTerminalStationName(empty)"
    },
    {
      "id": 11177,
      "name": "getStartTime",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getStartTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "668501b084f2dc96265ceb4e39579391868136fffaeab12c3f93e3c91daee2e4",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.entity.Trip.getStartTime(empty)"
    },
    {
      "id": 25129,
      "name": "<init>",
      "type": "travel2.service.TravelServiceImpl$4",
      "flags": "",
      "display": "t.s.TSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["travel2.service.TravelServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/void travel2.service.TravelServiceImpl$4.<init>(travel2.service.TravelServiceImpl)"
    },
    {
      "id": 11178,
      "name": "getEndTime",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.getEndTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "5fa52bee8d9ecaf9cc0dbb511c90d8e27e9656598177b730ca11725ba9764f76",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.entity.Trip.getEndTime(empty)"
    },
    {
      "id": 11179,
      "name": "canEqual",
      "type": "travel2.entity.TripAllDetail",
      "flags": "d",
      "display": "t.e.TAD.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "464ff6a84daa34b8bb846d28cbb7defc4d56ec77d19a49dd72dd81d83c156c5a",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/boolean travel2.entity.TripAllDetail.canEqual(java.lang.Object)"
    },
    {
      "id": 11180,
      "name": "isStatus",
      "type": "travel2.entity.TripAllDetail",
      "flags": "p",
      "display": "t.e.TAD.isStatus",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "dfe22d388a813c22414dfd73d2b2758b3ef661760564f7c57d621493bc4b5295",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/boolean travel2.entity.TripAllDetail.isStatus(empty)"
    },
    {
      "id": 11181,
      "name": "getMessage",
      "type": "travel2.entity.TripAllDetail",
      "flags": "p",
      "display": "t.e.TAD.getMessage",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.entity.TripAllDetail.getMessage(empty)"
    },
    {
      "id": 11182,
      "name": "getTripResponse",
      "type": "travel2.entity.TripAllDetail",
      "flags": "p",
      "display": "t.e.TAD.getTripResponse",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "edu.fudan.common.entity.TripResponse",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.entity.TripAllDetail.getTripResponse(empty)"
    },
    {
      "id": 11183,
      "name": "getTrip",
      "type": "travel2.entity.TripAllDetail",
      "flags": "p",
      "display": "t.e.TAD.getTrip",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "travel2.entity.Trip",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/travel2.entity.Trip travel2.entity.TripAllDetail.getTrip(empty)"
    },
    {
      "id": 7609,
      "name": "<clinit>",
      "type": "travel2.controller.Travel2Controller",
      "flags": "s",
      "display": "t.c.TC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "841cf6f8f045c7ab850ea2a12262c8d4adeaceeaa3854d3dd293f29cf3027369",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/void travel2.controller.Travel2Controller.<clinit>(empty)"
    },
    {
      "id": 7610,
      "name": "adminQueryAll",
      "type": "travel2.controller.Travel2Controller",
      "flags": "p",
      "display": "t.c.TC.adminQueryAll",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travel2service/admin_trip",
      "bytecodeHash": "e2b7bfcc91369e8ad9225ea42199264cdf2c5851a56f29c38ed6099aff365f79",
      "microservice": "ts-travel2-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.adminQueryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7611,
      "name": "createTrip",
      "type": "travel2.controller.Travel2Controller",
      "flags": "p",
      "display": "t.c.TC.createTrip",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travel2service/trips",
      "bytecodeHash": "368ff7fc9c4cd0442465467d187c1c29cb6006a1a52004530deb3db0e7623bf4",
      "microservice": "ts-travel2-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.createTrip(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7612,
      "name": "deleteTrip",
      "type": "travel2.controller.Travel2Controller",
      "flags": "p",
      "display": "t.c.TC.deleteTrip",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travel2service/trips/{tripId}",
      "bytecodeHash": "2bc5d9bd1419878eb0845396719c9f0ab28a8b665e0bb4dd46ef72ad563641bb",
      "microservice": "ts-travel2-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.deleteTrip(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7613,
      "name": "getRouteByTripId",
      "type": "travel2.controller.Travel2Controller",
      "flags": "p",
      "display": "t.c.TC.getRouteByTripId",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travel2service/routes/{tripId}",
      "bytecodeHash": "db8def337b50901b875612f7be3c151faac725697f4189aba1144e7cb02d8279",
      "microservice": "ts-travel2-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.getRouteByTripId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7614,
      "name": "getTrainTypeByTripId",
      "type": "travel2.controller.Travel2Controller",
      "flags": "p",
      "display": "t.c.TC.getTrainTypeByTripId",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travel2service/train_types/{tripId}",
      "bytecodeHash": "97e0b2e9c29341172cf29b09d94a4b3e830944adf57fbf0e739fc548ddf9d199",
      "microservice": "ts-travel2-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.getTrainTypeByTripId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7615,
      "name": "getTripAllDetailInfo",
      "type": "travel2.controller.Travel2Controller",
      "flags": "p",
      "display": "t.c.TC.getTripAllDetailInfo",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.TripAllDetailInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travel2service/trip_detail",
      "bytecodeHash": "d2c424fcb862732a90c9bbe219ec4039a2f2adb32c84b89add269fdc40d7b622",
      "microservice": "ts-travel2-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.getTripAllDetailInfo(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7616,
      "name": "getTripsByRouteId",
      "type": "travel2.controller.Travel2Controller",
      "flags": "p",
      "display": "t.c.TC.getTripsByRouteId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.ArrayList",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": null,
      "bytecodeHash": "bdcc84df8df4b8e8c8f4e49f2d694a8693d6ca99fca798cf6c46e59d5ca4e942",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.getTripsByRouteId(java.util.ArrayList, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7617,
      "name": "home",
      "type": "travel2.controller.Travel2Controller",
      "flags": "p",
      "display": "t.c.TC.home",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "java.lang.String",
      "endpointURI": "/api/v1/travel2service/welcome",
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-travel2-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.controller.Travel2Controller.home(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7618,
      "name": "queryAll",
      "type": "travel2.controller.Travel2Controller",
      "flags": "p",
      "display": "t.c.TC.queryAll",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travel2service/trips",
      "bytecodeHash": "6e012629fcfaa28a0be6a5d82a93b962705829eee408190218e5fbe2379dcb63",
      "microservice": "ts-travel2-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.queryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7619,
      "name": "queryInfo",
      "type": "travel2.controller.Travel2Controller",
      "flags": "p",
      "display": "t.c.TC.queryInfo",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "edu.fudan.common.entity.TripInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travel2service/trips/left",
      "bytecodeHash": "6f7ecfb1a6f31d4c1716578d4420a1d25822909d12df1489bc07e091b6ba5cde",
      "microservice": "ts-travel2-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.queryInfo(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7620,
      "name": "retrieve",
      "type": "travel2.controller.Travel2Controller",
      "flags": "p",
      "display": "t.c.TC.retrieve",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travel2service/trips/{tripId}",
      "bytecodeHash": "588514dd79c29614000c9b93292d053ba71963ba0330000bb85c71b05b6230a9",
      "microservice": "ts-travel2-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.retrieve(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7621,
      "name": "updateTrip",
      "type": "travel2.controller.Travel2Controller",
      "flags": "p",
      "display": "t.c.TC.updateTrip",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/travel2service/trips",
      "bytecodeHash": "95d3c0f622f85589c70c6a5268bab278d31199f8f47865b9f91f6f1d6ebb27ee",
      "microservice": "ts-travel2-service",
      "endpointMethod": true,
      "methodSignature": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.updateTrip(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7622,
      "name": "equals",
      "type": "travel2.entity.AdminTrip",
      "flags": "p",
      "display": "t.e.AT.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "9dfcdc8c08828cb3dcc82fb9a8b2ca4407d55a1a169776eb78f4a2c9a4c5f0ef",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/boolean travel2.entity.AdminTrip.equals(java.lang.Object)"
    },
    {
      "id": 7623,
      "name": "hashCode",
      "type": "travel2.entity.AdminTrip",
      "flags": "p",
      "display": "t.e.AT.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "1af13273a01c3ee0e296a86f46f7158847a994524a208ec361d4981b6b48e869",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/int travel2.entity.AdminTrip.hashCode(empty)"
    },
    {
      "id": 7624,
      "name": "toString",
      "type": "travel2.entity.AdminTrip",
      "flags": "p",
      "display": "t.e.AT.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "9a8ed70387340784e3f9c37dca01021d14267b47ffaed215512b1dfc513b0dd6",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.entity.AdminTrip.toString(empty)"
    },
    {
      "id": 7625,
      "name": "equals",
      "type": "travel2.entity.Travel",
      "flags": "p",
      "display": "t.e.T.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "a9b4d5b90d7f0bbe8d107e7c95739d8bd9986a9c254d8619705d3bd128badc4b",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/boolean travel2.entity.Travel.equals(java.lang.Object)"
    },
    {
      "id": 7626,
      "name": "hashCode",
      "type": "travel2.entity.Travel",
      "flags": "p",
      "display": "t.e.T.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "863eaebf4aa8dcffabcdbde9f1fb066fcfaf2204787efa05866318da4abcb7e7",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/int travel2.entity.Travel.hashCode(empty)"
    },
    {
      "id": 7627,
      "name": "toString",
      "type": "travel2.entity.Travel",
      "flags": "p",
      "display": "t.e.T.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "84451b95e99153ae9d827c3520640478c0ea2fb046f6016fe3bbf1d8b9cae0a5",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.entity.Travel.toString(empty)"
    },
    {
      "id": 7628,
      "name": "equals",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "6532486517b9049f035410b0d3d75f4819df219bd5396afccabb977e719f04e2",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/boolean travel2.entity.Trip.equals(java.lang.Object)"
    },
    {
      "id": 7629,
      "name": "hashCode",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "ef6eceb1bec255bc3f7e1a5fffff0d4a98af8178f6b9dfea9dfbd028e7e7ba5c",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/int travel2.entity.Trip.hashCode(empty)"
    },
    {
      "id": 7630,
      "name": "toString",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "7326c63302c84394e419b127faf863e724b0d0826aa12ec610aea1c1bf108f9f",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.entity.Trip.toString(empty)"
    },
    {
      "id": 7631,
      "name": "equals",
      "type": "travel2.entity.TripAllDetail",
      "flags": "p",
      "display": "t.e.TAD.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "6b48920d3e9b397e44458affbbe73a6a91ad5a45994d60670a0e73356f9c443c",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/boolean travel2.entity.TripAllDetail.equals(java.lang.Object)"
    },
    {
      "id": 7632,
      "name": "hashCode",
      "type": "travel2.entity.TripAllDetail",
      "flags": "p",
      "display": "t.e.TAD.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "ce880071bd0ca40b15af45cccd9a1d96fc6413987cb74f955d5965a7833ee810",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/int travel2.entity.TripAllDetail.hashCode(empty)"
    },
    {
      "id": 7633,
      "name": "toString",
      "type": "travel2.entity.TripAllDetail",
      "flags": "p",
      "display": "t.e.TAD.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "f14ab68e6f0bfa5d126684a89d3e3de11b6a9a5d2a13dcd9ca8fab7796b52c41",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.entity.TripAllDetail.toString(empty)"
    },
    {
      "id": 7634,
      "name": "<clinit>",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "s",
      "display": "t.s.TSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "5c9b4a813d59a589d540de12e56a51d57924f0bed137913c31e77eb416eecf52",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/void travel2.service.TravelServiceImpl.<clinit>(empty)"
    },
    {
      "id": 47709,
      "name": "adminQueryAll",
      "type": "travel2.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.adminQueryAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelService.adminQueryAll(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47710,
      "name": "findAll",
      "type": "travel2.repository.TripRepository",
      "flags": "pa",
      "display": "t.r.TR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.util.ArrayList travel2.repository.TripRepository.findAll(empty)"
    },
    {
      "id": 47719,
      "name": "create",
      "type": "travel2.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelService.create(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47720,
      "name": "findByTripId",
      "type": "travel2.repository.TripRepository",
      "flags": "pa",
      "display": "t.r.TR.findByTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["edu.fudan.common.entity.TripId"],
      "returnType": "travel2.entity.Trip",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/travel2.entity.Trip travel2.repository.TripRepository.findByTripId(edu.fudan.common.entity.TripId)"
    },
    {
      "id": 18284,
      "name": "getServiceUrl",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "P",
      "display": "t.s.TSI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c1b0f9c62ce4cf4f7c981f6ed811047ff2978f44917a1c007e883fbad1129bce",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.String travel2.service.TravelServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 18286,
      "name": "<init>",
      "type": "travel2.service.TravelServiceImpl$3",
      "flags": "",
      "display": "t.s.TSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["travel2.service.TravelServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/void travel2.service.TravelServiceImpl$3.<init>(travel2.service.TravelServiceImpl)"
    },
    {
      "id": 47728,
      "name": "save",
      "type": "travel2.repository.TripRepository",
      "flags": "pby",
      "display": "t.r.TR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "31a7afb2f5797e3ad1857fa70d5c258cee6f01625c457975daa651527e1891f2",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/java.lang.Object travel2.repository.TripRepository.save(java.lang.Object)"
    },
    {
      "id": 47729,
      "name": "delete",
      "type": "travel2.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.delete",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelService.delete(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47730,
      "name": "deleteByTripId",
      "type": "travel2.repository.TripRepository",
      "flags": "pa",
      "display": "t.r.TR.deleteByTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["edu.fudan.common.entity.TripId"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/void travel2.repository.TripRepository.deleteByTripId(edu.fudan.common.entity.TripId)"
    },
    {
      "id": 47731,
      "name": "getRouteByTripId",
      "type": "travel2.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.getRouteByTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelService.getRouteByTripId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47732,
      "name": "getTrainTypeByTripId",
      "type": "travel2.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.getTrainTypeByTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelService.getTrainTypeByTripId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47860,
      "name": "retrieve",
      "type": "travel2.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.retrieve",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelService.retrieve(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47861,
      "name": "update",
      "type": "travel2.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.update",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TravelInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelService.update(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47734,
      "name": "getTripAllDetailInfo",
      "type": "travel2.service.TravelService",
      "flags": "pa",
      "display": "t.s.TS.getTripAllDetailInfo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "edu.fudan.common.entity.TripAllDetailInfo",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.util.Response travel2.service.TravelService.getTripAllDetailInfo(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47862,
      "name": "setStartStationName",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.setStartStationName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1c059b5fe325fde7d43b063306b8ea508a338bafb0f3efc8a9c0b94e3f6e422c",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/void travel2.entity.Trip.setStartStationName(java.lang.String)"
    },
    {
      "id": 18295,
      "name": "afterToday",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "Ps",
      "display": "t.s.TSI.afterToday",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "6b8a9e496cb5bd3c1fa1b3aa8633be601507d445978e4a562d75994d8deaa2cb",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/boolean travel2.service.TravelServiceImpl.afterToday(java.lang.String)"
    },
    {
      "id": 47863,
      "name": "setStationsName",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.setStationsName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "935836f6468fbbdce3aa550163b41db4acc66eaba962e885841470780dddd4d2",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/void travel2.entity.Trip.setStationsName(java.lang.String)"
    },
    {
      "id": 14584,
      "name": "getRouteByRouteId",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "P",
      "display": "t.s.TSI.getRouteByRouteId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.Route",
      "endpointURI": null,
      "bytecodeHash": "3a02fff8eaa0586e225e4f992113e061097b5ffea053c06d0729f2ce5a6f0772",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.entity.Route travel2.service.TravelServiceImpl.getRouteByRouteId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 18296,
      "name": "<init>",
      "type": "travel2.service.TravelServiceImpl$2",
      "flags": "",
      "display": "t.s.TSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["travel2.service.TravelServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/void travel2.service.TravelServiceImpl$2.<init>(travel2.service.TravelServiceImpl)"
    },
    {
      "id": 47864,
      "name": "setTerminalStationName",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.setTerminalStationName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "48fb720aa2a9b68dfbb952c6e9e11d36348ceb48bf0fec91e3294ba5ac037a6d",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/void travel2.entity.Trip.setTerminalStationName(java.lang.String)"
    },
    {
      "id": 14585,
      "name": "getTrainTypeByName",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "P",
      "display": "t.s.TSI.getTrainTypeByName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.TrainType",
      "endpointURI": null,
      "bytecodeHash": "c2becedef07329f20e3a8e2458b35e8da8dee63d59d274f8a339198f3da20944",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.entity.TrainType travel2.service.TravelServiceImpl.getTrainTypeByName(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 18297,
      "name": "setResponse",
      "type": "travel2.service.TravelServiceImpl",
      "flags": "P",
      "display": "t.s.TSI.setResponse",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "travel2.entity.Trip",
        "edu.fudan.common.entity.TravelResult",
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.entity.TripResponse",
      "endpointURI": null,
      "bytecodeHash": "f7d244aaab4914d14bbe355db19c354ed8782b2fa3b979b921e7837fdca79b9d",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/edu.fudan.common.entity.TripResponse travel2.service.TravelServiceImpl.setResponse(travel2.entity.Trip, edu.fudan.common.entity.TravelResult, java.lang.String, java.lang.String, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 47865,
      "name": "setStartTime",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.setStartTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "1d639c8f9d43d88d1092bc7e304fe5af5f3947dc8cd8d30fe244a71c9d82d654",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/void travel2.entity.Trip.setStartTime(java.lang.String)"
    },
    {
      "id": 47866,
      "name": "setEndTime",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.setEndTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "3187f710dcb01652de862560cc7782b805f200c9af0d7b1df750b2924081e43c",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/void travel2.entity.Trip.setEndTime(java.lang.String)"
    },
    {
      "id": 47867,
      "name": "setRouteId",
      "type": "travel2.entity.Trip",
      "flags": "p",
      "display": "t.e.T.setRouteId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "4b4a95718f47d6e120ea908206ec14d71a5ef30340520d38301caa02852d54b7",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/void travel2.entity.Trip.setRouteId(java.lang.String)"
    },
    {
      "id": 18301,
      "name": "<init>",
      "type": "travel2.service.TravelServiceImpl$1",
      "flags": "",
      "display": "t.s.TSI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["travel2.service.TravelServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-travel2-service",
      "endpointMethod": false,
      "methodSignature": "ts-travel2-service/void travel2.service.TravelServiceImpl$1.<init>(travel2.service.TravelServiceImpl)"
    },
    {
      "id": 13952,
      "name": "builder",
      "type": "user.dto.AuthDto",
      "flags": "ps",
      "display": "u.d.AD.builder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "user.dto.AuthDto$AuthDtoBuilder",
      "endpointURI": null,
      "bytecodeHash": "55fc32b17a90c98e35b1fe3e1f1343abb97477531a8413f2d3c918356c9a3a2a",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.dto.AuthDto$AuthDtoBuilder user.dto.AuthDto.builder(empty)"
    },
    {
      "id": 13953,
      "name": "userId",
      "type": "user.dto.AuthDto$AuthDtoBuilder",
      "flags": "p",
      "display": "u.d.ADADB.userId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "user.dto.AuthDto$AuthDtoBuilder",
      "endpointURI": null,
      "bytecodeHash": "fc1903b9d7f30f6aa74acae5fb44304bb4230244bed541df29250e57d3bea12b",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.dto.AuthDto$AuthDtoBuilder user.dto.AuthDto$AuthDtoBuilder.userId(java.lang.String)"
    },
    {
      "id": 13954,
      "name": "userName",
      "type": "user.dto.AuthDto$AuthDtoBuilder",
      "flags": "p",
      "display": "u.d.ADADB.userName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "user.dto.AuthDto$AuthDtoBuilder",
      "endpointURI": null,
      "bytecodeHash": "f1c7ed24bb61adab135c8de71da8b5d3309f40e928a2d2501e9c2391a3d07ce8",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.dto.AuthDto$AuthDtoBuilder user.dto.AuthDto$AuthDtoBuilder.userName(java.lang.String)"
    },
    {
      "id": 13955,
      "name": "password",
      "type": "user.dto.AuthDto$AuthDtoBuilder",
      "flags": "p",
      "display": "u.d.ADADB.password",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "user.dto.AuthDto$AuthDtoBuilder",
      "endpointURI": null,
      "bytecodeHash": "c3cbd5ce5fd8549dbca474859d787ed0ef6b0bea82538d7f636bb0fc6c2d9a50",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.dto.AuthDto$AuthDtoBuilder user.dto.AuthDto$AuthDtoBuilder.password(java.lang.String)"
    },
    {
      "id": 13956,
      "name": "build",
      "type": "user.dto.AuthDto$AuthDtoBuilder",
      "flags": "p",
      "display": "u.d.ADADB.build",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "user.dto.AuthDto",
      "endpointURI": null,
      "bytecodeHash": "1281e80977114e3f748137ad00d000c93ec4b0b500ff3a46e3bca51397507996",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.dto.AuthDto user.dto.AuthDto$AuthDtoBuilder.build(empty)"
    },
    {
      "id": 13957,
      "name": "createDefaultAuthUser",
      "type": "user.service.impl.UserServiceImpl",
      "flags": "P",
      "display": "u.s.i.USI.createDefaultAuthUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["user.dto.AuthDto"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "9b59dfa0346fad05f214056543609ef65eee8567bf61465ad909643b5c16e7db",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.createDefaultAuthUser(user.dto.AuthDto)"
    },
    {
      "id": 13957,
      "name": "createEvent",
      "type": "user.service.impl.UserServiceImpl",
      "flags": "P",
      "display": "u.s.i.USI.createEvent",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["user.dto.AuthDto"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "bbb9dfa0346fad05f214056543609ef65eee8567bf61465ad909643b5c16e7db",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.createEvent(user.dto.AuthDto)"
    },
    {
      "id": 13957,
      "name": "createEvent",
      "type": "user.service.impl.UserService",
      "flags": "P",
      "display": "u.s.i.USI.createEvent",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["user.dto.AuthDto"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "aaa9dfa0346fad05f214056543609ef65eee8567bf61465ad909643b5c16e7db",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserService.createEvent(user.dto.AuthDto)"
    },
    {
      "id": 17549,
      "name": "getServiceUrl",
      "type": "user.service.impl.UserServiceImpl",
      "flags": "P",
      "display": "u.s.i.USI.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4c9cdca9114d46d9b6782076a5fcdd786861a709d13bfd695ca633cdf0ab0f00",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.service.impl.UserServiceImpl.getServiceUrl(java.lang.String)"
    },
    {
      "id": 10640,
      "name": "deleteUser",
      "type": "user.service.impl.UserServiceImpl",
      "flags": "p",
      "display": "u.s.i.USI.deleteUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "c025cc6e3299930790419ccf7019f36baeca5f0644591926838cef0db22b63f8",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.deleteUser(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17555,
      "name": "<init>",
      "type": "user.entity.User",
      "flags": "p",
      "display": "u.e.U.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String",
        "int",
        "int",
        "java.lang.String",
        "java.lang.String"
      ],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "a5d24f8b42ddeb47965564965dd61b50c6db1cb86a8412e9258073a97b81949a",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/void user.entity.User.<init>(java.lang.String, java.lang.String, java.lang.String, int, int, java.lang.String, java.lang.String)"
    },
    {
      "id": 17556,
      "name": "<init>",
      "type": "user.dto.AuthDto",
      "flags": "p",
      "display": "u.d.AD.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "java.lang.String",
        "java.lang.String"
      ],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "57e56675ac4ea8e41c0fc5731e909ea83f6303f4c9b6f9bb89fae8658add57ea",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/void user.dto.AuthDto.<init>(java.lang.String, java.lang.String, java.lang.String)"
    },
    {
      "id": 10645,
      "name": "getAllUsers",
      "type": "user.service.impl.UserServiceImpl",
      "flags": "p",
      "display": "u.s.i.USI.getAllUsers",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "1c32a4442ab8264afe00a3c45b43a126bd260c595b7efb24bcb259213341a798",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.getAllUsers(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10646,
      "name": "findByUserId",
      "type": "user.service.impl.UserServiceImpl",
      "flags": "p",
      "display": "u.s.i.USI.findByUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "59ac33fc4f6f843b81d29523f913febe19067ee8efa348adde59fa4fd7e549bb",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.findByUserId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10647,
      "name": "findByUserName",
      "type": "user.service.impl.UserServiceImpl",
      "flags": "p",
      "display": "u.s.i.USI.findByUserName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "64ca670f73247669184e1baa588141ebfd3c5bc3133048c88cc7cd52229f0afa",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.findByUserName(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 17560,
      "name": "<init>",
      "type": "user.service.impl.UserServiceImpl$1",
      "flags": "",
      "display": "u.s.i.USI.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["user.service.impl.UserServiceImpl"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/void user.service.impl.UserServiceImpl$1.<init>(user.service.impl.UserServiceImpl)"
    },
    {
      "id": 10649,
      "name": "saveUser",
      "type": "user.service.impl.UserServiceImpl",
      "flags": "p",
      "display": "u.s.i.USI.saveUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "user.dto.UserDto",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "5eef627fa6eab05e571807ee7bb1d2198f040a705507c9204f777f2baa9cd84c",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10651,
      "name": "updateUser",
      "type": "user.service.impl.UserServiceImpl",
      "flags": "p",
      "display": "u.s.i.USI.updateUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "user.dto.UserDto",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "14e226014baa7f6dd3ce1bf35290ed3e26114b75a1591a109f223ec57e6058b0",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/edu.fudan.common.util.Response user.service.impl.UserServiceImpl.updateUser(user.dto.UserDto, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 10652,
      "name": "canEqual",
      "type": "user.dto.AuthDto",
      "flags": "d",
      "display": "u.d.AD.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "0b6944b5885412a57fbbae4b6ab6c8f60f0948b2ba093edaf0e574c0aef8b4c1",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/boolean user.dto.AuthDto.canEqual(java.lang.Object)"
    },
    {
      "id": 10653,
      "name": "getUserId",
      "type": "user.dto.AuthDto",
      "flags": "p",
      "display": "u.d.AD.getUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.dto.AuthDto.getUserId(empty)"
    },
    {
      "id": 10654,
      "name": "getUserName",
      "type": "user.dto.AuthDto",
      "flags": "p",
      "display": "u.d.AD.getUserName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.dto.AuthDto.getUserName(empty)"
    },
    {
      "id": 10655,
      "name": "getPassword",
      "type": "user.dto.AuthDto",
      "flags": "p",
      "display": "u.d.AD.getPassword",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.dto.AuthDto.getPassword(empty)"
    },
    {
      "id": 10656,
      "name": "canEqual",
      "type": "user.entity.User",
      "flags": "d",
      "display": "u.e.U.canEqual",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "a68dc653e04e3320436802d4e774643da76551bbd07cf806c855cbfc1096e4e1",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/boolean user.entity.User.canEqual(java.lang.Object)"
    },
    {
      "id": 10657,
      "name": "getGender",
      "type": "user.entity.User",
      "flags": "p",
      "display": "u.e.U.getGender",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "55c3aec14ab0022b0eee6c40b7da6cc9e9eefbc1127e154a35a5ad79427fd854",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/int user.entity.User.getGender(empty)"
    },
    {
      "id": 10658,
      "name": "getDocumentType",
      "type": "user.entity.User",
      "flags": "p",
      "display": "u.e.U.getDocumentType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "a28e7b692c91b70e79af8e400c2e9b52bdbb4dceb93b8402f699cef2a52cf3aa",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/int user.entity.User.getDocumentType(empty)"
    },
    {
      "id": 10659,
      "name": "getUserId",
      "type": "user.entity.User",
      "flags": "p",
      "display": "u.e.U.getUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.entity.User.getUserId(empty)"
    },
    {
      "id": 10660,
      "name": "getUserName",
      "type": "user.entity.User",
      "flags": "p",
      "display": "u.e.U.getUserName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.entity.User.getUserName(empty)"
    },
    {
      "id": 10661,
      "name": "getPassword",
      "type": "user.entity.User",
      "flags": "p",
      "display": "u.e.U.getPassword",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.entity.User.getPassword(empty)"
    },
    {
      "id": 10662,
      "name": "getDocumentNum",
      "type": "user.entity.User",
      "flags": "p",
      "display": "u.e.U.getDocumentNum",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "b2e08cdc9daefc1804beba6325d79da5b11a0f54acbfd4dd233b1c223b1821c6",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.entity.User.getDocumentNum(empty)"
    },
    {
      "id": 10663,
      "name": "getEmail",
      "type": "user.entity.User",
      "flags": "p",
      "display": "u.e.U.getEmail",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "82ee7056b04c640a38c7cc175235331dde4a32bc219c075e81f79d2aaa90b4db",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.entity.User.getEmail(empty)"
    },
    {
      "id": 42301,
      "name": "deleteUser",
      "type": "user.service.UserService",
      "flags": "pa",
      "display": "u.s.US.deleteUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/edu.fudan.common.util.Response user.service.UserService.deleteUser(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42302,
      "name": "findByUserId",
      "type": "user.repository.UserRepository",
      "flags": "pa",
      "display": "u.r.UR.findByUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "user.entity.User",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.entity.User user.repository.UserRepository.findByUserId(java.lang.String)"
    },
    {
      "id": 42306,
      "name": "deleteByUserId",
      "type": "user.repository.UserRepository",
      "flags": "pa",
      "display": "u.r.UR.deleteByUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/void user.repository.UserRepository.deleteByUserId(java.lang.String)"
    },
    {
      "id": 42310,
      "name": "getAllUsers",
      "type": "user.service.UserService",
      "flags": "pa",
      "display": "u.s.US.getAllUsers",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/edu.fudan.common.util.Response user.service.UserService.getAllUsers(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42311,
      "name": "findAll",
      "type": "user.repository.UserRepository",
      "flags": "pa",
      "display": "u.r.UR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.util.List user.repository.UserRepository.findAll(empty)"
    },
    {
      "id": 42313,
      "name": "findByUserId",
      "type": "user.service.UserService",
      "flags": "pa",
      "display": "u.s.US.findByUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/edu.fudan.common.util.Response user.service.UserService.findByUserId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42314,
      "name": "findByUserName",
      "type": "user.service.UserService",
      "flags": "pa",
      "display": "u.s.US.findByUserName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/edu.fudan.common.util.Response user.service.UserService.findByUserName(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42315,
      "name": "findByUserName",
      "type": "user.repository.UserRepository",
      "flags": "pa",
      "display": "u.r.UR.findByUserName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "user.entity.User",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.entity.User user.repository.UserRepository.findByUserName(java.lang.String)"
    },
    {
      "id": 42316,
      "name": "getUserName",
      "type": "user.dto.UserDto",
      "flags": "p",
      "display": "u.d.UD.getUserName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "782c755a6559c9c784ec6a8895753b6c4ba93dffc13fc0bf367002be5c73d37b",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.dto.UserDto.getUserName(empty)"
    },
    {
      "id": 42317,
      "name": "saveUser",
      "type": "user.service.UserService",
      "flags": "pa",
      "display": "u.s.US.saveUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "user.dto.UserDto",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/edu.fudan.common.util.Response user.service.UserService.saveUser(user.dto.UserDto, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42318,
      "name": "getUserId",
      "type": "user.dto.UserDto",
      "flags": "p",
      "display": "u.d.UD.getUserId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "8d1865bd647c076749233fa03b80b1af1f6aac4e3f3d452b92461ff796c58a7c",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.dto.UserDto.getUserId(empty)"
    },
    {
      "id": 42319,
      "name": "getPassword",
      "type": "user.dto.UserDto",
      "flags": "p",
      "display": "u.d.UD.getPassword",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c3c2dd5b1474b9c55e245ba84fd6afb6b1002efdd064cf2cf508b60044fb0d92",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.dto.UserDto.getPassword(empty)"
    },
    {
      "id": 42320,
      "name": "getGender",
      "type": "user.dto.UserDto",
      "flags": "p",
      "display": "u.d.UD.getGender",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "4dd1035ec1cdb196745dea2916d5c6e3af003ec14aa125cf9edf87088b1251af",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/int user.dto.UserDto.getGender(empty)"
    },
    {
      "id": 42321,
      "name": "getDocumentType",
      "type": "user.dto.UserDto",
      "flags": "p",
      "display": "u.d.UD.getDocumentType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "4e87c9fe351fd630631b8c2c11fde4a77d4cbc7a34bda59eecb5686ec0a54d34",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/int user.dto.UserDto.getDocumentType(empty)"
    },
    {
      "id": 42322,
      "name": "getDocumentNum",
      "type": "user.dto.UserDto",
      "flags": "p",
      "display": "u.d.UD.getDocumentNum",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.dto.UserDto.getDocumentNum(empty)"
    },
    {
      "id": 42323,
      "name": "getEmail",
      "type": "user.dto.UserDto",
      "flags": "p",
      "display": "u.d.UD.getEmail",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "668501b084f2dc96265ceb4e39579391868136fffaeab12c3f93e3c91daee2e4",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.dto.UserDto.getEmail(empty)"
    },
    {
      "id": 42330,
      "name": "updateUser",
      "type": "user.service.UserService",
      "flags": "pa",
      "display": "u.s.US.updateUser",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "user.dto.UserDto",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/edu.fudan.common.util.Response user.service.UserService.updateUser(user.dto.UserDto, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 42331,
      "name": "toString",
      "type": "user.dto.UserDto",
      "flags": "p",
      "display": "u.d.UD.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "7305bb71936d6aad7837c3c3d6f64fbd928a657346502412f49113f01731960d",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.dto.UserDto.toString(empty)"
    },
    {
      "id": 7265,
      "name": "<clinit>",
      "type": "user.controller.UserController",
      "flags": "s",
      "display": "u.c.UC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "317d4883e0701a7509234e3dfc970ca1b9fc93606b4cc9dfcc97bf73fb417c60",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/void user.controller.UserController.<clinit>(empty)"
    },
    {
      "id": 7266,
      "name": "deleteUserById",
      "type": "user.controller.UserController",
      "flags": "p",
      "display": "u.c.UC.deleteUserById",
      "entryPoint": false,
      "httpMethod": "DELETE",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.ResponseEntity",
      "endpointURI": "/api/v1/userservice/users/{userId}",
      "bytecodeHash": "98db2a68336a7813340022ba08237ff376706a6df833fe1456a4b9ff4c1032a6",
      "microservice": "ts-user-service",
      "endpointMethod": true,
      "methodSignature": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.deleteUserById(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7267,
      "name": "getAllUser",
      "type": "user.controller.UserController",
      "flags": "p",
      "display": "u.c.UC.getAllUser",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.ResponseEntity",
      "endpointURI": "/api/v1/userservice/users",
      "bytecodeHash": "77604c5353051bdc1c00951ddb8d9b68696994f73402249dcc0798ff5db0e965",
      "microservice": "ts-user-service",
      "endpointMethod": true,
      "methodSignature": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.getAllUser(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7268,
      "name": "getUserByUserId",
      "type": "user.controller.UserController",
      "flags": "p",
      "display": "u.c.UC.getUserByUserId",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.ResponseEntity",
      "endpointURI": "/api/v1/userservice/users/id/{userId}",
      "bytecodeHash": "2e800d7e57d97576e25c92910873d498bfc84127442861f25912c08249761620",
      "microservice": "ts-user-service",
      "endpointMethod": true,
      "methodSignature": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.getUserByUserId(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7269,
      "name": "getUserByUserName",
      "type": "user.controller.UserController",
      "flags": "p",
      "display": "u.c.UC.getUserByUserName",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.ResponseEntity",
      "endpointURI": "/api/v1/userservice/users/{userName}",
      "bytecodeHash": "b80770900a35c398bd9fe0cc80a2f7b54621ac6d6a76c7db238c70a71c386242",
      "microservice": "ts-user-service",
      "endpointMethod": true,
      "methodSignature": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.getUserByUserName(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7270,
      "name": "registerUser",
      "type": "user.controller.UserController",
      "flags": "p",
      "display": "u.c.UC.registerUser",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "user.dto.UserDto",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.ResponseEntity",
      "endpointURI": "/api/v1/userservice/users/register",
      "bytecodeHash": "9cae7b00ae2dc8df1fa7660f25afc8ab3e8acded2996c3e05473519924e92c8a",
      "microservice": "ts-user-service",
      "endpointMethod": true,
      "methodSignature": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.registerUser(user.dto.UserDto, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7271,
      "name": "testHello",
      "type": "user.controller.UserController",
      "flags": "p",
      "display": "u.c.UC.testHello",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.controller.UserController.testHello(empty)"
    },
    {
      "id": 7272,
      "name": "updateUser",
      "type": "user.controller.UserController",
      "flags": "p",
      "display": "u.c.UC.updateUser",
      "entryPoint": false,
      "httpMethod": "PUT",
      "parameters": [
        "user.dto.UserDto",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.ResponseEntity",
      "endpointURI": "/api/v1/userservice/users",
      "bytecodeHash": "da46f23056ba6c42733f108d23937ba4bbd305f395291f1da744f025a9b73c67",
      "microservice": "ts-user-service",
      "endpointMethod": true,
      "methodSignature": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.updateUser(user.dto.UserDto, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7273,
      "name": "toString",
      "type": "user.dto.AuthDto$AuthDtoBuilder",
      "flags": "p",
      "display": "u.d.ADADB.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "bcb542a459ecc8c083801282e4155c1d91cf2bebfa6064113b0e3df6aeba3461",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.dto.AuthDto$AuthDtoBuilder.toString(empty)"
    },
    {
      "id": 7274,
      "name": "equals",
      "type": "user.dto.AuthDto",
      "flags": "p",
      "display": "u.d.AD.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "9dfcdc8c08828cb3dcc82fb9a8b2ca4407d55a1a169776eb78f4a2c9a4c5f0ef",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/boolean user.dto.AuthDto.equals(java.lang.Object)"
    },
    {
      "id": 7275,
      "name": "hashCode",
      "type": "user.dto.AuthDto",
      "flags": "p",
      "display": "u.d.AD.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "1af13273a01c3ee0e296a86f46f7158847a994524a208ec361d4981b6b48e869",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/int user.dto.AuthDto.hashCode(empty)"
    },
    {
      "id": 13931,
      "name": "deleteUserAuth",
      "type": "user.service.impl.UserServiceImpl",
      "flags": "p",
      "display": "u.s.i.USI.deleteUserAuth",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "43414e67c701ced7457c1942226d215c455d16eeba81754a87cc4778ae616e33",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/void user.service.impl.UserServiceImpl.deleteUserAuth(java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7276,
      "name": "toString",
      "type": "user.dto.AuthDto",
      "flags": "p",
      "display": "u.d.AD.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "4569dcd39fb83037f6a48e6470bbe7bd31639617af6bd2614e80e4669e9fdc63",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.dto.AuthDto.toString(empty)"
    },
    {
      "id": 7277,
      "name": "values",
      "type": "user.dto.Gender",
      "flags": "ps",
      "display": "u.d.G.values",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "user.dto.Gender[]",
      "endpointURI": null,
      "bytecodeHash": "2d9fe4dae7793bb5addf4680279c3d124dee96726ae42caf7e673dc353d907cb",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.dto.Gender[] user.dto.Gender.values(empty)"
    },
    {
      "id": 7278,
      "name": "toString",
      "type": "user.entity.User$UserBuilder",
      "flags": "p",
      "display": "u.e.UUB.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "05ee20dbc65c18c13e5bc1995b2679be448ad689d0a3a0556109d08dc91b6ea6",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.entity.User$UserBuilder.toString(empty)"
    },
    {
      "id": 7279,
      "name": "equals",
      "type": "user.entity.User",
      "flags": "p",
      "display": "u.e.U.equals",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "7e6dc817945b3ae1c68bb960367fb191563e16b649dda33a67464de5078f2ed9",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/boolean user.entity.User.equals(java.lang.Object)"
    },
    {
      "id": 7280,
      "name": "hashCode",
      "type": "user.entity.User",
      "flags": "p",
      "display": "u.e.U.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "05acc81163cd75d99dad2e27b327ecb56f5fec139f789628216d2837f1db8b68",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/int user.entity.User.hashCode(empty)"
    },
    {
      "id": 7281,
      "name": "toString",
      "type": "user.entity.User",
      "flags": "p",
      "display": "u.e.U.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "3e8ddabe895ebcd6de6077a2e8a30c486eff601e341d38f1ed7cf99bd4d06b97",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/java.lang.String user.entity.User.toString(empty)"
    },
    {
      "id": 7282,
      "name": "<clinit>",
      "type": "user.service.impl.UserServiceImpl",
      "flags": "s",
      "display": "u.s.i.USI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "c4ec6254ac04e40b560028133f62df47c543ba9063a0664bba237b5680784b9d",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/void user.service.impl.UserServiceImpl.<clinit>(empty)"
    },
    {
      "id": 13943,
      "name": "builder",
      "type": "user.entity.User",
      "flags": "ps",
      "display": "u.e.U.builder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "user.entity.User$UserBuilder",
      "endpointURI": null,
      "bytecodeHash": "29ef6aad6224e42c14646abf2617830d775ed4d9b9e7f226125a7d3adee09d6a",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.entity.User$UserBuilder user.entity.User.builder(empty)"
    },
    {
      "id": 13944,
      "name": "userId",
      "type": "user.entity.User$UserBuilder",
      "flags": "p",
      "display": "u.e.UUB.userId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "user.entity.User$UserBuilder",
      "endpointURI": null,
      "bytecodeHash": "fc1903b9d7f30f6aa74acae5fb44304bb4230244bed541df29250e57d3bea12b",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.userId(java.lang.String)"
    },
    {
      "id": 13945,
      "name": "userName",
      "type": "user.entity.User$UserBuilder",
      "flags": "p",
      "display": "u.e.UUB.userName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "user.entity.User$UserBuilder",
      "endpointURI": null,
      "bytecodeHash": "f1c7ed24bb61adab135c8de71da8b5d3309f40e928a2d2501e9c2391a3d07ce8",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.userName(java.lang.String)"
    },
    {
      "id": 13946,
      "name": "password",
      "type": "user.entity.User$UserBuilder",
      "flags": "p",
      "display": "u.e.UUB.password",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "user.entity.User$UserBuilder",
      "endpointURI": null,
      "bytecodeHash": "c3cbd5ce5fd8549dbca474859d787ed0ef6b0bea82538d7f636bb0fc6c2d9a50",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.password(java.lang.String)"
    },
    {
      "id": 13947,
      "name": "gender",
      "type": "user.entity.User$UserBuilder",
      "flags": "p",
      "display": "u.e.UUB.gender",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "user.entity.User$UserBuilder",
      "endpointURI": null,
      "bytecodeHash": "be7a9e818d5ba0d120b111fc7d03f50c3f29bcaa5a902bc3452fc174d0dfd74e",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.gender(int)"
    },
    {
      "id": 13948,
      "name": "documentType",
      "type": "user.entity.User$UserBuilder",
      "flags": "p",
      "display": "u.e.UUB.documentType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "user.entity.User$UserBuilder",
      "endpointURI": null,
      "bytecodeHash": "8a726332dd88aa38c96932c8a1e8257e09441ff6de16ca0ca86391967147d787",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.documentType(int)"
    },
    {
      "id": 13949,
      "name": "documentNum",
      "type": "user.entity.User$UserBuilder",
      "flags": "p",
      "display": "u.e.UUB.documentNum",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "user.entity.User$UserBuilder",
      "endpointURI": null,
      "bytecodeHash": "7a22ee7905e2288a508a06d83cdc6ddee5b8ff25119130c65a75e02edd9f45ad",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.documentNum(java.lang.String)"
    },
    {
      "id": 13950,
      "name": "email",
      "type": "user.entity.User$UserBuilder",
      "flags": "p",
      "display": "u.e.UUB.email",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "user.entity.User$UserBuilder",
      "endpointURI": null,
      "bytecodeHash": "d004b449336b4a7b47b277e2cc85759b00adfd8df8cabb8d3e52cfe2bf753fa0",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.entity.User$UserBuilder user.entity.User$UserBuilder.email(java.lang.String)"
    },
    {
      "id": 13951,
      "name": "build",
      "type": "user.entity.User$UserBuilder",
      "flags": "p",
      "display": "u.e.UUB.build",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "user.entity.User",
      "endpointURI": null,
      "bytecodeHash": "7a342b8cd447cf57cbe95c4b27eab3eb8c255114017f10b0916ee506d297c152",
      "microservice": "ts-user-service",
      "endpointMethod": false,
      "methodSignature": "ts-user-service/user.entity.User user.entity.User$UserBuilder.build(empty)"
    },
    {
      "id": 11377,
      "name": "verifyCode",
      "type": "verifycode.service.impl.VerifyCodeServiceImpl",
      "flags": "p",
      "display": "v.s.i.VCSI.verifyCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "javax.servlet.http.HttpServletRequest",
        "javax.servlet.http.HttpServletResponse",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "d4203743b8681da13d2e98c4bfa42065b919b2a8d5310083d9060b54357a92ae",
      "microservice": "ts-verification-code-service",
      "endpointMethod": false,
      "methodSignature": "ts-verification-code-service/boolean verifycode.service.impl.VerifyCodeServiceImpl.verifyCode(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 15506,
      "name": "addCookie",
      "type": "verifycode.util.CookieUtil",
      "flags": "ps",
      "display": "v.u.CU.addCookie",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "javax.servlet.http.HttpServletResponse",
        "java.lang.String",
        "java.lang.String",
        "int"
      ],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "c0a563b27d79879b951ef4c99b81ce3d6c0920545fe61f061d07c8137b989d4b",
      "microservice": "ts-verification-code-service",
      "endpointMethod": false,
      "methodSignature": "ts-verification-code-service/void verifycode.util.CookieUtil.addCookie(javax.servlet.http.HttpServletResponse, java.lang.String, java.lang.String, int)"
    },
    {
      "id": 15492,
      "name": "getRandColor",
      "type": "verifycode.service.impl.VerifyCodeServiceImpl",
      "flags": "s",
      "display": "v.s.i.VCSI.getRandColor",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int", "int"],
      "returnType": "java.awt.Color",
      "endpointURI": null,
      "bytecodeHash": "1cc15fb905cc7fa5057acc9b8ac000a1ef081f692b4adfb823c4c2c30dcc8b1c",
      "microservice": "ts-verification-code-service",
      "endpointMethod": false,
      "methodSignature": "ts-verification-code-service/java.awt.Color verifycode.service.impl.VerifyCodeServiceImpl.getRandColor(int, int)"
    },
    {
      "id": 7541,
      "name": "<clinit>",
      "type": "verifycode.controller.VerifyCodeController",
      "flags": "s",
      "display": "v.c.VCC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "937400c54b1047a2da293945e44dc76145100908779b575efbc68241e7ca4939",
      "microservice": "ts-verification-code-service",
      "endpointMethod": false,
      "methodSignature": "ts-verification-code-service/void verifycode.controller.VerifyCodeController.<clinit>(empty)"
    },
    {
      "id": 7542,
      "name": "imageCode",
      "type": "verifycode.controller.VerifyCodeController",
      "flags": "p",
      "display": "v.c.VCC.imageCode",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "org.springframework.http.HttpHeaders",
        "javax.servlet.http.HttpServletRequest",
        "javax.servlet.http.HttpServletResponse"
      ],
      "returnType": "void",
      "endpointURI": "/api/v1/verifycode/generate",
      "bytecodeHash": "c6f9b9e7914359375885d4890b51c769d37ea8b020c2911b521be82715b48436",
      "microservice": "ts-verification-code-service",
      "endpointMethod": true,
      "methodSignature": "ts-verification-code-service/void verifycode.controller.VerifyCodeController.imageCode(org.springframework.http.HttpHeaders, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"
    },
    {
      "id": 7543,
      "name": "verifyCode",
      "type": "verifycode.controller.VerifyCodeController",
      "flags": "p",
      "display": "v.c.VCC.verifyCode",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": [
        "java.lang.String",
        "javax.servlet.http.HttpServletRequest",
        "javax.servlet.http.HttpServletResponse",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": "/api/v1/verifycode/verify/{verifyCode}",
      "bytecodeHash": "8f540b2836350673388622c3e11932fa17ca01815ecbe877753647621bca4678",
      "microservice": "ts-verification-code-service",
      "endpointMethod": true,
      "methodSignature": "ts-verification-code-service/boolean verifycode.controller.VerifyCodeController.verifyCode(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7544,
      "name": "<clinit>",
      "type": "verifycode.service.impl.VerifyCodeServiceImpl",
      "flags": "s",
      "display": "v.s.i.VCSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "ba8768bce134ad0341a6b9595638ae101019ac5034781c242d414cfc4406edae",
      "microservice": "ts-verification-code-service",
      "endpointMethod": false,
      "methodSignature": "ts-verification-code-service/void verifycode.service.impl.VerifyCodeServiceImpl.<clinit>(empty)"
    },
    {
      "id": 11372,
      "name": "getImageCode",
      "type": "verifycode.service.impl.VerifyCodeServiceImpl",
      "flags": "p",
      "display": "v.s.i.VCSI.getImageCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "int",
        "int",
        "java.io.OutputStream",
        "javax.servlet.http.HttpServletRequest",
        "javax.servlet.http.HttpServletResponse",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "java.util.Map",
      "endpointURI": null,
      "bytecodeHash": "b3ca20fbb16dd18b8078d5e58ae7ef7839583e18aa0ed50e4237ceb192c89271",
      "microservice": "ts-verification-code-service",
      "endpointMethod": false,
      "methodSignature": "ts-verification-code-service/java.util.Map verifycode.service.impl.VerifyCodeServiceImpl.getImageCode(int, int, java.io.OutputStream, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 48988,
      "name": "verifyCode",
      "type": "verifycode.service.VerifyCodeService",
      "flags": "pa",
      "display": "v.s.VCS.verifyCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "javax.servlet.http.HttpServletRequest",
        "javax.servlet.http.HttpServletResponse",
        "java.lang.String",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "boolean",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-verification-code-service",
      "endpointMethod": false,
      "methodSignature": "ts-verification-code-service/boolean verifycode.service.VerifyCodeService.verifyCode(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 15501,
      "name": "getCookieByName",
      "type": "verifycode.util.CookieUtil",
      "flags": "ps",
      "display": "v.u.CU.getCookieByName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "javax.servlet.http.HttpServletRequest",
        "java.lang.String"
      ],
      "returnType": "javax.servlet.http.Cookie",
      "endpointURI": null,
      "bytecodeHash": "b6bf63348cba2cf6a19e948e9ea2cb5a9176c4957ccda062a9c595cbe872af17",
      "microservice": "ts-verification-code-service",
      "endpointMethod": false,
      "methodSignature": "ts-verification-code-service/javax.servlet.http.Cookie verifycode.util.CookieUtil.getCookieByName(javax.servlet.http.HttpServletRequest, java.lang.String)"
    },
    {
      "id": 19566,
      "name": "readCookieMap",
      "type": "verifycode.util.CookieUtil",
      "flags": "Ps",
      "display": "v.u.CU.readCookieMap",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["javax.servlet.http.HttpServletRequest"],
      "returnType": "java.util.Map",
      "endpointURI": null,
      "bytecodeHash": "d3024264cfe70e11054077830c133a245cc67c97e75dfa7bd708dd9d869abfe1",
      "microservice": "ts-verification-code-service",
      "endpointMethod": false,
      "methodSignature": "ts-verification-code-service/java.util.Map verifycode.util.CookieUtil.readCookieMap(javax.servlet.http.HttpServletRequest)"
    },
    {
      "id": 48687,
      "name": "getImageCode",
      "type": "verifycode.service.VerifyCodeService",
      "flags": "pa",
      "display": "v.s.VCS.getImageCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "int",
        "int",
        "java.io.OutputStream",
        "javax.servlet.http.HttpServletRequest",
        "javax.servlet.http.HttpServletResponse",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "java.util.Map",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-verification-code-service",
      "endpointMethod": false,
      "methodSignature": "ts-verification-code-service/java.util.Map verifycode.service.VerifyCodeService.getImageCode(int, int, java.io.OutputStream, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 18442,
      "name": "WaitListOrderExist",
      "type": "waitorder.service.Impl.WaitListOrderServiceImpl",
      "flags": "P",
      "display": "w.s.I.WLOSI.WaitListOrderExist",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List", "waitorder.entity.WaitListOrderVO"],
      "returnType": "java.lang.Boolean",
      "endpointURI": null,
      "bytecodeHash": "4d8666447fcfee8b66dff942cff72d441a4b4224a63d38d53985599b11f673a2",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.Boolean waitorder.service.Impl.WaitListOrderServiceImpl.WaitListOrderExist(java.util.List, waitorder.entity.WaitListOrderVO)"
    },
    {
      "id": 21517,
      "name": "<init>",
      "type": "waitorder.utils.PollThread$1",
      "flags": "",
      "display": "w.u.PT.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["waitorder.utils.PollThread"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "bd2bfd3e44259b9e6fdf0b30c2fccc3fae62d02b176e45ead22ecd6f4f172791",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/void waitorder.utils.PollThread$1.<init>(waitorder.utils.PollThread)"
    },
    {
      "id": 18446,
      "name": "<init>",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "9eb104d1cb41db26230365db0773b243daf616a70c7b3053511f0ebb593c6629",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/void waitorder.entity.WaitListOrder.<init>(empty)"
    },
    {
      "id": 14611,
      "name": "saveNewOrder",
      "type": "waitorder.service.Impl.WaitListOrderServiceImpl",
      "flags": "P",
      "display": "w.s.I.WLOSI.saveNewOrder",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "waitorder.entity.WaitListOrderVO",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "1d19eec0fe6d0dc015426eb654b73520346853ef921a31ae99096a89933e503b",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.saveNewOrder(waitorder.entity.WaitListOrderVO, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 14612,
      "name": "triggerThread",
      "type": "waitorder.service.Impl.WaitListOrderServiceImpl",
      "flags": "P",
      "display": "w.s.I.WLOSI.triggerThread",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "waitorder.entity.WaitListOrder",
        "waitorder.entity.WaitListOrderVO",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "2089f12df8ba239c32629cae7f735d57ac062503890c28e9eecc16aa4f260357",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.triggerThread(waitorder.entity.WaitListOrder, waitorder.entity.WaitListOrderVO, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 18452,
      "name": "<init>",
      "type": "waitorder.utils.PollThread",
      "flags": "p",
      "display": "w.u.PT.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "java.util.Date",
        "waitorder.service.WaitListOrderService",
        "waitorder.entity.WaitListOrderVO",
        "org.springframework.web.client.RestTemplate",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "306725c3447f723e423da9382a41a722241843efbd31907dc1c892873197e385",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/void waitorder.utils.PollThread.<init>(java.util.Date, waitorder.service.WaitListOrderService, waitorder.entity.WaitListOrderVO, org.springframework.web.client.RestTemplate, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11160,
      "name": "create",
      "type": "waitorder.service.Impl.WaitListOrderServiceImpl",
      "flags": "p",
      "display": "w.s.I.WLOSI.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "waitorder.entity.WaitListOrderVO",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "bd6a898c34d1b55190a3309dc9c03c00384f7a028903df422eea9c914984cc3a",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.create(waitorder.entity.WaitListOrderVO, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 13852,
      "name": "run",
      "type": "waitorder.utils.PollThread",
      "flags": "p",
      "display": "w.u.PT.run",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "2010bfc9cbe274bd283c67f2443cd5edc295fb2815759428d12dc5b7b5b88d2a",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/void waitorder.utils.PollThread.run(empty)"
    },
    {
      "id": 14620,
      "name": "<init>",
      "type": "waitorder.service.Impl.WaitListOrderServiceImpl$$Lambda/0xcaee37e7a646f1b9349273f350ba05880",
      "flags": "P",
      "display": "w.s.I.WLOSIL.<init>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.util.List"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "b61614a49eb6fbdc074ab289d16b7266d15e8d830461056c92959d0def2dc144",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/void waitorder.service.Impl.WaitListOrderServiceImpl$$Lambda/0xcaee37e7a646f1b9349273f350ba05880.<init>(java.util.List)"
    },
    {
      "id": 11165,
      "name": "getAllOrders",
      "type": "waitorder.service.Impl.WaitListOrderServiceImpl",
      "flags": "p",
      "display": "w.s.I.WLOSI.getAllOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "9fd490aaf65838217e1114909b4b871e8213f64207be74620ffb937bc5394449",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.getAllOrders(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11166,
      "name": "getAllWaitListOrders",
      "type": "waitorder.service.Impl.WaitListOrderServiceImpl",
      "flags": "p",
      "display": "w.s.I.WLOSI.getAllWaitListOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "568c0ee83e2e4049a66d290a5a162cee55e7bce2d677c08ffce75cd7b4bd33ae",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.getAllWaitListOrders(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 11167,
      "name": "getId",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.getId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "7dc9d88989496c3912711502894d8245cca5df71c3f56cc1e81eae29db9fcd1a",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getId(empty)"
    },
    {
      "id": 11168,
      "name": "getTravelTime",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.getTravelTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.Date",
      "endpointURI": null,
      "bytecodeHash": "aaf21e616968f4633e59ec1986bf1b41c8ce9762a9a53ef759812d42578fe3b8",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.util.Date waitorder.entity.WaitListOrder.getTravelTime(empty)"
    },
    {
      "id": 11169,
      "name": "getAccountId",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.getAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "81c401d3b165002f08397c47f28abed78c3b534f9c49837b7bc8614c63222be8",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getAccountId(empty)"
    },
    {
      "id": 11170,
      "name": "getContactsId",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.getContactsId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "351482787419cb548e387866a5102826e1a8ad255b201e26e7dfdb36fe9daca7",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getContactsId(empty)"
    },
    {
      "id": 11171,
      "name": "getContactsName",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.getContactsName",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "215514a3ba98d8863bce9e3203285417c77ecd99a4bbfb9b8e6245b3f27a5c82",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getContactsName(empty)"
    },
    {
      "id": 11172,
      "name": "getContactsDocumentType",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.getContactsDocumentType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "c82aed037c5afb54cd1235f0acbd9e50ea5462301ecc01f1e215873f28b1fa33",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/int waitorder.entity.WaitListOrder.getContactsDocumentType(empty)"
    },
    {
      "id": 11173,
      "name": "getContactsDocumentNumber",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.getContactsDocumentNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "f66e8250518af8e7eba2e824a653290c86670b3fe30fd9f290298cfd4523f135",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getContactsDocumentNumber(empty)"
    },
    {
      "id": 11174,
      "name": "getTrainNumber",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.getTrainNumber",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "5d159aedaf5714f84326c9966981962b7474d34226b625adc14123ec9271eb51",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getTrainNumber(empty)"
    },
    {
      "id": 11175,
      "name": "getSeatType",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.getSeatType",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "8217be20328da627bba017940d5ad267e4b75c5cfc8603457f0e6207b3a1b416",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/int waitorder.entity.WaitListOrder.getSeatType(empty)"
    },
    {
      "id": 11176,
      "name": "getFrom",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.getFrom",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "0fbdf12e3c14b4247d4a032174948df3d0189afc28989b2075c42b7c33cae81d",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getFrom(empty)"
    },
    {
      "id": 11177,
      "name": "getTo",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.getTo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "6cba6d2f6e2925f8e14d21afb10699d04d863cd842458a9c097cb81bd8339e3c",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getTo(empty)"
    },
    {
      "id": 11178,
      "name": "getPrice",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.getPrice",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "1ac2df7ba3a2c6e5813993ef99152a042e99a0448328ecb2bc980ff489723a92",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.getPrice(empty)"
    },
    {
      "id": 11179,
      "name": "getWaitUtilTime",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.getWaitUtilTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.Date",
      "endpointURI": null,
      "bytecodeHash": "6278dd49adb37f10a9c2cb0a76e54cac620ac84aa72f0b54a6c726302c57e732",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.util.Date waitorder.entity.WaitListOrder.getWaitUtilTime(empty)"
    },
    {
      "id": 11180,
      "name": "getCreatedTime",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.getCreatedTime",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.Date",
      "endpointURI": null,
      "bytecodeHash": "aaf21e616968f4633e59ec1986bf1b41c8ce9762a9a53ef759812d42578fe3b8",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.util.Date waitorder.entity.WaitListOrder.getCreatedTime(empty)"
    },
    {
      "id": 11181,
      "name": "getStatus",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.getStatus",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "aceda4608e5634858ac4549a55517bda00affa5bf68ea34f6900b22cd5e1c892",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/int waitorder.entity.WaitListOrder.getStatus(empty)"
    },
    {
      "id": 17720,
      "name": "getServiceUrl",
      "type": "waitorder.utils.PollThread",
      "flags": "P",
      "display": "w.u.PT.getServiceUrl",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "21fe2b5bb1128025f7910fdfc59000185330632d707a8f45bb40b38eb16fcae9",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.utils.PollThread.getServiceUrl(java.lang.String)"
    },
    {
      "id": 17721,
      "name": "modifyWaitListOrderStatus",
      "type": "waitorder.service.Impl.WaitListOrderServiceImpl",
      "flags": "p",
      "display": "w.s.I.WLOSI.modifyWaitListOrderStatus",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int", "java.lang.String"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "3865304352cf9de073d5fba11b0ab0770f83e5214e09b0a9c701c62700a98e18",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.Impl.WaitListOrderServiceImpl.modifyWaitListOrderStatus(int, java.lang.String)"
    },
    {
      "id": 17722,
      "name": "doPreserve",
      "type": "waitorder.utils.PollThread",
      "flags": "P",
      "display": "w.u.PT.doPreserve",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String", "org.springframework.http.HttpEntity"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "e6fd3aeed6dfdf60e5fc815bc07ae7086aebacc652b7367b47682f149eaa8c78",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.utils.PollThread.doPreserve(java.lang.String, org.springframework.http.HttpEntity)"
    },
    {
      "id": 7624,
      "name": "<clinit>",
      "type": "waitorder.controller.WaitListOrderController",
      "flags": "s",
      "display": "w.c.WLOC.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "44aba1e01918e965f7dad87da15d46215d1a104fe6fccdd7a0f139d2ef403a7e",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/void waitorder.controller.WaitListOrderController.<clinit>(empty)"
    },
    {
      "id": 7625,
      "name": "createNewOrder",
      "type": "waitorder.controller.WaitListOrderController",
      "flags": "p",
      "display": "w.c.WLOC.createNewOrder",
      "entryPoint": false,
      "httpMethod": "POST",
      "parameters": [
        "waitorder.entity.WaitListOrderVO",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/waitorderservice/order",
      "bytecodeHash": "cb46d3044bed21893080fe3f2ab39ad324684fb3956d96709b2ed890e578335c",
      "microservice": "ts-wait-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-wait-order-service/org.springframework.http.HttpEntity waitorder.controller.WaitListOrderController.createNewOrder(waitorder.entity.WaitListOrderVO, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7626,
      "name": "getAllOrders",
      "type": "waitorder.controller.WaitListOrderController",
      "flags": "p",
      "display": "w.c.WLOC.getAllOrders",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/waitorderservice/orders",
      "bytecodeHash": "14b1b5e586fe459cd7dde195cd45c126700cedebe27da52d666e0d81893e49de",
      "microservice": "ts-wait-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-wait-order-service/org.springframework.http.HttpEntity waitorder.controller.WaitListOrderController.getAllOrders(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 7627,
      "name": "getWaitListOrders",
      "type": "waitorder.controller.WaitListOrderController",
      "flags": "p",
      "display": "w.c.WLOC.getWaitListOrders",
      "entryPoint": false,
      "httpMethod": "GET",
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "org.springframework.http.HttpEntity",
      "endpointURI": "/api/v1/waitorderservice/waitlistorders",
      "bytecodeHash": "36b7d95dd80c3c293fa1cbff78478853eb7a7dcd2a67cb997abd327845bdcdc8",
      "microservice": "ts-wait-order-service",
      "endpointMethod": true,
      "methodSignature": "ts-wait-order-service/org.springframework.http.HttpEntity waitorder.controller.WaitListOrderController.getWaitListOrders(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 45515,
      "name": "getFrom",
      "type": "waitorder.entity.WaitListOrderVO",
      "flags": "p",
      "display": "w.e.WLOVO.getFrom",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "5fa52bee8d9ecaf9cc0dbb511c90d8e27e9656598177b730ca11725ba9764f76",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrderVO.getFrom(empty)"
    },
    {
      "id": 7628,
      "name": "home",
      "type": "waitorder.controller.WaitListOrderController",
      "flags": "p",
      "display": "w.c.WLOC.home",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "c4da0d8a6165d94d26b71d7644c3b49d7730372d252a19f9d8139a8ced18571e",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.controller.WaitListOrderController.home(empty)"
    },
    {
      "id": 45516,
      "name": "getTo",
      "type": "waitorder.entity.WaitListOrderVO",
      "flags": "p",
      "display": "w.e.WLOVO.getTo",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "b2e08cdc9daefc1804beba6325d79da5b11a0f54acbfd4dd233b1c223b1821c6",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrderVO.getTo(empty)"
    },
    {
      "id": 7629,
      "name": "hashCode",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.hashCode",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "int",
      "endpointURI": null,
      "bytecodeHash": "72b2a7e0d3c34bde754c6c57115dce84391eefc3dff171f444a3e15f2c5d72de",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/int waitorder.entity.WaitListOrder.hashCode(empty)"
    },
    {
      "id": 45517,
      "name": "getDate",
      "type": "waitorder.entity.WaitListOrderVO",
      "flags": "p",
      "display": "w.e.WLOVO.getDate",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.Date",
      "endpointURI": null,
      "bytecodeHash": "e2a545d2f27b5b2dbeec9597f9f893a33b0e73cf7fe736fb4e7b4a8f36e528d5",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.util.Date waitorder.entity.WaitListOrderVO.getDate(empty)"
    },
    {
      "id": 7630,
      "name": "toString",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.toString",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "258c46de0190d10bc0157b8beb4569ff301eddcfd994046566fa54fdb657b806",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrder.toString(empty)"
    },
    {
      "id": 7631,
      "name": "values",
      "type": "waitorder.entity.WaitListOrderStatus",
      "flags": "ps",
      "display": "w.e.WLOS.values",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "waitorder.entity.WaitListOrderStatus[]",
      "endpointURI": null,
      "bytecodeHash": "fbf4831f70da5cadf01d65d3a83ea4f409ce7a65aa40521b2ead04c6d586e31e",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/waitorder.entity.WaitListOrderStatus[] waitorder.entity.WaitListOrderStatus.values(empty)"
    },
    {
      "id": 7632,
      "name": "<clinit>",
      "type": "waitorder.service.Impl.WaitListOrderServiceImpl",
      "flags": "s",
      "display": "w.s.I.WLOSI.<clinit>",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "93a4328e30374203c42cb14dd77e8fd8620bafe7e37fdd049fb1d8b2c1730f77",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/void waitorder.service.Impl.WaitListOrderServiceImpl.<clinit>(empty)"
    },
    {
      "id": 45012,
      "name": "getAccountId",
      "type": "waitorder.entity.WaitListOrderVO",
      "flags": "p",
      "display": "w.e.WLOVO.getAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "50a94a34808085e9d9bc049e7d864135c84bb0cff502213e3534480e277d48d2",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrderVO.getAccountId(empty)"
    },
    {
      "id": 45013,
      "name": "modifyWaitListOrderStatus",
      "type": "waitorder.service.WaitListOrderService",
      "flags": "pa",
      "display": "w.s.WLOS.modifyWaitListOrderStatus",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int", "java.lang.String"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.WaitListOrderService.modifyWaitListOrderStatus(int, java.lang.String)"
    },
    {
      "id": 45015,
      "name": "findById",
      "type": "waitorder.repository.WaitListOrderRepository",
      "flags": "pa",
      "display": "w.r.WLOR.findById",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.Optional",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.util.Optional waitorder.repository.WaitListOrderRepository.findById(java.lang.String)"
    },
    {
      "id": 45017,
      "name": "setStatus",
      "type": "waitorder.entity.WaitListOrder",
      "flags": "p",
      "display": "w.e.WLO.setStatus",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["int"],
      "returnType": "void",
      "endpointURI": null,
      "bytecodeHash": "86b4733a3587c10a3fae65207b13ec07fd794aa774c8b8c1b85ffc55e889bb83",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/void waitorder.entity.WaitListOrder.setStatus(int)"
    },
    {
      "id": 45018,
      "name": "save",
      "type": "waitorder.repository.WaitListOrderRepository",
      "flags": "pby",
      "display": "w.r.WLOR.save",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.Object"],
      "returnType": "java.lang.Object",
      "endpointURI": null,
      "bytecodeHash": "36928beeeff32c7a7c2d88d0dbc872384436d1e9aa664922c159acd7ba63a073",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.Object waitorder.repository.WaitListOrderRepository.save(java.lang.Object)"
    },
    {
      "id": 45530,
      "name": "create",
      "type": "waitorder.service.WaitListOrderService",
      "flags": "pa",
      "display": "w.s.WLOS.create",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": [
        "waitorder.entity.WaitListOrderVO",
        "org.springframework.http.HttpHeaders"
      ],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.WaitListOrderService.create(waitorder.entity.WaitListOrderVO, org.springframework.http.HttpHeaders)"
    },
    {
      "id": 45531,
      "name": "findByAccountId",
      "type": "waitorder.repository.WaitListOrderRepository",
      "flags": "pa",
      "display": "w.r.WLOR.findByAccountId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["java.lang.String"],
      "returnType": "java.util.ArrayList",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.util.ArrayList waitorder.repository.WaitListOrderRepository.findByAccountId(java.lang.String)"
    },
    {
      "id": 45532,
      "name": "getContactsId",
      "type": "waitorder.entity.WaitListOrderVO",
      "flags": "p",
      "display": "w.e.WLOVO.getContactsId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "ef835e507bd4ea519107210e7bb65f3b42e6b56ba571981c71ee43aaf43ec38c",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrderVO.getContactsId(empty)"
    },
    {
      "id": 45533,
      "name": "getTripId",
      "type": "waitorder.entity.WaitListOrderVO",
      "flags": "p",
      "display": "w.e.WLOVO.getTripId",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.lang.String",
      "endpointURI": null,
      "bytecodeHash": "d73222d33f4bf7535a8b02b0d2cf70e7ffd05ba27d7c971ea11dda6b6a31b84a",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.lang.String waitorder.entity.WaitListOrderVO.getTripId(empty)"
    },
    {
      "id": 45560,
      "name": "getAllOrders",
      "type": "waitorder.service.WaitListOrderService",
      "flags": "pa",
      "display": "w.s.WLOS.getAllOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.WaitListOrderService.getAllOrders(org.springframework.http.HttpHeaders)"
    },
    {
      "id": 45561,
      "name": "findAll",
      "type": "waitorder.repository.WaitListOrderRepository",
      "flags": "pa",
      "display": "w.r.WLOR.findAll",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["empty"],
      "returnType": "java.util.List",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/java.util.List waitorder.repository.WaitListOrderRepository.findAll(empty)"
    },
    {
      "id": 45563,
      "name": "getAllWaitListOrders",
      "type": "waitorder.service.WaitListOrderService",
      "flags": "pa",
      "display": "w.s.WLOS.getAllWaitListOrders",
      "entryPoint": false,
      "httpMethod": null,
      "parameters": ["org.springframework.http.HttpHeaders"],
      "returnType": "edu.fudan.common.util.Response",
      "endpointURI": null,
      "bytecodeHash": "null",
      "microservice": "ts-wait-order-service",
      "endpointMethod": false,
      "methodSignature": "ts-wait-order-service/edu.fudan.common.util.Response waitorder.service.WaitListOrderService.getAllWaitListOrders(org.springframework.http.HttpHeaders)"
    }
  ]
}
